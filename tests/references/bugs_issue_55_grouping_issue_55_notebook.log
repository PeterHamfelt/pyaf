INFO:pyaf.std:START_HIERARCHICAL_PLOTTING
INFO:pyaf.std:END_HIERARCHICAL_PLOTTING_TIME_IN_SECONDS 0.4151287078857422
INFO:pyaf.std:START_HIERARCHICAL_TRAINING
INFO:pyaf.hierarchical:TRAINING_HIERARCHICAL_MODELS_LEVEL_SIGNAL [(0, 'ALSACE_BLANC_BE'), (0, 'ALSACE_BLANC_CN'), (0, 'ALSACE_BLANC_DE'), (0, 'ALSACE_BLANC_GB'), (0, 'ALSACE_BLANC_US'), (0, 'BEAUJOLAIS_ROUGE_BE'), (0, 'BEAUJOLAIS_ROUGE_CN'), (0, 'BEAUJOLAIS_ROUGE_DE'), (0, 'BEAUJOLAIS_ROUGE_GB'), (0, 'BEAUJOLAIS_ROUGE_US'), (0, 'BORDEAUX_BLANC_BE'), (0, 'BORDEAUX_BLANC_CN'), (0, 'BORDEAUX_BLANC_DE'), (0, 'BORDEAUX_BLANC_GB'), (0, 'BORDEAUX_BLANC_US'), (0, 'BORDEAUX_ROUGE_BE'), (0, 'BORDEAUX_ROUGE_CN'), (0, 'BORDEAUX_ROUGE_DE'), (0, 'BORDEAUX_ROUGE_GB'), (0, 'BORDEAUX_ROUGE_US'), (1, '_BLANC_BE'), (1, '_BLANC_CN'), (1, '_BLANC_DE'), (1, '_BLANC_GB'), (1, '_BLANC_US'), (1, '_ROUGE_BE'), (1, '_ROUGE_CN'), (1, '_ROUGE_DE'), (1, '_ROUGE_GB'), (1, '_ROUGE_US'), (2, '__BE'), (2, '__CN'), (2, '__DE'), (2, '__GB'), (2, '__US'), (3, '__')]
{'Levels': None, 'Data': None, 'Groups': {'Country': ['GB', 'US', 'DE', 'BE', 'CN'], 'Variant': ['BLANC', 'ROUGE'], 'Wine': ['ALSACE', 'BEAUJOLAIS', 'BORDEAUX']}, 'GroupOrder': ['Wine', 'Variant', 'Country'], 'Type': 'Grouped'}
<IPython.core.display.Image object>
{0: {'ALSACE_BLANC_BE': set(), 'ALSACE_BLANC_CN': set(), 'ALSACE_BLANC_DE': set(), 'ALSACE_BLANC_GB': set(), 'ALSACE_BLANC_US': set(), 'BEAUJOLAIS_ROUGE_BE': set(), 'BEAUJOLAIS_ROUGE_CN': set(), 'BEAUJOLAIS_ROUGE_DE': set(), 'BEAUJOLAIS_ROUGE_GB': set(), 'BEAUJOLAIS_ROUGE_US': set(), 'BORDEAUX_BLANC_BE': set(), 'BORDEAUX_BLANC_CN': set(), 'BORDEAUX_BLANC_DE': set(), 'BORDEAUX_BLANC_GB': set(), 'BORDEAUX_BLANC_US': set(), 'BORDEAUX_ROUGE_BE': set(), 'BORDEAUX_ROUGE_CN': set(), 'BORDEAUX_ROUGE_DE': set(), 'BORDEAUX_ROUGE_GB': set(), 'BORDEAUX_ROUGE_US': set()}, 1: {'_BLANC_BE': {'BORDEAUX_BLANC_BE', 'ALSACE_BLANC_BE'}, '_BLANC_CN': {'ALSACE_BLANC_CN', 'BORDEAUX_BLANC_CN'}, '_BLANC_DE': {'BORDEAUX_BLANC_DE', 'ALSACE_BLANC_DE'}, '_BLANC_GB': {'ALSACE_BLANC_GB', 'BORDEAUX_BLANC_GB'}, '_BLANC_US': {'ALSACE_BLANC_US', 'BORDEAUX_BLANC_US'}, '_ROUGE_BE': {'BORDEAUX_ROUGE_BE', 'BEAUJOLAIS_ROUGE_BE'}, '_ROUGE_CN': {'BEAUJOLAIS_ROUGE_CN', 'BORDEAUX_ROUGE_CN'}, '_ROUGE_DE': {'BORDEAUX_ROUGE_DE', 'BEAUJOLAIS_ROUGE_DE'}, '_ROUGE_GB': {'BORDEAUX_ROUGE_GB', 'BEAUJOLAIS_ROUGE_GB'}, '_ROUGE_US': {'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_ROUGE_US'}}, 2: {'__BE': {'_BLANC_BE', '_ROUGE_BE'}, '__CN': {'_BLANC_CN', '_ROUGE_CN'}, '__DE': {'_BLANC_DE', '_ROUGE_DE'}, '__GB': {'_BLANC_GB', '_ROUGE_GB'}, '__US': {'_BLANC_US', '_ROUGE_US'}}, 3: {'__': {'__BE', '__US', '__DE', '__CN', '__GB'}}}
INFO:pyaf.std:START_TRAINING 'ALSACE_BLANC_BE'
INFO:pyaf.std:START_TRAINING 'ALSACE_BLANC_DE'
INFO:pyaf.std:START_TRAINING 'ALSACE_BLANC_US'
INFO:pyaf.std:START_TRAINING 'BEAUJOLAIS_ROUGE_CN'
INFO:pyaf.std:START_TRAINING 'BEAUJOLAIS_ROUGE_GB'
INFO:pyaf.std:START_TRAINING 'BORDEAUX_BLANC_BE'
INFO:pyaf.std:START_TRAINING 'BORDEAUX_BLANC_US'
INFO:pyaf.std:START_TRAINING 'BORDEAUX_BLANC_DE'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BORDEAUX_BLANC_DE' 6.511942386627197
INFO:pyaf.std:START_TRAINING 'BORDEAUX_BLANC_GB'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BORDEAUX_BLANC_US' 6.68208384513855
INFO:pyaf.std:START_TRAINING 'BORDEAUX_ROUGE_BE'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'ALSACE_BLANC_DE' 6.867068290710449
INFO:pyaf.std:START_TRAINING 'ALSACE_BLANC_GB'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BEAUJOLAIS_ROUGE_CN' 7.782456636428833
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BORDEAUX_BLANC_BE' 7.768961191177368
INFO:pyaf.std:START_TRAINING 'BORDEAUX_BLANC_CN'
INFO:pyaf.std:START_TRAINING 'BEAUJOLAIS_ROUGE_DE'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'ALSACE_BLANC_BE' 7.980624198913574
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BEAUJOLAIS_ROUGE_GB' 7.885958194732666
INFO:pyaf.std:START_TRAINING 'ALSACE_BLANC_CN'
INFO:pyaf.std:START_TRAINING 'BEAUJOLAIS_ROUGE_US'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'ALSACE_BLANC_US' 8.507474184036255
INFO:pyaf.std:START_TRAINING 'BEAUJOLAIS_ROUGE_BE'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BORDEAUX_ROUGE_BE' 7.421518087387085
INFO:pyaf.std:START_TRAINING 'BORDEAUX_ROUGE_CN'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BORDEAUX_BLANC_GB' 7.95048713684082
INFO:pyaf.std:START_TRAINING 'BORDEAUX_ROUGE_GB'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BEAUJOLAIS_ROUGE_DE' 7.331292152404785
INFO:pyaf.std:START_TRAINING '_BLANC_BE'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BORDEAUX_BLANC_CN' 8.054427146911621
INFO:pyaf.std:START_TRAINING '_BLANC_DE'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BEAUJOLAIS_ROUGE_BE' 7.752685308456421
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'ALSACE_BLANC_GB' 9.46520447731018
INFO:pyaf.std:START_TRAINING '_BLANC_US'
INFO:pyaf.std:START_TRAINING '_ROUGE_CN'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'ALSACE_BLANC_CN' 8.482020616531372
INFO:pyaf.std:START_TRAINING '_ROUGE_GB'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BEAUJOLAIS_ROUGE_US' 8.643223285675049
INFO:pyaf.std:START_TRAINING '__BE'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BORDEAUX_ROUGE_CN' 6.7529802322387695
INFO:pyaf.std:START_TRAINING 'BORDEAUX_ROUGE_DE'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BORDEAUX_ROUGE_GB' 7.1798095703125
INFO:pyaf.std:START_TRAINING 'BORDEAUX_ROUGE_US'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '_BLANC_BE' 6.605534076690674
INFO:pyaf.std:START_TRAINING '_BLANC_CN'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '_BLANC_DE' 6.735365152359009
INFO:pyaf.std:START_TRAINING '_BLANC_GB'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '_ROUGE_GB' 6.685166597366333
INFO:pyaf.std:START_TRAINING '_ROUGE_US'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '_BLANC_US' 7.02920126914978
INFO:pyaf.std:START_TRAINING '_ROUGE_BE'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '__BE' 7.371317148208618
INFO:pyaf.std:START_TRAINING '__CN'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '_ROUGE_CN' 7.617284059524536
INFO:pyaf.std:START_TRAINING '_ROUGE_DE'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BORDEAUX_ROUGE_DE' 6.696187496185303
INFO:pyaf.std:START_TRAINING '__DE'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '_BLANC_CN' 6.073875665664673
INFO:pyaf.std:START_TRAINING '__US'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'BORDEAUX_ROUGE_US' 6.522196531295776
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '_BLANC_GB' 5.937647819519043
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '_ROUGE_BE' 6.081986665725708
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '__CN' 5.587504625320435
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '_ROUGE_US' 6.46966290473938
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '_ROUGE_DE' 6.15573263168335
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '__DE' 4.797291040420532
INFO:pyaf.std:START_TRAINING '__GB'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '__US' 4.748921871185303
INFO:pyaf.std:START_TRAINING '__'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '__' 4.288451194763184
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '__GB' 4.519926071166992
INFO:pyaf.hierarchical:FORECASTING_HIERARCHICAL_MODELS_LEVEL_SIGNAL [(0, 'ALSACE_BLANC_BE'), (0, 'ALSACE_BLANC_CN'), (0, 'ALSACE_BLANC_DE'), (0, 'ALSACE_BLANC_GB'), (0, 'ALSACE_BLANC_US'), (0, 'BEAUJOLAIS_ROUGE_BE'), (0, 'BEAUJOLAIS_ROUGE_CN'), (0, 'BEAUJOLAIS_ROUGE_DE'), (0, 'BEAUJOLAIS_ROUGE_GB'), (0, 'BEAUJOLAIS_ROUGE_US'), (0, 'BORDEAUX_BLANC_BE'), (0, 'BORDEAUX_BLANC_CN'), (0, 'BORDEAUX_BLANC_DE'), (0, 'BORDEAUX_BLANC_GB'), (0, 'BORDEAUX_BLANC_US'), (0, 'BORDEAUX_ROUGE_BE'), (0, 'BORDEAUX_ROUGE_CN'), (0, 'BORDEAUX_ROUGE_DE'), (0, 'BORDEAUX_ROUGE_GB'), (0, 'BORDEAUX_ROUGE_US'), (1, '_BLANC_BE'), (1, '_BLANC_CN'), (1, '_BLANC_DE'), (1, '_BLANC_GB'), (1, '_BLANC_US'), (1, '_ROUGE_BE'), (1, '_ROUGE_CN'), (1, '_ROUGE_DE'), (1, '_ROUGE_GB'), (1, '_ROUGE_US'), (2, '__BE'), (2, '__CN'), (2, '__DE'), (2, '__GB'), (2, '__US'), (3, '__')]
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.0650782585144043
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.15339303016662598
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.0778648853302002
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.0773916244506836
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.06245088577270508
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.057175397872924805
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.056793212890625
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.05188751220703125
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.06361889839172363
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.053084611892700195
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.02879929542541504
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.05890202522277832
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.05069255828857422
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.06350946426391602
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.052474260330200195
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.051283836364746094
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.06387019157409668
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.04843902587890625
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.04794454574584961
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.05652451515197754
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.05813741683959961
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.04352569580078125
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.04756522178649902
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.07496261596679688
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.056856393814086914
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.05247187614440918
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.0576324462890625
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.0509035587310791
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.07494044303894043
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.062145233154296875
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.06197094917297363
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.0629420280456543
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.05172371864318848
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.04593825340270996
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.04519343376159668
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.06953811645507812
INFO:pyaf.std:STRUCTURE [0, 1, 2, 3]
INFO:pyaf.std:DATASET_COLUMNS Index(['Month', 'ALSACE_BLANC_BE', 'ALSACE_BLANC_BE_Forecast',
       'ALSACE_BLANC_CN', 'ALSACE_BLANC_CN_Forecast', 'ALSACE_BLANC_DE',
       'ALSACE_BLANC_DE_Forecast', 'ALSACE_BLANC_GB',
       'ALSACE_BLANC_GB_Forecast', 'ALSACE_BLANC_US',
       ...
       '_ROUGE_CN_BU_Forecast', '_ROUGE_DE_BU_Forecast',
       '_ROUGE_GB_BU_Forecast', '_ROUGE_US_BU_Forecast', '__BE_BU_Forecast',
       '__CN_BU_Forecast', '__DE_BU_Forecast', '__GB_BU_Forecast',
       '__US_BU_Forecast', '___BU_Forecast'],
      dtype='object', length=109)
INFO:pyaf.std:STRUCTURE_LEVEL (0, ['ALSACE_BLANC_BE', 'ALSACE_BLANC_CN', 'ALSACE_BLANC_DE', 'ALSACE_BLANC_GB', 'ALSACE_BLANC_US', 'BEAUJOLAIS_ROUGE_BE', 'BEAUJOLAIS_ROUGE_CN', 'BEAUJOLAIS_ROUGE_DE', 'BEAUJOLAIS_ROUGE_GB', 'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_BLANC_BE', 'BORDEAUX_BLANC_CN', 'BORDEAUX_BLANC_DE', 'BORDEAUX_BLANC_GB', 'BORDEAUX_BLANC_US', 'BORDEAUX_ROUGE_BE', 'BORDEAUX_ROUGE_CN', 'BORDEAUX_ROUGE_DE', 'BORDEAUX_ROUGE_GB', 'BORDEAUX_ROUGE_US'])
INFO:pyaf.std:MODEL_LEVEL (0, ['ALSACE_BLANC_BE', 'ALSACE_BLANC_CN', 'ALSACE_BLANC_DE', 'ALSACE_BLANC_GB', 'ALSACE_BLANC_US', 'BEAUJOLAIS_ROUGE_BE', 'BEAUJOLAIS_ROUGE_CN', 'BEAUJOLAIS_ROUGE_DE', 'BEAUJOLAIS_ROUGE_GB', 'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_BLANC_BE', 'BORDEAUX_BLANC_CN', 'BORDEAUX_BLANC_DE', 'BORDEAUX_BLANC_GB', 'BORDEAUX_BLANC_US', 'BORDEAUX_ROUGE_BE', 'BORDEAUX_ROUGE_CN', 'BORDEAUX_ROUGE_DE', 'BORDEAUX_ROUGE_GB', 'BORDEAUX_ROUGE_US'])
INFO:pyaf.std:STRUCTURE_LEVEL (1, ['_BLANC_BE', '_BLANC_CN', '_BLANC_DE', '_BLANC_GB', '_BLANC_US', '_ROUGE_BE', '_ROUGE_CN', '_ROUGE_DE', '_ROUGE_GB', '_ROUGE_US'])
INFO:pyaf.std:MODEL_LEVEL (1, ['_BLANC_BE', '_BLANC_CN', '_BLANC_DE', '_BLANC_GB', '_BLANC_US', '_ROUGE_BE', '_ROUGE_CN', '_ROUGE_DE', '_ROUGE_GB', '_ROUGE_US'])
INFO:pyaf.std:STRUCTURE_LEVEL (2, ['__BE', '__CN', '__DE', '__GB', '__US'])
INFO:pyaf.std:MODEL_LEVEL (2, ['__BE', '__CN', '__DE', '__GB', '__US'])
INFO:pyaf.std:STRUCTURE_LEVEL (3, ['__'])
INFO:pyaf.std:MODEL_LEVEL (3, ['__'])
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('ALSACE_BLANC_BE_BU', 199577.56080021942, 0.1418, 199577.56080021942, 0.1418)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('ALSACE_BLANC_BE_BU', 444837.29072987556, 0.2979, 444837.29072987556, 0.2979)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('ALSACE_BLANC_CN_BU', 54489.48176893604, 0.4769, 54489.48176893604, 0.4769)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('ALSACE_BLANC_CN_BU', 86153.69023954056, 0.3401, 86153.69023954056, 0.3401)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('ALSACE_BLANC_DE_BU', 381643.9708516124, 0.3037, 381643.9708516124, 0.3037)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('ALSACE_BLANC_DE_BU', 144769.4922736975, 0.1906, 144769.4922736975, 0.1906)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('ALSACE_BLANC_GB_BU', 127746.35430699537, 0.2964, 127746.35430699537, 0.2964)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('ALSACE_BLANC_GB_BU', 66480.16663925201, 0.1402, 66480.16663925201, 0.1402)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('ALSACE_BLANC_US_BU', 165735.85694123106, 0.2222, 165735.85694123106, 0.2222)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('ALSACE_BLANC_US_BU', 178019.5721837483, 0.238, 178019.5721837483, 0.238)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BEAUJOLAIS_ROUGE_BE_BU', 106802.38374498668, 0.5435, 106802.38374498668, 0.5435)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BEAUJOLAIS_ROUGE_BE_BU', 126806.98617848834, 0.4458, 126806.98617848834, 0.4458)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BEAUJOLAIS_ROUGE_CN_BU', 386578.75642473, 1.5835, 386578.75642473, 1.5835)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BEAUJOLAIS_ROUGE_CN_BU', 190554.48176906724, 1.0, 190554.48176906724, 1.0)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BEAUJOLAIS_ROUGE_DE_BU', 268908.8411572105, 0.6182, 268908.8411572105, 0.6182)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BEAUJOLAIS_ROUGE_DE_BU', 155871.73582628762, 0.6144, 155871.73582628762, 0.6144)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BEAUJOLAIS_ROUGE_GB_BU', 574972.8645601943, 0.7216, 574972.8645601943, 0.7216)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BEAUJOLAIS_ROUGE_GB_BU', 485564.32192152576, 0.3584, 485564.32192152576, 0.3584)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BEAUJOLAIS_ROUGE_US_BU', 867034.3960889542, 0.5762, 867034.3960889542, 0.5762)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BEAUJOLAIS_ROUGE_US_BU', 774435.6013471647, 0.2867, 774435.6013471647, 0.2867)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BORDEAUX_BLANC_BE_BU', 71511.23866079605, 0.1248, 71511.23866079605, 0.1248)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BORDEAUX_BLANC_BE_BU', 133791.73715896055, 0.3373, 133791.73715896055, 0.3373)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BORDEAUX_BLANC_CN_BU', 236751.57395505198, 0.4861, 236751.57395505198, 0.4861)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BORDEAUX_BLANC_CN_BU', 477151.95433478977, 0.306, 477151.95433478977, 0.306)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BORDEAUX_BLANC_DE_BU', 270676.3073877788, 0.3966, 270676.3073877788, 0.3966)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BORDEAUX_BLANC_DE_BU', 201387.2590557804, 0.2533, 201387.2590557804, 0.2533)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BORDEAUX_BLANC_GB_BU', 282372.93395753554, 0.259, 282372.93395753554, 0.259)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BORDEAUX_BLANC_GB_BU', 99936.68789248551, 0.133, 99936.68789248551, 0.133)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BORDEAUX_BLANC_US_BU', 403395.3115675406, 0.383, 403395.3115675406, 0.383)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BORDEAUX_BLANC_US_BU', 252977.83561553678, 0.2096, 252977.83561553678, 0.2096)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BORDEAUX_ROUGE_BE_BU', 1034134.42595624, 0.1511, 1034134.42595624, 0.1511)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BORDEAUX_ROUGE_BE_BU', 921082.2727095842, 0.1915, 921082.2727095842, 0.1915)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BORDEAUX_ROUGE_CN_BU', 5899859.734380173, 0.3932, 5899859.734380173, 0.3932)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BORDEAUX_ROUGE_CN_BU', 2646130.4232281293, 0.2216, 2646130.4232281293, 0.2216)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BORDEAUX_ROUGE_DE_BU', 2172921.2151209502, 0.337, 2172921.2151209502, 0.337)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BORDEAUX_ROUGE_DE_BU', 1186136.6973808934, 0.272, 1186136.6973808934, 0.272)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BORDEAUX_ROUGE_GB_BU', 4522958.716730319, 0.3547, 4522958.716730319, 0.3547)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BORDEAUX_ROUGE_GB_BU', 1259434.9100598427, 0.1592, 1259434.9100598427, 0.1592)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('BORDEAUX_ROUGE_US_BU', 3670201.8525633416, 0.3846, 3670201.8525633416, 0.3846)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('BORDEAUX_ROUGE_US_BU', 1279973.4076019498, 0.1988, 1279973.4076019498, 0.1988)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('_BLANC_BE_BU', 195549.86706984605, 0.0927, 225853.5447051733, 0.1098)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('_BLANC_BE_BU', 536239.7343081034, 0.2702, 522244.2641875355, 0.2642)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('_BLANC_CN_BU', 247309.123453371, 0.3872, 237419.5469409291, 0.3689)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('_BLANC_CN_BU', 447221.0158893082, 0.255, 479862.8871668425, 0.2483)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('_BLANC_DE_BU', 473858.77604200575, 0.2715, 516762.08294615545, 0.2515)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('_BLANC_DE_BU', 141608.55178546874, 0.137, 121463.47982179142, 0.1045)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('_BLANC_GB_BU', 369107.25205425656, 0.2356, 354746.8190903641, 0.2229)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('_BLANC_GB_BU', 194430.4785616541, 0.1475, 146152.72681701818, 0.1187)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('_BLANC_US_BU', 836798.0941911467, 0.363, 466507.73574899737, 0.2395)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('_BLANC_US_BU', 406290.2059059647, 0.1927, 397588.7091777974, 0.1998)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('_ROUGE_BE_BU', 1066816.7763162635, 0.1493, 1067817.9513976662, 0.1507)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('_ROUGE_BE_BU', 946236.4320116949, 0.2045, 967280.5430128897, 0.1833)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('_ROUGE_CN_BU', 5930253.046676317, 0.3957, 5988411.497087892, 0.3988)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('_ROUGE_CN_BU', 2626225.262002647, 0.2253, 2743674.170481026, 0.2246)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('_ROUGE_DE_BU', 2277685.553655341, 0.347, 2271457.5193558116, 0.3415)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('_ROUGE_DE_BU', 1118073.196200151, 0.2428, 1175679.1984854105, 0.2572)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('_ROUGE_GB_BU', 4785177.235679521, 0.3701, 4785177.235679521, 0.3701)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('_ROUGE_GB_BU', 1442701.9862164112, 0.1611, 1442701.9862164112, 0.1611)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('_ROUGE_US_BU', 4279000.142370734, 0.4093, 3907937.4940971583, 0.3578)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('_ROUGE_US_BU', 1353323.9885370731, 0.1533, 1692454.6970252744, 0.2136)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('__BE_BU', 922592.1782983575, 0.1016, 1144287.3667307827, 0.1221)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('__BE_BU', 1150941.4629769186, 0.1693, 1375558.9776642236, 0.2034)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('__CN_BU', 5843680.673765567, 0.3787, 6063900.95866033, 0.3834)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('__CN_BU', 2852608.7810445046, 0.2353, 2837857.166047164, 0.2296)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('__DE_BU', 2608066.128208228, 0.2663, 2400898.8916825736, 0.2959)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('__DE_BU', 1311702.0584794695, 0.2377, 1208214.0907442418, 0.213)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('__GB_BU', 5023345.709032571, 0.3503, 4792591.060475021, 0.3325)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('__GB_BU', 1567222.4394758958, 0.1579, 1505564.5111635649, 0.1438)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('__US_BU', 2510501.287288395, 0.1917, 4545918.033195119, 0.3339)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('__US_BU', 2096609.4319779796, 0.2209, 1924359.443875129, 0.2002)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_FIT_PERF ('___BU', 6571495.053618537, 0.1073, 11316113.431798289, 0.1721)
INFO:pyaf.std:REPORT_COMBINED_FORECASTS_VALID_PERF ('___BU', 6516614.471320466, 0.1367, 5391526.1996807065, 0.1154)
INFO:pyaf.std:END_HIERARCHICAL_TRAINING_TIME_IN_SECONDS 51.33501124382019
INFO:pyaf.std:START_HIERARCHICAL_PLOTTING
INFO:pyaf.std:END_HIERARCHICAL_PLOTTING_TIME_IN_SECONDS 0.39403676986694336
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='__CN' Length=46  Min=5739856.0 Max=20299168.0  Mean=12078814.967391305 StdDev=3221460.4046913716
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff___CN' Min=-7241263.5 Max=8724178.0  Mean=57784.19565217391 StdDev=3063515.4226825424
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff___CN_ConstantTrend_residue_zeroCycle_residue_AR(11)' [ConstantTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff___CN_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff___CN_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff___CN_ConstantTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3787 MAPE_Forecast=0.2353 MAPE_Test=0.0926
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.4745 SMAPE_Forecast=0.1973 SMAPE_Test=0.0885
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.1716 MASE_Forecast=0.7336 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=4760283.971866045 L1_Forecast=2276336.9642346427 L1_Test=1104571.0871963538
INFO:pyaf.std:MODEL_L2 L2_Fit=5843680.673765567 L2_Forecast=2852608.7810445046 L2_Test=1104571.0871963538
INFO:pyaf.std:MODEL_COMPLEXITY 41
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag3 -0.3585143511228835
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag2 -0.35356774613799713
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag9 -0.2558327092791704
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag7 0.1268650172641117
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag6 -0.08451565226966903
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag5 -0.05216781461233465
INFO:pyaf.std:AR_MODEL_COEFF 7 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag11 -0.03460543608523329
INFO:pyaf.std:AR_MODEL_COEFF 8 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag10 -0.030658322709511424
INFO:pyaf.std:AR_MODEL_COEFF 9 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag1 0.017510237302299364
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:START_PLOTTING
INFO:pyaf.std:END_PLOTTING_TIME_IN_SECONDS 1.1659939289093018
INFO:pyaf.std:START_HIERARCHICAL_FORECASTING
INFO:pyaf.hierarchical:FORECASTING_HIERARCHICAL_MODELS_LEVEL_SIGNAL [(0, 'ALSACE_BLANC_BE'), (0, 'ALSACE_BLANC_CN'), (0, 'ALSACE_BLANC_DE'), (0, 'ALSACE_BLANC_GB'), (0, 'ALSACE_BLANC_US'), (0, 'BEAUJOLAIS_ROUGE_BE'), (0, 'BEAUJOLAIS_ROUGE_CN'), (0, 'BEAUJOLAIS_ROUGE_DE'), (0, 'BEAUJOLAIS_ROUGE_GB'), (0, 'BEAUJOLAIS_ROUGE_US'), (0, 'BORDEAUX_BLANC_BE'), (0, 'BORDEAUX_BLANC_CN'), (0, 'BORDEAUX_BLANC_DE'), (0, 'BORDEAUX_BLANC_GB'), (0, 'BORDEAUX_BLANC_US'), (0, 'BORDEAUX_ROUGE_BE'), (0, 'BORDEAUX_ROUGE_CN'), (0, 'BORDEAUX_ROUGE_DE'), (0, 'BORDEAUX_ROUGE_GB'), (0, 'BORDEAUX_ROUGE_US'), (1, '_BLANC_BE'), (1, '_BLANC_CN'), (1, '_BLANC_DE'), (1, '_BLANC_GB'), (1, '_BLANC_US'), (1, '_ROUGE_BE'), (1, '_ROUGE_CN'), (1, '_ROUGE_DE'), (1, '_ROUGE_GB'), (1, '_ROUGE_US'), (2, '__BE'), (2, '__CN'), (2, '__DE'), (2, '__GB'), (2, '__US'), (3, '__')]
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 50 entries, 0 to 49
Columns: 177 entries, Month to RHÔNE_ROUGE_US
dtypes: datetime64[ns](1), float64(56), int64(120)
memory usage: 69.3 KB
dict_keys(['Structure', 'Models'])
{0: {'ALSACE_BLANC_BE': set(), 'ALSACE_BLANC_CN': set(), 'ALSACE_BLANC_DE': set(), 'ALSACE_BLANC_GB': set(), 'ALSACE_BLANC_US': set(), 'BEAUJOLAIS_ROUGE_BE': set(), 'BEAUJOLAIS_ROUGE_CN': set(), 'BEAUJOLAIS_ROUGE_DE': set(), 'BEAUJOLAIS_ROUGE_GB': set(), 'BEAUJOLAIS_ROUGE_US': set(), 'BORDEAUX_BLANC_BE': set(), 'BORDEAUX_BLANC_CN': set(), 'BORDEAUX_BLANC_DE': set(), 'BORDEAUX_BLANC_GB': set(), 'BORDEAUX_BLANC_US': set(), 'BORDEAUX_ROUGE_BE': set(), 'BORDEAUX_ROUGE_CN': set(), 'BORDEAUX_ROUGE_DE': set(), 'BORDEAUX_ROUGE_GB': set(), 'BORDEAUX_ROUGE_US': set()}, 1: {'_BLANC_BE': {'BORDEAUX_BLANC_BE', 'ALSACE_BLANC_BE'}, '_BLANC_CN': {'ALSACE_BLANC_CN', 'BORDEAUX_BLANC_CN'}, '_BLANC_DE': {'BORDEAUX_BLANC_DE', 'ALSACE_BLANC_DE'}, '_BLANC_GB': {'ALSACE_BLANC_GB', 'BORDEAUX_BLANC_GB'}, '_BLANC_US': {'ALSACE_BLANC_US', 'BORDEAUX_BLANC_US'}, '_ROUGE_BE': {'BORDEAUX_ROUGE_BE', 'BEAUJOLAIS_ROUGE_BE'}, '_ROUGE_CN': {'BEAUJOLAIS_ROUGE_CN', 'BORDEAUX_ROUGE_CN'}, '_ROUGE_DE': {'BORDEAUX_ROUGE_DE', 'BEAUJOLAIS_ROUGE_DE'}, '_ROUGE_GB': {'BORDEAUX_ROUGE_GB', 'BEAUJOLAIS_ROUGE_GB'}, '_ROUGE_US': {'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_ROUGE_US'}}, 2: {'__BE': {'_BLANC_BE', '_ROUGE_BE'}, '__CN': {'_BLANC_CN', '_ROUGE_CN'}, '__DE': {'_BLANC_DE', '_ROUGE_DE'}, '__GB': {'_BLANC_GB', '_ROUGE_GB'}, '__US': {'_BLANC_US', '_ROUGE_US'}}, 3: {'__': {'__BE', '__US', '__DE', '__CN', '__GB'}}}
dict_keys(['ALSACE_BLANC_BE', 'ALSACE_BLANC_CN', 'ALSACE_BLANC_DE', 'ALSACE_BLANC_GB', 'ALSACE_BLANC_US', 'BEAUJOLAIS_ROUGE_BE', 'BEAUJOLAIS_ROUGE_CN', 'BEAUJOLAIS_ROUGE_DE', 'BEAUJOLAIS_ROUGE_GB', 'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_BLANC_BE', 'BORDEAUX_BLANC_CN', 'BORDEAUX_BLANC_DE', 'BORDEAUX_BLANC_GB', 'BORDEAUX_BLANC_US', 'BORDEAUX_ROUGE_BE', 'BORDEAUX_ROUGE_CN', 'BORDEAUX_ROUGE_DE', 'BORDEAUX_ROUGE_GB', 'BORDEAUX_ROUGE_US', '_BLANC_BE', '_BLANC_CN', '_BLANC_DE', '_BLANC_GB', '_BLANC_US', '_ROUGE_BE', '_ROUGE_CN', '_ROUGE_DE', '_ROUGE_GB', '_ROUGE_US', '__BE', '__CN', '__DE', '__GB', '__US', '__'])
{'Dataset': {'Time': {'TimeVariable': 'Month', 'TimeMinMax': ['2012-01-01 00:00:00', '2016-05-01 00:00:00'], 'Horizon': 1}, 'Signal': 'BORDEAUX_ROUGE_CN', 'Training_Signal_Length': 46}, 'Model': {'Best_Decomposition': 'Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_AR(11)', 'Signal_Transoformation': 'Difference', 'Trend': 'ConstantTrend', 'Cycle': 'NoCycle', 'AR_Model': 'AR'}, 'Model_Performance': {'MAPE': '0.2216', 'MASE': '0.7022', 'MAE': '2110502.468960095', 'RMSE': '2646130.4232281293', 'COMPLEXITY': '41'}}
                  Model                RMSE    MAPE
13    BORDEAUX_BLANC_GB   99936.68789248551   0.133
30                   __   6516614.471320466  0.1367
22            _BLANC_DE  141608.55178546874   0.137
3       ALSACE_BLANC_GB   66480.16663925201  0.1402
23            _BLANC_GB   194430.4785616541  0.1475
29            _ROUGE_US  1353323.9885370731  0.1533
34                 __GB  1567222.4394758958  0.1579
18    BORDEAUX_ROUGE_GB  1259434.9100598427  0.1592
28            _ROUGE_GB  1442701.9862164112  0.1611
31                 __BE  1150941.4629769186  0.1693
2       ALSACE_BLANC_DE   144769.4922736975  0.1906
15    BORDEAUX_ROUGE_BE   921082.2727095842  0.1915
24            _BLANC_US   406290.2059059647  0.1927
19    BORDEAUX_ROUGE_US  1279973.4076019498  0.1988
25            _ROUGE_BE   946236.4320116949  0.2045
14    BORDEAUX_BLANC_US  252977.83561553678  0.2096
35                 __US  2096609.4319779796  0.2209
16    BORDEAUX_ROUGE_CN  2646130.4232281293  0.2216
26            _ROUGE_CN   2626225.262002647  0.2253
32                 __CN  2852608.7810445046  0.2353
33                 __DE  1311702.0584794695  0.2377
4       ALSACE_BLANC_US   178019.5721837483   0.238
27            _ROUGE_DE   1118073.196200151  0.2428
12    BORDEAUX_BLANC_DE   201387.2590557804  0.2533
21            _BLANC_CN   447221.0158893082   0.255
20            _BLANC_BE   536239.7343081034  0.2702
17    BORDEAUX_ROUGE_DE  1186136.6973808934   0.272
9   BEAUJOLAIS_ROUGE_US   774435.6013471647  0.2867
0       ALSACE_BLANC_BE  444837.29072987556  0.2979
11    BORDEAUX_BLANC_CN  477151.95433478977   0.306
10    BORDEAUX_BLANC_BE  133791.73715896055  0.3373
1       ALSACE_BLANC_CN   86153.69023954056  0.3401
8   BEAUJOLAIS_ROUGE_GB  485564.32192152576  0.3584
5   BEAUJOLAIS_ROUGE_BE  126806.98617848834  0.4458
7   BEAUJOLAIS_ROUGE_DE  155871.73582628762  0.6144
6   BEAUJOLAIS_ROUGE_CN  190554.48176906724     1.0
<IPython.core.display.Image object>
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.22686529159545898
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.21401214599609375
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.4576742649078369
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.2838611602783203
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.29390645027160645
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.3293135166168213
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.24890351295471191
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.22737717628479004
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.3069181442260742
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.17641544342041016
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.13461828231811523
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.2714345455169678
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.30959463119506836
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.23703384399414062
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.15935897827148438
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.2013230323791504
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.2022850513458252
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.26719212532043457
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.16005229949951172
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.23560547828674316
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.1842513084411621
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.13289308547973633
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.13127660751342773
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.169769287109375
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.14304780960083008
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.22907161712646484
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.18456220626831055
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.14737606048583984
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.16698002815246582
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.24358081817626953
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.395519495010376
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.26930713653564453
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.19596576690673828
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.13898587226867676
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:START_FORECASTING
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.13396286964416504
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS 0.17552876472473145
INFO:pyaf.std:END_HIERARCHICAL_FORECAST_TIME_IN_SECONDS 18.52554750442505
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d08a8e80> has a label of '__GB' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d29b6910> has a label of '__GB_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0b3e1f0> has a label of '__GB_BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0b3e220> has a label of '__GB_PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0b3e310> has a label of '__GB_AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d07526a0> has a label of '__GB_MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0752d30> has a label of '__GB_OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0574790> has a label of '__US' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0581b20> has a label of '__US_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0581fa0> has a label of '__US_BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d05812e0> has a label of '__US_PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0581c40> has a label of '__US_AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d07b3c70> has a label of '__US_MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d07b3520> has a label of '__US_OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0a858b0> has a label of '__DE' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0a32d30> has a label of '__DE_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0a32f40> has a label of '__DE_BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0a32370> has a label of '__DE_PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0969820> has a label of '__DE_AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d09691f0> has a label of '__DE_MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0969be0> has a label of '__DE_OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d05ceb20> has a label of '__BE' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0ab5e20> has a label of '__BE_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0ab5d90> has a label of '__BE_BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0ab5160> has a label of '__BE_PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0ab5130> has a label of '__BE_AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0ab58e0> has a label of '__BE_MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0ab5460> has a label of '__BE_OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0725820> has a label of '__CN' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0c9c040> has a label of '__CN_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0c9ce50> has a label of '__CN_BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0c9c2e0> has a label of '__CN_PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0c9c460> has a label of '__CN_AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0c9c3a0> has a label of '__CN_MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d2972040> has a label of '__CN_OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d07cc520> has a label of '__' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0b51eb0> has a label of '___Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0b513d0> has a label of '___BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0b51850> has a label of '___PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0b51f40> has a label of '___AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0b51d30> has a label of '___MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f03d0b519a0> has a label of '___OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
