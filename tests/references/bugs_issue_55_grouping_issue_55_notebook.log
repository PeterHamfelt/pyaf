INFO:pyaf.std:START_HIERARCHICAL_PLOTTING
INFO:pyaf.std:END_HIERARCHICAL_PLOTTING_TIME_IN_SECONDS 0.28644347190856934
INFO:pyaf.std:START_HIERARCHICAL_TRAINING
INFO:pyaf.std:START_TRAINING '['ALSACE_BLANC_BE', 'ALSACE_BLANC_CN', 'ALSACE_BLANC_DE', 'ALSACE_BLANC_GB', 'ALSACE_BLANC_US', 'BEAUJOLAIS_ROUGE_BE', 'BEAUJOLAIS_ROUGE_CN', 'BEAUJOLAIS_ROUGE_DE', 'BEAUJOLAIS_ROUGE_GB', 'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_BLANC_BE', 'BORDEAUX_BLANC_CN', 'BORDEAUX_BLANC_DE', 'BORDEAUX_BLANC_GB', 'BORDEAUX_BLANC_US', 'BORDEAUX_ROUGE_BE', 'BORDEAUX_ROUGE_CN', 'BORDEAUX_ROUGE_DE', 'BORDEAUX_ROUGE_GB', 'BORDEAUX_ROUGE_US', '_BLANC_BE', '_BLANC_CN', '_BLANC_DE', '_BLANC_GB', '_BLANC_US', '_ROUGE_BE', '_ROUGE_CN', '_ROUGE_DE', '_ROUGE_GB', '_ROUGE_US', '__BE', '__CN', '__DE', '__GB', '__US', '__']'
{'Levels': None, 'Data': None, 'Groups': {'Country': ['GB', 'US', 'DE', 'BE', 'CN'], 'Variant': ['BLANC', 'ROUGE'], 'Wine': ['ALSACE', 'BEAUJOLAIS', 'BORDEAUX']}, 'GroupOrder': ['Wine', 'Variant', 'Country'], 'Type': 'Grouped'}
<IPython.core.display.Image object>
{0: {'ALSACE_BLANC_BE': [], 'ALSACE_BLANC_CN': [], 'ALSACE_BLANC_DE': [], 'ALSACE_BLANC_GB': [], 'ALSACE_BLANC_US': [], 'BEAUJOLAIS_ROUGE_BE': [], 'BEAUJOLAIS_ROUGE_CN': [], 'BEAUJOLAIS_ROUGE_DE': [], 'BEAUJOLAIS_ROUGE_GB': [], 'BEAUJOLAIS_ROUGE_US': [], 'BORDEAUX_BLANC_BE': [], 'BORDEAUX_BLANC_CN': [], 'BORDEAUX_BLANC_DE': [], 'BORDEAUX_BLANC_GB': [], 'BORDEAUX_BLANC_US': [], 'BORDEAUX_ROUGE_BE': [], 'BORDEAUX_ROUGE_CN': [], 'BORDEAUX_ROUGE_DE': [], 'BORDEAUX_ROUGE_GB': [], 'BORDEAUX_ROUGE_US': []}, 1: {'_BLANC_BE': ['ALSACE_BLANC_BE', 'BORDEAUX_BLANC_BE'], '_BLANC_CN': ['ALSACE_BLANC_CN', 'BORDEAUX_BLANC_CN'], '_BLANC_DE': ['ALSACE_BLANC_DE', 'BORDEAUX_BLANC_DE'], '_BLANC_GB': ['ALSACE_BLANC_GB', 'BORDEAUX_BLANC_GB'], '_BLANC_US': ['ALSACE_BLANC_US', 'BORDEAUX_BLANC_US'], '_ROUGE_BE': ['BEAUJOLAIS_ROUGE_BE', 'BORDEAUX_ROUGE_BE'], '_ROUGE_CN': ['BEAUJOLAIS_ROUGE_CN', 'BORDEAUX_ROUGE_CN'], '_ROUGE_DE': ['BEAUJOLAIS_ROUGE_DE', 'BORDEAUX_ROUGE_DE'], '_ROUGE_GB': ['BEAUJOLAIS_ROUGE_GB', 'BORDEAUX_ROUGE_GB'], '_ROUGE_US': ['BEAUJOLAIS_ROUGE_US', 'BORDEAUX_ROUGE_US']}, 2: {'__BE': ['_BLANC_BE', '_ROUGE_BE'], '__CN': ['_BLANC_CN', '_ROUGE_CN'], '__DE': ['_BLANC_DE', '_ROUGE_DE'], '__GB': ['_BLANC_GB', '_ROUGE_GB'], '__US': ['_BLANC_US', '_ROUGE_US']}, 3: {'__': ['__BE', '__CN', '__DE', '__GB', '__US']}}
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '['ALSACE_BLANC_BE', 'ALSACE_BLANC_CN', 'ALSACE_BLANC_DE', 'ALSACE_BLANC_GB', 'ALSACE_BLANC_US', 'BEAUJOLAIS_ROUGE_BE', 'BEAUJOLAIS_ROUGE_CN', 'BEAUJOLAIS_ROUGE_DE', 'BEAUJOLAIS_ROUGE_GB', 'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_BLANC_BE', 'BORDEAUX_BLANC_CN', 'BORDEAUX_BLANC_DE', 'BORDEAUX_BLANC_GB', 'BORDEAUX_BLANC_US', 'BORDEAUX_ROUGE_BE', 'BORDEAUX_ROUGE_CN', 'BORDEAUX_ROUGE_DE', 'BORDEAUX_ROUGE_GB', 'BORDEAUX_ROUGE_US', '_BLANC_BE', '_BLANC_CN', '_BLANC_DE', '_BLANC_GB', '_BLANC_US', '_ROUGE_BE', '_ROUGE_CN', '_ROUGE_DE', '_ROUGE_GB', '_ROUGE_US', '__BE', '__CN', '__DE', '__GB', '__US', '__']' 31.7131826877594
INFO:pyaf.hierarchical:TRAINING_HIERARCHICAL_MODEL_COMPUTE_TOP_DOWN_HISTORICAL_PROPORTIONS
INFO:pyaf.std:START_FORECASTING '['ALSACE_BLANC_BE', 'ALSACE_BLANC_CN', 'ALSACE_BLANC_DE', 'ALSACE_BLANC_GB', 'ALSACE_BLANC_US', 'BEAUJOLAIS_ROUGE_BE', 'BEAUJOLAIS_ROUGE_CN', 'BEAUJOLAIS_ROUGE_DE', 'BEAUJOLAIS_ROUGE_GB', 'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_BLANC_BE', 'BORDEAUX_BLANC_CN', 'BORDEAUX_BLANC_DE', 'BORDEAUX_BLANC_GB', 'BORDEAUX_BLANC_US', 'BORDEAUX_ROUGE_BE', 'BORDEAUX_ROUGE_CN', 'BORDEAUX_ROUGE_DE', 'BORDEAUX_ROUGE_GB', 'BORDEAUX_ROUGE_US', '_BLANC_BE', '_BLANC_CN', '_BLANC_DE', '_BLANC_GB', '_BLANC_US', '_ROUGE_BE', '_ROUGE_CN', '_ROUGE_DE', '_ROUGE_GB', '_ROUGE_US', '__BE', '__CN', '__DE', '__GB', '__US', '__']'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  '['ALSACE_BLANC_BE', 'ALSACE_BLANC_CN', 'ALSACE_BLANC_DE', 'ALSACE_BLANC_GB', 'ALSACE_BLANC_US', 'BEAUJOLAIS_ROUGE_BE', 'BEAUJOLAIS_ROUGE_CN', 'BEAUJOLAIS_ROUGE_DE', 'BEAUJOLAIS_ROUGE_GB', 'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_BLANC_BE', 'BORDEAUX_BLANC_CN', 'BORDEAUX_BLANC_DE', 'BORDEAUX_BLANC_GB', 'BORDEAUX_BLANC_US', 'BORDEAUX_ROUGE_BE', 'BORDEAUX_ROUGE_CN', 'BORDEAUX_ROUGE_DE', 'BORDEAUX_ROUGE_GB', 'BORDEAUX_ROUGE_US', '_BLANC_BE', '_BLANC_CN', '_BLANC_DE', '_BLANC_GB', '_BLANC_US', '_ROUGE_BE', '_ROUGE_CN', '_ROUGE_DE', '_ROUGE_GB', '_ROUGE_US', '__BE', '__CN', '__DE', '__GB', '__US', '__']' 6.040931463241577
INFO:pyaf.hierarchical:FORECASTING_HIERARCHICAL_MODEL_COMBINATION_METHODS ['BU']
INFO:pyaf.hierarchical:FORECASTING_HIERARCHICAL_MODEL_BOTTOM_UP_METHOD BU
INFO:pyaf.hierarchical:FORECASTING_HIERARCHICAL_MODEL_OPTIMAL_COMBINATION_METHOD
INFO:pyaf.hierarchical:STRUCTURE [0, 1, 2, 3]
INFO:pyaf.hierarchical:DATASET_COLUMNS Index(['Month', 'ALSACE_BLANC_BE', 'ALSACE_BLANC_BE_Forecast',
       'ALSACE_BLANC_BE_Forecast_Lower_Bound',
       'ALSACE_BLANC_BE_Forecast_Upper_Bound', 'ALSACE_BLANC_CN',
       'ALSACE_BLANC_CN_Forecast', 'ALSACE_BLANC_CN_Forecast_Lower_Bound',
       'ALSACE_BLANC_CN_Forecast_Upper_Bound', 'ALSACE_BLANC_DE',
       ...
       '_ROUGE_CN_BU_Forecast', '_ROUGE_DE_BU_Forecast',
       '_ROUGE_GB_BU_Forecast', '_ROUGE_US_BU_Forecast', '__BE_BU_Forecast',
       '__CN_BU_Forecast', '__DE_BU_Forecast', '__GB_BU_Forecast',
       '__US_BU_Forecast', '___BU_Forecast'],
      dtype='object', length=181)
INFO:pyaf.hierarchical:STRUCTURE_LEVEL (0, ['ALSACE_BLANC_BE', 'ALSACE_BLANC_CN', 'ALSACE_BLANC_DE', 'ALSACE_BLANC_GB', 'ALSACE_BLANC_US', 'BEAUJOLAIS_ROUGE_BE', 'BEAUJOLAIS_ROUGE_CN', 'BEAUJOLAIS_ROUGE_DE', 'BEAUJOLAIS_ROUGE_GB', 'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_BLANC_BE', 'BORDEAUX_BLANC_CN', 'BORDEAUX_BLANC_DE', 'BORDEAUX_BLANC_GB', 'BORDEAUX_BLANC_US', 'BORDEAUX_ROUGE_BE', 'BORDEAUX_ROUGE_CN', 'BORDEAUX_ROUGE_DE', 'BORDEAUX_ROUGE_GB', 'BORDEAUX_ROUGE_US'])
INFO:pyaf.hierarchical:STRUCTURE_LEVEL (1, ['_BLANC_BE', '_BLANC_CN', '_BLANC_DE', '_BLANC_GB', '_BLANC_US', '_ROUGE_BE', '_ROUGE_CN', '_ROUGE_DE', '_ROUGE_GB', '_ROUGE_US'])
INFO:pyaf.hierarchical:STRUCTURE_LEVEL (2, ['__BE', '__CN', '__DE', '__GB', '__US'])
INFO:pyaf.hierarchical:STRUCTURE_LEVEL (3, ['__'])
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'ALSACE_BLANC_BE_BU_Forecast', 'Length': 36, 'MAPE': 0.1418, 'RMSE': 199577.56080021942, 'MAE': 165591.68055555556, 'SMAPE': 0.1379, 'ErrorMean': 0.0, 'ErrorStdDev': 199577.56080021942, 'R2': 0.0, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'ALSACE_BLANC_BE_BU_Forecast', 'Length': 9, 'MAPE': 0.2979, 'RMSE': 444837.29072987556, 'MAE': 326942.97222222225, 'SMAPE': 0.2631, 'ErrorMean': -79348.75, 'ErrorStdDev': 437703.08554696455, 'R2': -0.032864040938387795, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'ALSACE_BLANC_CN_BU_Forecast', 'Length': 36, 'MAPE': 0.4769, 'RMSE': 54489.48176893604, 'MAE': 43502.069322031304, 'SMAPE': 0.3645, 'ErrorMean': -6.063298011819521e-13, 'ErrorStdDev': 54489.48176893604, 'R2': 0.20977709881983608, 'Pearson': 0.4592342911941588}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'ALSACE_BLANC_CN_BU_Forecast', 'Length': 9, 'MAPE': 0.3401, 'RMSE': 86153.69023954055, 'MAE': 54624.102041553844, 'SMAPE': 0.4141, 'ErrorMean': -40494.168775788356, 'ErrorStdDev': 76043.938858062, 'R2': -0.08384682031687452, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'ALSACE_BLANC_DE_BU_Forecast', 'Length': 36, 'MAPE': 0.3037, 'RMSE': 381643.9708516124, 'MAE': 239057.80555555556, 'SMAPE': 0.3884, 'ErrorMean': -235745.16666666666, 'ErrorStdDev': 300127.2011675914, 'R2': -0.5439845652964985, 'Pearson': 0.4222538037199401}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'ALSACE_BLANC_DE_BU_Forecast', 'Length': 9, 'MAPE': 0.1906, 'RMSE': 144769.4922736975, 'MAE': 112843.61111111117, 'SMAPE': 0.2201, 'ErrorMean': -112843.61111111117, 'ErrorStdDev': 90689.16872807068, 'R2': -1.6785920899742903, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'ALSACE_BLANC_GB_BU_Forecast', 'Length': 36, 'MAPE': 0.2964, 'RMSE': 127746.35430699537, 'MAE': 106249.85185185184, 'SMAPE': 0.264, 'ErrorMean': -2.5870071517096624e-11, 'ErrorStdDev': 127746.35430699537, 'R2': 0.0, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'ALSACE_BLANC_GB_BU_Forecast', 'Length': 9, 'MAPE': 0.1402, 'RMSE': 66480.16663925201, 'MAE': 55017.46913580247, 'SMAPE': 0.1358, 'ErrorMean': -731.2222222222481, 'ErrorStdDev': 66476.1451232278, 'R2': -0.00012099491204886625, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'ALSACE_BLANC_US_BU_Forecast', 'Length': 36, 'MAPE': 0.2222, 'RMSE': 165735.85694123103, 'MAE': 131398.81721645, 'SMAPE': 0.1986, 'ErrorMean': -6.467517879274156e-12, 'ErrorStdDev': 165735.85694123103, 'R2': 0.25091278856867993, 'Pearson': 0.5009119569032863}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'ALSACE_BLANC_US_BU_Forecast', 'Length': 9, 'MAPE': 0.238, 'RMSE': 178019.5721837483, 'MAE': 142116.45550728482, 'SMAPE': 0.21, 'ErrorMean': 27404.560804801127, 'ErrorStdDev': 175897.57851539835, 'R2': -0.10452085387212473, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BEAUJOLAIS_ROUGE_BE_BU_Forecast', 'Length': 36, 'MAPE': 0.5435, 'RMSE': 106802.3837449867, 'MAE': 80457.65319272065, 'SMAPE': 0.4144, 'ErrorMean': 15233.682772240725, 'ErrorStdDev': 105710.37831171608, 'R2': -0.024414222050409773, 'Pearson': -0.004087940353046451}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BEAUJOLAIS_ROUGE_BE_BU_Forecast', 'Length': 9, 'MAPE': 0.4458, 'RMSE': 126806.9861784883, 'MAE': 82815.0405050574, 'SMAPE': 0.6497, 'ErrorMean': -67684.41089172459, 'ErrorStdDev': 107232.60822115405, 'R2': -0.3166836761041538, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BEAUJOLAIS_ROUGE_CN_BU_Forecast', 'Length': 36, 'MAPE': 1.5835, 'RMSE': 386578.75642473, 'MAE': 186893.800154321, 'SMAPE': 1.9954, 'ErrorMean': -70248.17206790124, 'ErrorStdDev': 380142.51175053976, 'R2': -13.912792387418225, 'Pearson': -0.060453437527646335}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BEAUJOLAIS_ROUGE_CN_BU_Forecast', 'Length': 9, 'MAPE': 1.0, 'RMSE': 190554.48176906724, 'MAE': 147575.0, 'SMAPE': 2.0, 'ErrorMean': -147575.0, 'ErrorStdDev': 120551.3579238234, 'R2': -1.498584962180829, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BEAUJOLAIS_ROUGE_DE_BU_Forecast', 'Length': 36, 'MAPE': 0.6182, 'RMSE': 268908.8411572105, 'MAE': 121252.86111111111, 'SMAPE': 0.5239, 'ErrorMean': -90871.33333333333, 'ErrorStdDev': 253089.63951678487, 'R2': -0.1235609513710596, 'Pearson': 0.17563597266024822}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BEAUJOLAIS_ROUGE_DE_BU_Forecast', 'Length': 9, 'MAPE': 0.6144, 'RMSE': 155871.73582628762, 'MAE': 101230.22222222222, 'SMAPE': 0.6012, 'ErrorMean': -55130.88888888889, 'ErrorStdDev': 145796.375537326, 'R2': -0.1492885450742618, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BEAUJOLAIS_ROUGE_GB_BU_Forecast', 'Length': 36, 'MAPE': 0.7216, 'RMSE': 574972.8645601943, 'MAE': 422320.22222222225, 'SMAPE': 0.5076, 'ErrorMean': 1963.388888888889, 'ErrorStdDev': 574969.5123088063, 'R2': -0.6540904308136148, 'Pearson': 0.16869668407790478}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BEAUJOLAIS_ROUGE_GB_BU_Forecast', 'Length': 9, 'MAPE': 0.3584, 'RMSE': 485564.32192152576, 'MAE': 335481.1111111111, 'SMAPE': 0.3897, 'ErrorMean': -82966.66666666667, 'ErrorStdDev': 478423.7065043217, 'R2': -0.1714086691299752, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BEAUJOLAIS_ROUGE_US_BU_Forecast', 'Length': 36, 'MAPE': 0.5762, 'RMSE': 867034.3960889542, 'MAE': 582255.0717515774, 'SMAPE': 0.4781, 'ErrorMean': 1.8109050061967638e-10, 'ErrorStdDev': 867034.3960889542, 'R2': 0.0028471423817205688, 'Pearson': 0.05534550225360017}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BEAUJOLAIS_ROUGE_US_BU_Forecast', 'Length': 9, 'MAPE': 0.2867, 'RMSE': 774435.6013471647, 'MAE': 387408.1202543912, 'SMAPE': 0.2956, 'ErrorMean': -153564.98378074175, 'ErrorStdDev': 759057.5053251005, 'R2': -0.02749876936315787, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BORDEAUX_BLANC_BE_BU_Forecast', 'Length': 36, 'MAPE': 0.1248, 'RMSE': 71511.23866079607, 'MAE': 57284.517524619594, 'SMAPE': 0.1211, 'ErrorMean': -1.616879469818539e-12, 'ErrorStdDev': 71511.23866079607, 'R2': 0.29465347365490646, 'Pearson': 0.5433689983428429}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BORDEAUX_BLANC_BE_BU_Forecast', 'Length': 9, 'MAPE': 0.3373, 'RMSE': 133791.73715896055, 'MAE': 125843.55513525108, 'SMAPE': 0.3039, 'ErrorMean': 28407.455518913033, 'ErrorStdDev': 130741.13890797098, 'R2': 0.24879767521606466, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BORDEAUX_BLANC_CN_BU_Forecast', 'Length': 36, 'MAPE': 0.4861, 'RMSE': 236751.57395505198, 'MAE': 196901.17592592593, 'SMAPE': 0.4008, 'ErrorMean': -2.5870071517096624e-11, 'ErrorStdDev': 236751.57395505198, 'R2': 0.0, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BORDEAUX_BLANC_CN_BU_Forecast', 'Length': 9, 'MAPE': 0.306, 'RMSE': 477151.95433478977, 'MAE': 234114.8703703704, 'SMAPE': 0.3129, 'ErrorMean': -116613.27777777782, 'ErrorStdDev': 462682.7541322803, 'R2': -0.06352276318980388, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BORDEAUX_BLANC_DE_BU_Forecast', 'Length': 36, 'MAPE': 0.3966, 'RMSE': 270676.3073877788, 'MAE': 178217.47222222222, 'SMAPE': 0.3632, 'ErrorMean': -18718.194444444445, 'ErrorStdDev': 270028.31810353394, 'R2': -0.18936319314386085, 'Pearson': 0.3559880158188731}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BORDEAUX_BLANC_DE_BU_Forecast', 'Length': 9, 'MAPE': 0.2533, 'RMSE': 201387.2590557804, 'MAE': 97102.88888888889, 'SMAPE': 0.1866, 'ErrorMean': 76439.11111111111, 'ErrorStdDev': 186316.64016545383, 'R2': -13.060718941617052, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BORDEAUX_BLANC_GB_BU_Forecast', 'Length': 36, 'MAPE': 0.259, 'RMSE': 282372.93395753554, 'MAE': 228564.85401399242, 'SMAPE': 0.2421, 'ErrorMean': 3.233758939637078e-12, 'ErrorStdDev': 282372.93395753554, 'R2': 0.14947145177295817, 'Pearson': 0.5128583610185686}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BORDEAUX_BLANC_GB_BU_Forecast', 'Length': 9, 'MAPE': 0.133, 'RMSE': 99936.68789248545, 'MAE': 84699.5553837494, 'SMAPE': 0.1238, 'ErrorMean': 44758.01780843718, 'ErrorStdDev': 89353.57535532457, 'R2': -0.19706891807788685, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BORDEAUX_BLANC_US_BU_Forecast', 'Length': 36, 'MAPE': 0.383, 'RMSE': 403395.3115675406, 'MAE': 307343.7377127167, 'SMAPE': 0.3217, 'ErrorMean': -1.358178754647573e-10, 'ErrorStdDev': 403395.3115675405, 'R2': 0.041980024342557765, 'Pearson': 0.21104598132953822}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BORDEAUX_BLANC_US_BU_Forecast', 'Length': 9, 'MAPE': 0.2096, 'RMSE': 252977.83561553687, 'MAE': 167581.60529117833, 'SMAPE': 0.2035, 'ErrorMean': -54277.80173525347, 'ErrorStdDev': 247086.43336191104, 'R2': -0.21729575877784302, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BORDEAUX_ROUGE_BE_BU_Forecast', 'Length': 36, 'MAPE': 0.1511, 'RMSE': 1034134.42595624, 'MAE': 745887.7208675914, 'SMAPE': 0.1449, 'ErrorMean': 1.2935035758548313e-10, 'ErrorStdDev': 1034134.42595624, 'R2': 0.1148498112118489, 'Pearson': 0.34110079343525745}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BORDEAUX_ROUGE_BE_BU_Forecast', 'Length': 9, 'MAPE': 0.1915, 'RMSE': 921082.2727095841, 'MAE': 803425.001323376, 'SMAPE': 0.1977, 'ErrorMean': -270929.66418946494, 'ErrorStdDev': 880334.9761096833, 'R2': 0.053418461566188125, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BORDEAUX_ROUGE_CN_BU_Forecast', 'Length': 36, 'MAPE': 0.3932, 'RMSE': 5899859.7343801735, 'MAE': 4710841.45749947, 'SMAPE': 0.521, 'ErrorMean': -3569399.141589253, 'ErrorStdDev': 4697630.748939554, 'R2': -2.539579776876861, 'Pearson': -0.19228543926286962}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BORDEAUX_ROUGE_CN_BU_Forecast', 'Length': 9, 'MAPE': 0.2216, 'RMSE': 2646130.4232281283, 'MAE': 2110502.4689600933, 'SMAPE': 0.1932, 'ErrorMean': -382238.5782750007, 'ErrorStdDev': 2618377.338355146, 'R2': 0.2772267547872993, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BORDEAUX_ROUGE_DE_BU_Forecast', 'Length': 36, 'MAPE': 0.337, 'RMSE': 2172921.2151209507, 'MAE': 1699796.3050877494, 'SMAPE': 0.2917, 'ErrorMean': -91240.87311386141, 'ErrorStdDev': 2171004.7697313167, 'R2': -0.046690116723479, 'Pearson': -0.29888213817842174}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BORDEAUX_ROUGE_DE_BU_Forecast', 'Length': 9, 'MAPE': 0.272, 'RMSE': 1186136.6973808932, 'MAE': 910725.4387466401, 'SMAPE': 0.2118, 'ErrorMean': 677534.4440548599, 'ErrorStdDev': 973584.7893187959, 'R2': -0.2559907176181191, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BORDEAUX_ROUGE_GB_BU_Forecast', 'Length': 36, 'MAPE': 0.3547, 'RMSE': 4522958.716730319, 'MAE': 3622128.5, 'SMAPE': 0.3104, 'ErrorMean': 275448.1111111111, 'ErrorStdDev': 4514563.532760625, 'R2': 0.6230681985385662, 'Pearson': 0.8098760167727042}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BORDEAUX_ROUGE_GB_BU_Forecast', 'Length': 9, 'MAPE': 0.1592, 'RMSE': 1259434.9100598427, 'MAE': 951526.7777777778, 'SMAPE': 0.1541, 'ErrorMean': -18088.777777777777, 'ErrorStdDev': 1259305.0022913236, 'R2': -0.6548872013161662, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': 'BORDEAUX_ROUGE_US_BU_Forecast', 'Length': 36, 'MAPE': 0.3846, 'RMSE': 3670201.8525633416, 'MAE': 3004362.8880813215, 'SMAPE': 0.4796, 'ErrorMean': -1559385.3195952456, 'ErrorStdDev': 3322453.7714752657, 'R2': -3.6041850530076776, 'Pearson': -0.2210489590109037}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': 'BORDEAUX_ROUGE_US_BU_Forecast', 'Length': 9, 'MAPE': 0.1988, 'RMSE': 1279973.40760195, 'MAE': 1187013.801149747, 'SMAPE': 0.1863, 'ErrorMean': 88484.9492303933, 'ErrorStdDev': 1276911.249041155, 'R2': 0.1688012406765682, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '_BLANC_BE_BU_Forecast', 'Length': 36, 'MAPE': 0.1098, 'RMSE': 225853.54470517335, 'MAE': 177110.89865390537, 'SMAPE': 0.1065, 'ErrorMean': -1.2935035758548312e-11, 'ErrorStdDev': 225853.54470517335, 'R2': 0.05134357331385664, 'Pearson': 0.22737683905855383}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '_BLANC_BE_BU_Forecast', 'Length': 9, 'MAPE': 0.2642, 'RMSE': 522244.2641875355, 'MAE': 399492.0844229049, 'SMAPE': 0.2416, 'ErrorMean': -50941.29448108693, 'ErrorStdDev': 519753.8417302671, 'R2': 0.05178704289239067, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '_BLANC_CN_BU_Forecast', 'Length': 36, 'MAPE': 0.3689, 'RMSE': 237419.5469409291, 'MAE': 196543.8758120018, 'SMAPE': 0.322, 'ErrorMean': -3.233758939637078e-11, 'ErrorStdDev': 237419.54694092908, 'R2': 0.0783783517538883, 'Pearson': 0.42411388544697415}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '_BLANC_CN_BU_Forecast', 'Length': 9, 'MAPE': 0.2483, 'RMSE': 479862.8871668425, 'MAE': 239534.71117654428, 'SMAPE': 0.2788, 'ErrorMean': -157107.44655356617, 'ErrorStdDev': 453415.52765373647, 'R2': -0.23431014350061563, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '_BLANC_DE_BU_Forecast', 'Length': 36, 'MAPE': 0.2515, 'RMSE': 516762.08294615545, 'MAE': 317171.4814814815, 'SMAPE': 0.2982, 'ErrorMean': -254463.36111111115, 'ErrorStdDev': 449768.2161101265, 'R2': -0.0733863994816153, 'Pearson': 0.4338536707538523}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '_BLANC_DE_BU_Forecast', 'Length': 9, 'MAPE': 0.1045, 'RMSE': 121463.47982179142, 'MAE': 97239.9691358025, 'SMAPE': 0.108, 'ErrorMean': -36404.50000000005, 'ErrorStdDev': 115879.63285309773, 'R2': 0.13720970855142178, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '_BLANC_GB_BU_Forecast', 'Length': 36, 'MAPE': 0.2229, 'RMSE': 354746.8190903641, 'MAE': 279076.2701498269, 'SMAPE': 0.2062, 'ErrorMean': -4.2038866215282016e-11, 'ErrorStdDev': 354746.8190903641, 'R2': 0.10250130810135427, 'Pearson': 0.4211953492302935}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '_BLANC_GB_BU_Forecast', 'Length': 9, 'MAPE': 0.1187, 'RMSE': 146152.7268170181, 'MAE': 119811.23995040776, 'SMAPE': 0.1117, 'ErrorMean': 44026.79558621495, 'ErrorStdDev': 139363.7715708769, 'R2': -0.013917661920624047, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '_BLANC_US_BU_Forecast', 'Length': 36, 'MAPE': 0.2395, 'RMSE': 466507.73574899737, 'MAE': 359129.11041671975, 'SMAPE': 0.2188, 'ErrorMean': -1.5522042910257974e-10, 'ErrorStdDev': 466507.7357489973, 'R2': 0.10459365683264743, 'Pearson': 0.3423618085535213}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '_BLANC_US_BU_Forecast', 'Length': 9, 'MAPE': 0.1998, 'RMSE': 397588.70917779754, 'MAE': 277434.72931214847, 'SMAPE': 0.1847, 'ErrorMean': -26873.240930452375, 'ErrorStdDev': 396679.4809257987, 'R2': -0.16184518179052887, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '_ROUGE_BE_BU_Forecast', 'Length': 36, 'MAPE': 0.1507, 'RMSE': 1067817.9513976662, 'MAE': 769904.5702412293, 'SMAPE': 0.1443, 'ErrorMean': 15233.682772240783, 'ErrorStdDev': 1067709.2826403184, 'R2': 0.09140277023731325, 'Pearson': 0.3026765092024694}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '_ROUGE_BE_BU_Forecast', 'Length': 9, 'MAPE': 0.1833, 'RMSE': 967280.5430128897, 'MAE': 820738.9036205744, 'SMAPE': 0.1922, 'ErrorMean': -338614.0750811895, 'ErrorStdDev': 906075.1387430411, 'R2': 0.06421956807209184, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '_ROUGE_CN_BU_Forecast', 'Length': 36, 'MAPE': 0.3988, 'RMSE': 5988411.497087893, 'MAE': 4822192.952098234, 'SMAPE': 0.529, 'ErrorMean': -3639647.3136571553, 'ErrorStdDev': 4755422.135903679, 'R2': -2.564134278929111, 'Pearson': -0.19097946829228984}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '_ROUGE_CN_BU_Forecast', 'Length': 9, 'MAPE': 0.2246, 'RMSE': 2743674.1704810252, 'MAE': 2194751.1356267603, 'SMAPE': 0.1978, 'ErrorMean': -529813.5782750007, 'ErrorStdDev': 2692033.7156209955, 'R2': 0.2607218838550063, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '_ROUGE_DE_BU_Forecast', 'Length': 36, 'MAPE': 0.3415, 'RMSE': 2271457.5193558116, 'MAE': 1791280.7495321939, 'SMAPE': 0.2987, 'ErrorMean': -182112.20644719474, 'ErrorStdDev': 2264145.4031269704, 'R2': -0.049819532147951984, 'Pearson': -0.30565982367958633}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '_ROUGE_DE_BU_Forecast', 'Length': 9, 'MAPE': 0.2572, 'RMSE': 1175679.1984854105, 'MAE': 922369.216524418, 'SMAPE': 0.2063, 'ErrorMean': 622403.555165971, 'ErrorStdDev': 997414.3533497286, 'R2': -0.15715743878686772, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '_ROUGE_GB_BU_Forecast', 'Length': 36, 'MAPE': 0.3701, 'RMSE': 4785177.235679521, 'MAE': 3920390.722222222, 'SMAPE': 0.3202, 'ErrorMean': 277411.5, 'ErrorStdDev': 4777129.267304083, 'R2': 0.5829522776301911, 'Pearson': 0.7890364419245752}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '_ROUGE_GB_BU_Forecast', 'Length': 9, 'MAPE': 0.1611, 'RMSE': 1442701.9862164112, 'MAE': 1086047.0, 'SMAPE': 0.1552, 'ErrorMean': -101055.44444444444, 'ErrorStdDev': 1439158.3714730334, 'R2': -0.3097441484964041, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '_ROUGE_US_BU_Forecast', 'Length': 36, 'MAPE': 0.3578, 'RMSE': 3907937.4940971583, 'MAE': 3233473.7375605037, 'SMAPE': 0.4239, 'ErrorMean': -1559385.3195952454, 'ErrorStdDev': 3583335.441010402, 'R2': -2.0220933790438904, 'Pearson': -0.1531218783721845}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '_ROUGE_US_BU_Forecast', 'Length': 9, 'MAPE': 0.2136, 'RMSE': 1692454.6970252744, 'MAE': 1516099.0771606723, 'SMAPE': 0.2029, 'ErrorMean': -65080.0345503484, 'ErrorStdDev': 1691202.9714336002, 'R2': 0.1722192689499411, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '__BE_BU_Forecast', 'Length': 36, 'MAPE': 0.1221, 'RMSE': 1144287.3667307824, 'MAE': 845159.2152128982, 'SMAPE': 0.1197, 'ErrorMean': 15233.682772240756, 'ErrorStdDev': 1144185.9606588706, 'R2': 0.10255572434182525, 'Pearson': 0.3213146484551467}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '__BE_BU_Forecast', 'Length': 9, 'MAPE': 0.2034, 'RMSE': 1375558.9776642236, 'MAE': 1237032.7913133767, 'SMAPE': 0.2108, 'ErrorMean': -404252.41672869056, 'ErrorStdDev': 1314816.521268902, 'R2': 0.07876761545719957, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '__CN_BU_Forecast', 'Length': 36, 'MAPE': 0.3834, 'RMSE': 6063900.958660331, 'MAE': 4886947.673811934, 'SMAPE': 0.4981, 'ErrorMean': -3639647.3136571553, 'ErrorStdDev': 4850140.4380316585, 'R2': -2.4251578266310134, 'Pearson': -0.19693581894011422}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '__CN_BU_Forecast', 'Length': 9, 'MAPE': 0.2296, 'RMSE': 2837857.1660471633, 'MAE': 2401825.0524023515, 'SMAPE': 0.2067, 'ErrorMean': -645788.9671638892, 'ErrorStdDev': 2763401.8717469657, 'R2': 0.200791140161938, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '__DE_BU_Forecast', 'Length': 36, 'MAPE': 0.2959, 'RMSE': 2400898.8916825736, 'MAE': 1871375.110643305, 'SMAPE': 0.2637, 'ErrorMean': -202526.12311386142, 'ErrorStdDev': 2392341.668227822, 'R2': 0.10856873128620259, 'Pearson': 0.4192390504097976}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '__DE_BU_Forecast', 'Length': 9, 'MAPE': 0.213, 'RMSE': 1208214.0907442418, 'MAE': 949802.0013163747, 'SMAPE': 0.1775, 'ErrorMean': 691548.555165971, 'ErrorStdDev': 990727.9570703517, 'R2': -0.17955899291507293, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '__GB_BU_Forecast', 'Length': 36, 'MAPE': 0.3325, 'RMSE': 4792591.060475021, 'MAE': 3969312.582422046, 'SMAPE': 0.2899, 'ErrorMean': 277411.4999999999, 'ErrorStdDev': 4784555.5627051545, 'R2': 0.6005944898047122, 'Pearson': 0.7946189377040641}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '__GB_BU_Forecast', 'Length': 9, 'MAPE': 0.1438, 'RMSE': 1505564.5111635649, 'MAE': 1128217.5269178418, 'SMAPE': 0.1404, 'ErrorMean': -129920.14458018086, 'ErrorStdDev': 1499948.4168822102, 'R2': -0.2433277839386967, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '__US_BU_Forecast', 'Length': 36, 'MAPE': 0.3339, 'RMSE': 4545918.033195119, 'MAE': 3669090.606070922, 'SMAPE': 0.4077, 'ErrorMean': -2213540.291817468, 'ErrorStdDev': 3970593.172440261, 'R2': -2.1545614601630225, 'Pearson': -0.19828046512419245}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '__US_BU_Forecast', 'Length': 9, 'MAPE': 0.2002, 'RMSE': 1924359.443875129, 'MAE': 1718364.8549384496, 'SMAPE': 0.1944, 'ErrorMean': -267417.1456614601, 'ErrorStdDev': 1905688.1537748177, 'R2': 0.11616477880655196, 'Pearson': 0.0}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_FIT_PERF {'Signal': '___BU_Forecast', 'Length': 36, 'MAPE': 0.1721, 'RMSE': 11316113.431798287, 'MAE': 9151798.696643494, 'SMAPE': 0.187, 'ErrorMean': -5778302.228588483, 'ErrorStdDev': 9729627.256807683, 'R2': -0.014116016298558964, 'Pearson': 0.5167529288459652}
INFO:pyaf.hierarchical:REPORT_COMBINED_FORECASTS_VALID_PERF {'Signal': '___BU_Forecast', 'Length': 9, 'MAPE': 0.1154, 'RMSE': 5391526.199680708, 'MAE': 4368470.163462825, 'SMAPE': 0.1108, 'ErrorMean': -602478.8009333652, 'ErrorStdDev': 5357758.305137456, 'R2': 0.4290736716519402, 'Pearson': 0.0}
INFO:pyaf.std:END_HIERARCHICAL_TRAINING_TIME_IN_SECONDS 38.322016954422
INFO:pyaf.std:START_HIERARCHICAL_PLOTTING
INFO:pyaf.std:END_HIERARCHICAL_PLOTTING_TIME_IN_SECONDS 0.22849273681640625
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ALSACE_BLANC_BE' Length=46  Min=547748 Max=2166585  Mean=1210707.7826086956 StdDev=275212.5886479406
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ALSACE_BLANC_BE' Min=547748 Max=2166585  Mean=1210707.7826086956 StdDev=275212.5886479406
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ALSACE_BLANC_BE_ConstantTrend_residue_zeroCycle_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ALSACE_BLANC_BE_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ALSACE_BLANC_BE_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ALSACE_BLANC_BE_ConstantTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1418 MAPE_Forecast=0.2979 MAPE_Test=0.7568
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1379 SMAPE_Forecast=0.2631 SMAPE_Test=0.549
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6875 MASE_Forecast=0.7634 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=165591.68055555556 L1_Forecast=326942.97222222225 L1_Test=519718.25
INFO:pyaf.std:MODEL_L2 L2_Fit=199577.56080021942 L2_Forecast=444837.29072987556 L2_Test=519718.25
INFO:pyaf.std:MODEL_COMPLEXITY 0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 1206481.25
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ALSACE_BLANC_BE_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ALSACE_BLANC_CN' Length=46  Min=19546 Max=317661  Mean=123176.23913043478 StdDev=65440.68791601353
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ALSACE_BLANC_CN' Min=19546 Max=317661  Mean=123176.23913043478 StdDev=65440.68791601353
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle_residue_AR(11)' [PolyTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL '_ALSACE_BLANC_CN_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.4769 MAPE_Forecast=0.3401 MAPE_Test=0.3951
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3645 SMAPE_Forecast=0.4141 SMAPE_Test=0.4924
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6518 MASE_Forecast=0.5196 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=43502.069322031304 L1_Forecast=54624.102041553844 L1_Test=44876.23646992372
INFO:pyaf.std:MODEL_L2 L2_Fit=54489.48176893604 L2_Forecast=86153.69023954055 L2_Test=44876.23646992372
INFO:pyaf.std:MODEL_COMPLEXITY 25
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (135973.18824428672, array([-17522.15066875,  -9963.76768943,  -1275.15024655]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 _ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle_residue_Lag2 -0.26254657370087175
INFO:pyaf.std:AR_MODEL_COEFF 2 _ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle_residue_Lag8 -0.23766089546379857
INFO:pyaf.std:AR_MODEL_COEFF 3 _ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle_residue_Lag7 -0.20166688066039212
INFO:pyaf.std:AR_MODEL_COEFF 4 _ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle_residue_Lag9 -0.1835448439978675
INFO:pyaf.std:AR_MODEL_COEFF 5 _ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle_residue_Lag3 -0.15793478017605506
INFO:pyaf.std:AR_MODEL_COEFF 6 _ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle_residue_Lag5 -0.05298230597230485
INFO:pyaf.std:AR_MODEL_COEFF 7 _ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle_residue_Lag10 -0.013161559527403173
INFO:pyaf.std:AR_MODEL_COEFF 8 _ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle_residue_Lag11 -0.009706558187050438
INFO:pyaf.std:AR_MODEL_COEFF 9 _ALSACE_BLANC_CN_PolyTrend_residue_zeroCycle_residue_Lag6 -0.007922904431774383
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ALSACE_BLANC_DE' Length=46  Min=313150 Max=1871515  Mean=603639.3260869565 StdDev=277881.61803232547
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ALSACE_BLANC_DE' Min=-1103660.0 Max=1092522.0  Mean=1395.2608695652175 StdDev=291965.8316493808
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ALSACE_BLANC_DE_ConstantTrend_residue_zeroCycle_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ALSACE_BLANC_DE_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ALSACE_BLANC_DE_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ALSACE_BLANC_DE_ConstantTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3037 MAPE_Forecast=0.1906 MAPE_Test=0.0328
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3884 SMAPE_Forecast=0.2201 SMAPE_Test=0.0322
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.1484 MASE_Forecast=1.3318 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=239057.80555555556 L1_Forecast=112843.61111111117 L1_Test=13821.222222222132
INFO:pyaf.std:MODEL_L2 L2_Fit=381643.9708516124 L2_Forecast=144769.4922736975 L2_Test=13821.222222222132
INFO:pyaf.std:MODEL_COMPLEXITY 32
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 357516
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 1695.7222222222222
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_ALSACE_BLANC_DE_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ALSACE_BLANC_GB' Length=46  Min=168388 Max=635447  Mean=410171.67391304346 StdDev=116887.83889863678
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ALSACE_BLANC_GB' Min=168388 Max=635447  Mean=410171.67391304346 StdDev=116887.83889863678
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ALSACE_BLANC_GB_ConstantTrend_residue_zeroCycle_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ALSACE_BLANC_GB_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ALSACE_BLANC_GB_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ALSACE_BLANC_GB_ConstantTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2964 MAPE_Forecast=0.1402 MAPE_Test=0.0798
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.264 SMAPE_Forecast=0.1358 SMAPE_Test=0.0831
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6582 MASE_Forecast=0.666 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=106249.85185185184 L1_Forecast=55017.46913580247 L1_Test=35504.22222222225
INFO:pyaf.std:MODEL_L2 L2_Fit=127746.35430699537 L2_Forecast=66480.16663925201 L2_Test=35504.22222222225
INFO:pyaf.std:MODEL_COMPLEXITY 0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 409256.77777777775
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ALSACE_BLANC_GB_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ALSACE_BLANC_US' Length=46  Min=318604 Max=1105824  Mean=691606.0217391305 StdDev=186251.07680639863
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ALSACE_BLANC_US' Min=318604 Max=1105824  Mean=691606.0217391305 StdDev=186251.07680639863
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle_residue_AR(11)' [ConstantTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL '_ALSACE_BLANC_US_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2222 MAPE_Forecast=0.238 MAPE_Test=0.1428
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1986 SMAPE_Forecast=0.21 SMAPE_Test=0.1333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.5692 MASE_Forecast=0.7275 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=131398.81721645 L1_Forecast=142116.45550728482 L1_Test=86027.75044143235
INFO:pyaf.std:MODEL_L2 L2_Fit=165735.85694123103 L2_Forecast=178019.5721837483 L2_Test=86027.75044143235
INFO:pyaf.std:MODEL_COMPLEXITY 9
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 700755.6111111111
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 _ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle_residue_Lag6 -0.39216834562564556
INFO:pyaf.std:AR_MODEL_COEFF 2 _ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle_residue_Lag7 0.2224564232476788
INFO:pyaf.std:AR_MODEL_COEFF 3 _ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle_residue_Lag11 0.2102771360816476
INFO:pyaf.std:AR_MODEL_COEFF 4 _ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle_residue_Lag1 0.1970014807791683
INFO:pyaf.std:AR_MODEL_COEFF 5 _ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle_residue_Lag8 -0.1619091670708719
INFO:pyaf.std:AR_MODEL_COEFF 6 _ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle_residue_Lag5 0.13980742516805117
INFO:pyaf.std:AR_MODEL_COEFF 7 _ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle_residue_Lag10 -0.12616649198040664
INFO:pyaf.std:AR_MODEL_COEFF 8 _ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle_residue_Lag4 0.084267810707193
INFO:pyaf.std:AR_MODEL_COEFF 9 _ALSACE_BLANC_US_ConstantTrend_residue_zeroCycle_residue_Lag9 -0.01789128151768099
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BEAUJOLAIS_ROUGE_BE' Length=46  Min=61193.0 Max=603523.0  Mean=184391.15217391305 StdDev=105670.41770816536
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_BEAUJOLAIS_ROUGE_BE' Min=-401748.5 Max=328543.5  Mean=-1409.8478260869565 StdDev=137541.53184812586
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_BEAUJOLAIS_ROUGE_BE_PolyTrend_residue_zeroCycle_residue_NoAR' [PolyTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_BEAUJOLAIS_ROUGE_BE_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_BEAUJOLAIS_ROUGE_BE_PolyTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_BEAUJOLAIS_ROUGE_BE_PolyTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.5435 MAPE_Forecast=0.4458 MAPE_Test=1.1649
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.4144 SMAPE_Forecast=0.6497 SMAPE_Test=2.0
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8034 MASE_Forecast=0.7248 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=80457.65319272065 L1_Forecast=82815.0405050574 L1_Test=184324.99430172256
INFO:pyaf.std:MODEL_L2 L2_Fit=106802.3837449867 L2_Forecast=126806.9861784883 L2_Test=184324.99430172256
INFO:pyaf.std:MODEL_COMPLEXITY 48
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 223086.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (-4430.169750263698, array([ 16041.56258383,  -3220.76318549, -13367.35562504]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_BEAUJOLAIS_ROUGE_BE_PolyTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BEAUJOLAIS_ROUGE_CN' Length=46  Min=8710.5 Max=453985.0  Mean=134450.53260869565 StdDev=103575.61175933063
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_BEAUJOLAIS_ROUGE_CN' Min=95419.0 Max=6184724.5  Mean=2936445.5 StdDev=1784618.8439128133
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_BEAUJOLAIS_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_BEAUJOLAIS_ROUGE_CN_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_BEAUJOLAIS_ROUGE_CN_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_BEAUJOLAIS_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=1.5835 MAPE_Forecast=1.0 MAPE_Test=1.0
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=1.9954 SMAPE_Forecast=2.0 SMAPE_Test=2.0
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.8867 MASE_Forecast=1.6658 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=186893.800154321 L1_Forecast=147575.0 L1_Test=132575.0
INFO:pyaf.std:MODEL_L2 L2_Fit=386578.75642473 L2_Forecast=190554.48176906724 L2_Test=132575.0
INFO:pyaf.std:MODEL_COMPLEXITY 32
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 2195040.3055555555
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES CumSum_BEAUJOLAIS_ROUGE_CN_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BEAUJOLAIS_ROUGE_DE' Length=46  Min=17985.5 Max=1055548.0  Mean=179998.70652173914 StdDev=234400.9647391803
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_BEAUJOLAIS_ROUGE_DE' Min=-950953.0 Max=891835.0  Mean=-660.2173913043479 StdDev=333594.6148712447
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_BEAUJOLAIS_ROUGE_DE_ConstantTrend_residue_zeroCycle_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_BEAUJOLAIS_ROUGE_DE_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_BEAUJOLAIS_ROUGE_DE_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_BEAUJOLAIS_ROUGE_DE_ConstantTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.6182 MAPE_Forecast=0.6144 MAPE_Test=0.7612
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.5239 SMAPE_Forecast=0.6012 SMAPE_Test=0.5513
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.5811 MASE_Forecast=0.5724 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=121252.86111111111 L1_Forecast=101230.22222222222 L1_Test=46171.0
INFO:pyaf.std:MODEL_L2 L2_Fit=268908.8411572105 L2_Forecast=155871.73582628762 L2_Test=46171.0
INFO:pyaf.std:MODEL_COMPLEXITY 32
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 91027.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 343.5
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_BEAUJOLAIS_ROUGE_DE_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BEAUJOLAIS_ROUGE_GB' Length=46  Min=192141 Max=2272768  Mean=838876.5217391305 StdDev=444492.2831160113
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BEAUJOLAIS_ROUGE_GB' Min=192141 Max=2272768  Mean=838876.5217391305 StdDev=444492.2831160113
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BEAUJOLAIS_ROUGE_GB_Lag1Trend_residue_zeroCycle_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BEAUJOLAIS_ROUGE_GB_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_BEAUJOLAIS_ROUGE_GB_Lag1Trend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_BEAUJOLAIS_ROUGE_GB_Lag1Trend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.7216 MAPE_Forecast=0.3584 MAPE_Test=0.022
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.5076 SMAPE_Forecast=0.3897 SMAPE_Test=0.0223
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9722 MASE_Forecast=0.9094 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=422320.22222222225 L1_Forecast=335481.1111111111 L1_Test=22705.0
INFO:pyaf.std:MODEL_L2 L2_Fit=574972.8645601943 L2_Forecast=485564.32192152576 L2_Test=22705.0
INFO:pyaf.std:MODEL_COMPLEXITY 32
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 332417
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _BEAUJOLAIS_ROUGE_GB_Lag1Trend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BEAUJOLAIS_ROUGE_US' Length=46  Min=440023 Max=3915548  Mean=1079590.3260869565 StdDev=842735.9221298484
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BEAUJOLAIS_ROUGE_US' Min=440023 Max=3915548  Mean=1079590.3260869565 StdDev=842735.9221298484
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BEAUJOLAIS_ROUGE_US_PolyTrend_residue_zeroCycle_residue_NoAR' [PolyTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BEAUJOLAIS_ROUGE_US_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL '_BEAUJOLAIS_ROUGE_US_PolyTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_BEAUJOLAIS_ROUGE_US_PolyTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.5762 MAPE_Forecast=0.2867 MAPE_Test=0.2685
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.4781 SMAPE_Forecast=0.2956 SMAPE_Test=0.2367
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8072 MASE_Forecast=0.5783 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=582255.0717515774 L1_Forecast=387408.1202543912 L1_Test=163654.82898440142
INFO:pyaf.std:MODEL_L2 L2_Fit=867034.3960889542 L2_Forecast=774435.6013471647 L2_Test=163654.82898440142
INFO:pyaf.std:MODEL_COMPLEXITY 16
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (1131258.6850227886, array([ 50209.91778048, -95354.83984141, -67821.96281153]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _BEAUJOLAIS_ROUGE_US_PolyTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BORDEAUX_BLANC_BE' Length=46  Min=245742 Max=691209  Mean=456342.2173913043 StdDev=106016.69675039769
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BORDEAUX_BLANC_BE' Min=245742 Max=691209  Mean=456342.2173913043 StdDev=106016.69675039769
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle_residue_AR(11)' [PolyTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL '_BORDEAUX_BLANC_BE_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL '_BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1248 MAPE_Forecast=0.3373 MAPE_Test=0.124
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1211 SMAPE_Forecast=0.3039 SMAPE_Test=0.1322
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.5954 MASE_Forecast=0.6997 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=57284.517524619594 L1_Forecast=125843.55513525108 L1_Test=49609.97701860487
INFO:pyaf.std:MODEL_L2 L2_Fit=71511.23866079607 L2_Forecast=133791.73715896055 L2_Test=49609.97701860487
INFO:pyaf.std:MODEL_COMPLEXITY 25
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (485035.12549230363, array([-10946.04507864, -13864.07444396, -10477.25215761]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 _BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle_residue_Lag8 -0.46295643443810675
INFO:pyaf.std:AR_MODEL_COEFF 2 _BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle_residue_Lag9 -0.25126273327759124
INFO:pyaf.std:AR_MODEL_COEFF 3 _BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle_residue_Lag1 -0.19122224629160922
INFO:pyaf.std:AR_MODEL_COEFF 4 _BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle_residue_Lag4 -0.18124344804227538
INFO:pyaf.std:AR_MODEL_COEFF 5 _BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle_residue_Lag10 -0.14382031687468305
INFO:pyaf.std:AR_MODEL_COEFF 6 _BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle_residue_Lag7 -0.09693571262674545
INFO:pyaf.std:AR_MODEL_COEFF 7 _BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle_residue_Lag11 0.08371638166891922
INFO:pyaf.std:AR_MODEL_COEFF 8 _BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle_residue_Lag3 0.03586148418576256
INFO:pyaf.std:AR_MODEL_COEFF 9 _BORDEAUX_BLANC_BE_PolyTrend_residue_zeroCycle_residue_Lag6 -0.030910209104456715
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BORDEAUX_BLANC_CN' Length=46  Min=167874 Max=1890312  Mean=514962.47826086957 StdDev=297091.7530392676
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BORDEAUX_BLANC_CN' Min=167874 Max=1890312  Mean=514962.47826086957 StdDev=297091.7530392676
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BORDEAUX_BLANC_CN_ConstantTrend_residue_zeroCycle_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BORDEAUX_BLANC_CN_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_BORDEAUX_BLANC_CN_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_BORDEAUX_BLANC_CN_ConstantTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.4861 MAPE_Forecast=0.306 MAPE_Test=0.2898
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.4008 SMAPE_Forecast=0.3129 SMAPE_Test=0.2532
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7969 MASE_Forecast=0.5033 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=196901.17592592593 L1_Forecast=234114.8703703704 L1_Test=111135.83333333331
INFO:pyaf.std:MODEL_L2 L2_Fit=236751.57395505198 L2_Forecast=477151.95433478977 L2_Test=111135.83333333331
INFO:pyaf.std:MODEL_COMPLEXITY 0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 494562.8333333333
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _BORDEAUX_BLANC_CN_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BORDEAUX_BLANC_DE' Length=46  Min=199559 Max=1326338  Mean=401697.6304347826 StdDev=223714.96243107508
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BORDEAUX_BLANC_DE' Min=199559 Max=1326338  Mean=401697.6304347826 StdDev=223714.96243107508
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BORDEAUX_BLANC_DE_Lag1Trend_residue_zeroCycle_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BORDEAUX_BLANC_DE_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_BORDEAUX_BLANC_DE_Lag1Trend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_BORDEAUX_BLANC_DE_Lag1Trend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3966 MAPE_Forecast=0.2533 MAPE_Test=0.003
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3632 SMAPE_Forecast=0.1866 SMAPE_Test=0.003
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9722 MASE_Forecast=2.7377 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=178217.47222222222 L1_Forecast=97102.88888888889 L1_Test=1019.0
INFO:pyaf.std:MODEL_L2 L2_Fit=270676.3073877788 L2_Forecast=201387.2590557804 L2_Test=1019.0
INFO:pyaf.std:MODEL_COMPLEXITY 32
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 347708
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _BORDEAUX_BLANC_DE_Lag1Trend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BORDEAUX_BLANC_GB' Length=46  Min=494262 Max=1886486  Mean=895965.0 StdDev=300821.7917560957
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BORDEAUX_BLANC_GB' Min=494262 Max=1886486  Mean=895965.0 StdDev=300821.7917560957
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle_residue_AR(11)' [Lag1Trend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL '_BORDEAUX_BLANC_GB_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.259 MAPE_Forecast=0.133 MAPE_Test=0.1143
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2421 SMAPE_Forecast=0.1238 SMAPE_Test=0.1213
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7958 MASE_Forecast=0.7658 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=228564.85401399242 L1_Forecast=84699.5553837494 L1_Test=75387.22517473076
INFO:pyaf.std:MODEL_L2 L2_Fit=282372.93395753554 L2_Forecast=99936.68789248545 L2_Test=75387.22517473076
INFO:pyaf.std:MODEL_COMPLEXITY 41
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 573039
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 _BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle_residue_Lag2 -0.4792809310185916
INFO:pyaf.std:AR_MODEL_COEFF 2 _BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle_residue_Lag9 -0.29781837036736203
INFO:pyaf.std:AR_MODEL_COEFF 3 _BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle_residue_Lag11 -0.22996920027339465
INFO:pyaf.std:AR_MODEL_COEFF 4 _BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle_residue_Lag8 -0.16475362413346145
INFO:pyaf.std:AR_MODEL_COEFF 5 _BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle_residue_Lag7 -0.13010878754021102
INFO:pyaf.std:AR_MODEL_COEFF 6 _BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle_residue_Lag1 -0.11806820881924548
INFO:pyaf.std:AR_MODEL_COEFF 7 _BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle_residue_Lag5 -0.10023948933404425
INFO:pyaf.std:AR_MODEL_COEFF 8 _BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle_residue_Lag6 -0.09118313852179934
INFO:pyaf.std:AR_MODEL_COEFF 9 _BORDEAUX_BLANC_GB_Lag1Trend_residue_zeroCycle_residue_Lag4 -0.07155757493403414
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BORDEAUX_BLANC_US' Length=46  Min=308516 Max=2175193  Mean=915953.8695652174 StdDev=381971.9587261785
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BORDEAUX_BLANC_US' Min=308516 Max=2175193  Mean=915953.8695652174 StdDev=381971.9587261785
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BORDEAUX_BLANC_US_LinearTrend_residue_zeroCycle_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BORDEAUX_BLANC_US_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_BORDEAUX_BLANC_US_LinearTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_BORDEAUX_BLANC_US_LinearTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.383 MAPE_Forecast=0.2096 MAPE_Test=0.2655
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3217 SMAPE_Forecast=0.2035 SMAPE_Test=0.3061
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9804 MASE_Forecast=0.641 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=307343.7377127167 L1_Forecast=167581.60529117833 L1_Test=260474.54880840587
INFO:pyaf.std:MODEL_L2 L2_Fit=403395.3115675406 L2_Forecast=252977.83561553687 L2_Test=260474.54880840587
INFO:pyaf.std:MODEL_COMPLEXITY 16
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (1051623.0207907981, array([-222810.23174662]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _BORDEAUX_BLANC_US_LinearTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BORDEAUX_ROUGE_BE' Length=46  Min=2715290 Max=8870126  Mean=4860646.326086956 StdDev=1181817.611733558
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BORDEAUX_ROUGE_BE' Min=2715290 Max=8870126  Mean=4860646.326086956 StdDev=1181817.611733558
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BORDEAUX_ROUGE_BE_PolyTrend_residue_zeroCycle_residue_NoAR' [PolyTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BORDEAUX_ROUGE_BE_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL '_BORDEAUX_ROUGE_BE_PolyTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_BORDEAUX_ROUGE_BE_PolyTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1511 MAPE_Forecast=0.1915 MAPE_Test=0.1893
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1449 SMAPE_Forecast=0.1977 SMAPE_Test=0.1729
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8192 MASE_Forecast=0.9958 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=745887.7208675914 L1_Forecast=803425.001323376 L1_Test=534538.4391579833
INFO:pyaf.std:MODEL_L2 L2_Fit=1034134.42595624 L2_Forecast=921082.2727095841 L2_Test=534538.4391579833
INFO:pyaf.std:MODEL_COMPLEXITY 16
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (5578177.399729773, array([-543957.71047817, -442584.48857778, -132591.75665023]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _BORDEAUX_ROUGE_BE_PolyTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BORDEAUX_ROUGE_CN' Length=46  Min=5377235 Max=19050876  Mean=11306225.717391305 StdDev=3097054.2409197744
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_BORDEAUX_ROUGE_CN' Min=-7118004.0 Max=8508070.0  Mean=58285.34782608696 StdDev=2959960.353380101
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_AR(11)' [ConstantTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff_BORDEAUX_ROUGE_CN_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3932 MAPE_Forecast=0.2216 MAPE_Test=0.0703
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.521 SMAPE_Forecast=0.1932 SMAPE_Test=0.0679
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.2581 MASE_Forecast=0.7022 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=4710841.45749947 L1_Forecast=2110502.4689600933 L1_Test=793876.8093173634
INFO:pyaf.std:MODEL_L2 L2_Fit=5899859.7343801735 L2_Forecast=2646130.4232281283 L2_Test=793876.8093173634
INFO:pyaf.std:MODEL_COMPLEXITY 41
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 8616750
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 102348.25
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag3 -0.3867966153192115
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag9 -0.29935738107599374
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag2 -0.2945132457675459
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag6 -0.13283631227578233
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag7 0.10596403673387618
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag10 -0.06307985742933694
INFO:pyaf.std:AR_MODEL_COEFF 7 Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag1 -0.05288492538443518
INFO:pyaf.std:AR_MODEL_COEFF 8 Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag11 -0.03488010234067359
INFO:pyaf.std:AR_MODEL_COEFF 9 Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag5 0.030428207374232505
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BORDEAUX_ROUGE_DE' Length=46  Min=2405187 Max=11394342  Mean=5615971.565217392 StdDev=2064107.8688105305
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_BORDEAUX_ROUGE_DE' Min=-4829856.0 Max=7416578.0  Mean=-58739.04347826087 StdDev=2029543.9403694377
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_BORDEAUX_ROUGE_DE_LinearTrend_residue_zeroCycle_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_BORDEAUX_ROUGE_DE_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_BORDEAUX_ROUGE_DE_LinearTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_BORDEAUX_ROUGE_DE_LinearTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.337 MAPE_Forecast=0.272 MAPE_Test=0.5614
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2917 SMAPE_Forecast=0.2118 SMAPE_Test=0.4384
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.1162 MASE_Forecast=0.8426 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=1699796.3050877494 L1_Forecast=910725.4387466401 L1_Test=1690031.6837035054
INFO:pyaf.std:MODEL_L2 L2_Fit=2172921.2151209507 L2_Forecast=1186136.6973808932 L2_Test=1690031.6837035054
INFO:pyaf.std:MODEL_COMPLEXITY 48
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 5712301
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (39395.26964530392, array([-90024.4315109]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_BORDEAUX_ROUGE_DE_LinearTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BORDEAUX_ROUGE_GB' Length=46  Min=3514450 Max=31746732  Mean=11497424.326086957 StdDev=7109974.038927046
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BORDEAUX_ROUGE_GB' Min=3514450 Max=31746732  Mean=11497424.326086957 StdDev=7109974.038927046
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BORDEAUX_ROUGE_GB_Lag1Trend_residue_zeroCycle_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BORDEAUX_ROUGE_GB_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_BORDEAUX_ROUGE_GB_Lag1Trend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_BORDEAUX_ROUGE_GB_Lag1Trend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3547 MAPE_Forecast=0.1592 MAPE_Test=0.1213
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3104 SMAPE_Forecast=0.1541 SMAPE_Test=0.1291
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9722 MASE_Forecast=0.9753 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=3622128.5 L1_Forecast=951526.7777777778 L1_Test=801509.0
INFO:pyaf.std:MODEL_L2 L2_Fit=4522958.716730319 L2_Forecast=1259434.9100598427 L2_Test=801509.0
INFO:pyaf.std:MODEL_COMPLEXITY 32
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 15561360
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _BORDEAUX_ROUGE_GB_Lag1Trend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BORDEAUX_ROUGE_US' Length=46  Min=4185506 Max=12010664  Mean=7258747.695652174 StdDev=1702658.0645825628
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_BORDEAUX_ROUGE_US' Min=-4820956.0 Max=3766538.0  Mean=1040.0434782608695 StdDev=2080772.573766438
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle_residue_AR(11)' [LinearTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff_BORDEAUX_ROUGE_US_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3846 MAPE_Forecast=0.1988 MAPE_Test=0.202
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.4796 SMAPE_Forecast=0.1863 SMAPE_Test=0.2247
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.7559 MASE_Forecast=0.6704 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=3004362.8880813215 L1_Forecast=1187013.801149747 L1_Test=1032141.8526997664
INFO:pyaf.std:MODEL_L2 L2_Fit=3670201.8525633416 L2_Forecast=1279973.40760195 L2_Test=1032141.8526997664
INFO:pyaf.std:MODEL_COMPLEXITY 57
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 5060936
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (195248.20143121778, array([-228091.25510606]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag1 -0.5343256502974916
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag2 -0.4086340480153158
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag3 -0.37400935875058217
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag4 -0.3393683517623793
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag8 -0.2993810217822489
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag10 -0.23484764955492038
INFO:pyaf.std:AR_MODEL_COEFF 7 Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag11 -0.18718694611634612
INFO:pyaf.std:AR_MODEL_COEFF 8 Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag5 -0.08362293974452023
INFO:pyaf.std:AR_MODEL_COEFF 9 Diff_BORDEAUX_ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag6 0.07195965624778038
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='_BLANC_BE' Length=46  Min=853049 Max=2808045  Mean=1667050.0 StdDev=325334.3885597121
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='__BLANC_BE' Min=853049 Max=2808045  Mean=1667050.0 StdDev=325334.3885597121
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '__BLANC_BE_ConstantTrend_residue_zeroCycle_residue_AR(11)' [ConstantTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL '__BLANC_BE_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '__BLANC_BE_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '__BLANC_BE_ConstantTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0927 MAPE_Forecast=0.2702 MAPE_Test=0.4738
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0911 SMAPE_Forecast=0.263 SMAPE_Test=0.383
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.517 MASE_Forecast=0.9014 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=152570.99085038746 L1_Forecast=437125.81311009015 L1_Test=514972.93484188546
INFO:pyaf.std:MODEL_L2 L2_Fit=195549.86706984608 L2_Forecast=536239.7343081034 L2_Test=514972.93484188546
INFO:pyaf.std:MODEL_COMPLEXITY 9
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 1678664.2777777778
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES __BLANC_BE_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 __BLANC_BE_ConstantTrend_residue_zeroCycle_residue_Lag7 -0.3330599597839384
INFO:pyaf.std:AR_MODEL_COEFF 2 __BLANC_BE_ConstantTrend_residue_zeroCycle_residue_Lag6 -0.2888668241545307
INFO:pyaf.std:AR_MODEL_COEFF 3 __BLANC_BE_ConstantTrend_residue_zeroCycle_residue_Lag9 0.2723396418653432
INFO:pyaf.std:AR_MODEL_COEFF 4 __BLANC_BE_ConstantTrend_residue_zeroCycle_residue_Lag3 0.20329328039229477
INFO:pyaf.std:AR_MODEL_COEFF 5 __BLANC_BE_ConstantTrend_residue_zeroCycle_residue_Lag4 -0.1668611542763942
INFO:pyaf.std:AR_MODEL_COEFF 6 __BLANC_BE_ConstantTrend_residue_zeroCycle_residue_Lag1 -0.12732856693322953
INFO:pyaf.std:AR_MODEL_COEFF 7 __BLANC_BE_ConstantTrend_residue_zeroCycle_residue_Lag8 -0.09243460110395288
INFO:pyaf.std:AR_MODEL_COEFF 8 __BLANC_BE_ConstantTrend_residue_zeroCycle_residue_Lag5 0.08541645725711401
INFO:pyaf.std:AR_MODEL_COEFF 9 __BLANC_BE_ConstantTrend_residue_zeroCycle_residue_Lag11 0.06916493900084736
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='_BLANC_CN' Length=46  Min=263941 Max=1909858  Mean=638138.7173913043 StdDev=294811.54292837897
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='__BLANC_CN' Min=263941 Max=1909858  Mean=638138.7173913043 StdDev=294811.54292837897
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '__BLANC_CN_ConstantTrend_residue_zeroCycle_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '__BLANC_CN_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '__BLANC_CN_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '__BLANC_CN_ConstantTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3872 MAPE_Forecast=0.255 MAPE_Test=0.2436
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3344 SMAPE_Forecast=0.2654 SMAPE_Test=0.2172
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.812 MASE_Forecast=0.5312 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=204426.3425925926 L1_Forecast=229134.56172839506 L1_Test=121080.0555555555
INFO:pyaf.std:MODEL_L2 L2_Fit=247309.123453371 L2_Forecast=447221.0158893082 L2_Test=121080.0555555555
INFO:pyaf.std:MODEL_COMPLEXITY 0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 618080.0555555555
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES __BLANC_CN_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='_BLANC_DE' Length=46  Min=512709 Max=3197853  Mean=1005336.9565217391 StdDev=451688.6298029899
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='__BLANC_DE' Min=512709 Max=3197853  Mean=1005336.9565217391 StdDev=451688.6298029899
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '__BLANC_DE_Lag1Trend_residue_zeroCycle_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '__BLANC_DE_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '__BLANC_DE_Lag1Trend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '__BLANC_DE_Lag1Trend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2715 MAPE_Forecast=0.137 MAPE_Test=0.0813
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2595 SMAPE_Forecast=0.13 SMAPE_Test=0.0781
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9722 MASE_Forecast=1.1418 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=301820.6388888889 L1_Forecast=122775.44444444444 L1_Test=61492.0
INFO:pyaf.std:MODEL_L2 L2_Fit=473858.77604200575 L2_Forecast=141608.55178546874 L2_Test=61492.0
INFO:pyaf.std:MODEL_COMPLEXITY 32
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 705224
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES __BLANC_DE_Lag1Trend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='_BLANC_GB' Length=46  Min=766268 Max=2434870  Mean=1306136.6739130435 StdDev=359090.10102328827
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='__BLANC_GB' Min=766268 Max=2434870  Mean=1306136.6739130435 StdDev=359090.10102328827
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '__BLANC_GB_PolyTrend_residue_zeroCycle_residue_NoAR' [PolyTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '__BLANC_GB_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL '__BLANC_GB_PolyTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '__BLANC_GB_PolyTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2356 MAPE_Forecast=0.1475 MAPE_Test=0.1749
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2151 SMAPE_Forecast=0.1444 SMAPE_Test=0.1917
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.792 MASE_Forecast=0.8513 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=289347.3500192675 L1_Forecast=151747.98933109207 L1_Test=193149.86669747776
INFO:pyaf.std:MODEL_L2 L2_Fit=369107.25205425656 L2_Forecast=194430.47856165405 L2_Test=193149.86669747776
INFO:pyaf.std:MODEL_COMPLEXITY 16
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (1428083.7941728078, array([ -16077.03975386,  -63898.06720653, -107450.85578699]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES __BLANC_GB_PolyTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='_BLANC_US' Length=46  Min=750542 Max=3049849  Mean=1607559.891304348 StdDev=470190.48609390995
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff__BLANC_US' Min=-1732552.0 Max=944746.0  Mean=18105.32608695652 StdDev=542971.3327010302
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff__BLANC_US_ConstantTrend_residue_zeroCycle_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff__BLANC_US_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff__BLANC_US_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff__BLANC_US_ConstantTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.363 MAPE_Forecast=0.1927 MAPE_Test=0.1549
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.4722 SMAPE_Forecast=0.2095 SMAPE_Test=0.1679
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.5004 MASE_Forecast=0.7531 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=672972.4537037038 L1_Forecast=307962.51851851866 L1_Test=245317.66666666698
INFO:pyaf.std:MODEL_L2 L2_Fit=836798.0941911467 L2_Forecast=406290.2059059647 L2_Test=245317.66666666698
INFO:pyaf.std:MODEL_COMPLEXITY 32
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 750542
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 12772.333333333334
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff__BLANC_US_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='_ROUGE_BE' Length=46  Min=2796589.0 Max=9022530.0  Mean=5045037.478260869 StdDev=1209077.406360806
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='__ROUGE_BE' Min=2796589.0 Max=9022530.0  Mean=5045037.478260869 StdDev=1209077.406360806
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '__ROUGE_BE_PolyTrend_residue_zeroCycle_residue_NoAR' [PolyTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '__ROUGE_BE_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL '__ROUGE_BE_PolyTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '__ROUGE_BE_PolyTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1493 MAPE_Forecast=0.2045 MAPE_Test=0.2418
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1433 SMAPE_Forecast=0.2039 SMAPE_Test=0.2157
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8256 MASE_Forecast=0.9947 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=764860.115488373 L1_Forecast=859928.202818601 L1_Test=721097.7841836507
INFO:pyaf.std:MODEL_L2 L2_Fit=1066816.7763162635 L2_Forecast=946236.4320116949 L2_Test=721097.7841836507
INFO:pyaf.std:MODEL_COMPLEXITY 16
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (5729382.1459155, array([-500315.93249302, -410277.25069149, -115057.39533414]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES __ROUGE_BE_PolyTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='_ROUGE_CN' Length=46  Min=5386017.0 Max=19253413.0  Mean=11440676.25 StdDev=3141160.623167092
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff__ROUGE_CN' Min=-7238083.0 Max=8710021.0  Mean=59093.086956521736 StdDev=3020526.169190597
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_AR(11)' [ConstantTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff__ROUGE_CN_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3957 MAPE_Forecast=0.2253 MAPE_Test=0.1047
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.5205 SMAPE_Forecast=0.1917 SMAPE_Test=0.0995
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.2619 MASE_Forecast=0.6858 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=4765361.299080988 L1_Forecast=2098180.896532506 L1_Test=1196288.4632009193
INFO:pyaf.std:MODEL_L2 L2_Fit=5930253.046676317 L2_Forecast=2626225.262002648 L2_Test=1196288.4632009193
INFO:pyaf.std:MODEL_COMPLEXITY 41
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 8712169.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 111289.27777777778
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag3 -0.3938262014372832
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag9 -0.31260082732104433
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag2 -0.290432397381882
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag6 -0.147671183735505
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag7 0.09536339830947593
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag10 -0.06671640150599736
INFO:pyaf.std:AR_MODEL_COEFF 7 Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag1 -0.041056260811498574
INFO:pyaf.std:AR_MODEL_COEFF 8 Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag11 -0.030237070923668632
INFO:pyaf.std:AR_MODEL_COEFF 9 Diff__ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_Lag5 0.029899097802960073
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='_ROUGE_DE' Length=46  Min=2576759.5 Max=11527120.0  Mean=5795970.271739131 StdDev=2149090.023555313
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff__ROUGE_DE' Min=-4773110.0 Max=8028307.0  Mean=-59399.260869565216 StdDev=2167675.332105222
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff__ROUGE_DE_LinearTrend_residue_zeroCycle_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff__ROUGE_DE_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff__ROUGE_DE_LinearTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff__ROUGE_DE_LinearTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.347 MAPE_Forecast=0.2428 MAPE_Test=0.5046
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3 SMAPE_Forecast=0.1972 SMAPE_Test=0.403
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.0612 MASE_Forecast=0.7929 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=1800173.5358779323 L1_Forecast=876283.8253709921 L1_Test=1549688.5003144704
INFO:pyaf.std:MODEL_L2 L2_Fit=2277685.553655341 L2_Forecast=1118073.196200151 L2_Test=1549688.5003144704
INFO:pyaf.std:MODEL_COMPLEXITY 48
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 5803328.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (50875.054710970326, array([-112299.32557484]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff__ROUGE_DE_LinearTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='_ROUGE_GB' Length=46  Min=3706591 Max=32312972  Mean=12336300.847826088 StdDev=7138759.909037828
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='__ROUGE_GB' Min=3706591 Max=32312972  Mean=12336300.847826088 StdDev=7138759.909037828
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '__ROUGE_GB_Lag1Trend_residue_zeroCycle_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '__ROUGE_GB_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '__ROUGE_GB_Lag1Trend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '__ROUGE_GB_Lag1Trend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3701 MAPE_Forecast=0.1611 MAPE_Test=0.1079
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3202 SMAPE_Forecast=0.1552 SMAPE_Test=0.114
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9722 MASE_Forecast=0.9711 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=3920390.722222222 L1_Forecast=1086047.0 L1_Test=824214.0
INFO:pyaf.std:MODEL_L2 L2_Fit=4785177.235679521 L2_Forecast=1442701.9862164112 L2_Test=824214.0
INFO:pyaf.std:MODEL_COMPLEXITY 32
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 15893777
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES __ROUGE_GB_Lag1Trend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='_ROUGE_US' Length=46  Min=4816309 Max=14136138  Mean=8338338.021739131 StdDev=2220242.2116335835
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff__ROUGE_US' Min=-7329571.0 Max=5639646.0  Mean=-10617.304347826086 StdDev=2763795.622442063
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff__ROUGE_US_LinearTrend_residue_zeroCycle_residue_AR(11)' [LinearTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff__ROUGE_US_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff__ROUGE_US_LinearTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff__ROUGE_US_LinearTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.4093 MAPE_Forecast=0.1533 MAPE_Test=0.005
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.4318 SMAPE_Forecast=0.141 SMAPE_Test=0.0051
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.5744 MASE_Forecast=0.4684 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=3448271.26257505 L1_Forecast=1046850.6423941222 L1_Test=28820.91255025938
INFO:pyaf.std:MODEL_L2 L2_Fit=4279000.142370737 L2_Forecast=1353323.9885370727 L2_Test=28820.91255025938
INFO:pyaf.std:MODEL_COMPLEXITY 57
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 6206656
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (216131.2543223783, array([-309071.19838898]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff__ROUGE_US_LinearTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff__ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag1 -0.6040101043642765
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff__ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag2 -0.6020075406467693
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff__ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag3 -0.4307789154066348
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff__ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag4 -0.4087690636882053
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff__ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag5 -0.18492915302912694
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff__ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag10 -0.17288022436635608
INFO:pyaf.std:AR_MODEL_COEFF 7 Diff__ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag7 0.17045018173452336
INFO:pyaf.std:AR_MODEL_COEFF 8 Diff__ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag8 -0.14649830706107214
INFO:pyaf.std:AR_MODEL_COEFF 9 Diff__ROUGE_US_LinearTrend_residue_zeroCycle_residue_Lag6 0.04798598084795799
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='__BE' Length=46  Min=3649638.0 Max=10746894.0  Mean=6712087.478260869 StdDev=1373420.1322209788
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='___BE' Min=3649638.0 Max=10746894.0  Mean=6712087.478260869 StdDev=1373420.1322209788
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '___BE_PolyTrend_residue_zeroCycle_residue_AR(11)' [PolyTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL '___BE_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL '___BE_PolyTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '___BE_PolyTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1016 MAPE_Forecast=0.1693 MAPE_Test=0.2586
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0997 SMAPE_Forecast=0.1722 SMAPE_Test=0.229
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6486 MASE_Forecast=0.9909 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=702084.2660367896 L1_Forecast=979359.0704590032 L1_Test=1052218.158282821
INFO:pyaf.std:MODEL_L2 L2_Fit=922592.1782983575 L2_Forecast=1150941.4629769188 L2_Test=1052218.158282821
INFO:pyaf.std:MODEL_COMPLEXITY 25
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (7361165.155088122, array([-437619.51689455, -385926.48004493,  -86638.74694475]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES ___BE_PolyTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 ___BE_PolyTrend_residue_zeroCycle_residue_Lag4 -0.35569829945654746
INFO:pyaf.std:AR_MODEL_COEFF 2 ___BE_PolyTrend_residue_zeroCycle_residue_Lag7 -0.34206529616673165
INFO:pyaf.std:AR_MODEL_COEFF 3 ___BE_PolyTrend_residue_zeroCycle_residue_Lag1 0.27086125255369575
INFO:pyaf.std:AR_MODEL_COEFF 4 ___BE_PolyTrend_residue_zeroCycle_residue_Lag8 -0.24710751927617688
INFO:pyaf.std:AR_MODEL_COEFF 5 ___BE_PolyTrend_residue_zeroCycle_residue_Lag6 0.2385596630803648
INFO:pyaf.std:AR_MODEL_COEFF 6 ___BE_PolyTrend_residue_zeroCycle_residue_Lag3 -0.12841306966630328
INFO:pyaf.std:AR_MODEL_COEFF 7 ___BE_PolyTrend_residue_zeroCycle_residue_Lag5 -0.07414505688108755
INFO:pyaf.std:AR_MODEL_COEFF 8 ___BE_PolyTrend_residue_zeroCycle_residue_Lag11 0.0515271496327909
INFO:pyaf.std:AR_MODEL_COEFF 9 ___BE_PolyTrend_residue_zeroCycle_residue_Lag9 -0.021982328772204837
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='__CN' Length=46  Min=5739856.0 Max=20299168.0  Mean=12078814.967391305 StdDev=3221460.4046913716
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff___CN' Min=-7241263.5 Max=8724178.0  Mean=57784.19565217391 StdDev=3063515.4226825424
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff___CN_ConstantTrend_residue_zeroCycle_residue_AR(11)' [ConstantTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff___CN_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff___CN_ConstantTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff___CN_ConstantTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3787 MAPE_Forecast=0.2353 MAPE_Test=0.0926
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.4745 SMAPE_Forecast=0.1973 SMAPE_Test=0.0885
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.1716 MASE_Forecast=0.7336 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=4760283.971866047 L1_Forecast=2276336.9642346404 L1_Test=1104571.0871963613
INFO:pyaf.std:MODEL_L2 L2_Fit=5843680.673765567 L2_Forecast=2852608.7810445037 L2_Test=1104571.0871963613
INFO:pyaf.std:MODEL_COMPLEXITY 41
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 9269378.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 119237.91666666667
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff___CN_ConstantTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag3 -0.35851435112288343
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag2 -0.3535677461379974
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag9 -0.2558327092791706
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag7 0.12686501726411153
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag6 -0.08451565226966891
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag5 -0.05216781461233444
INFO:pyaf.std:AR_MODEL_COEFF 7 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag11 -0.034605436085233296
INFO:pyaf.std:AR_MODEL_COEFF 8 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag10 -0.030658322709511646
INFO:pyaf.std:AR_MODEL_COEFF 9 Diff___CN_ConstantTrend_residue_zeroCycle_residue_Lag1 0.017510237302299468
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='__DE' Length=46  Min=3137087.5 Max=13458746.0  Mean=6801307.228260869 StdDev=2441392.868554021
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='___DE' Min=3137087.5 Max=13458746.0  Mean=6801307.228260869 StdDev=2441392.868554021
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '___DE_Lag1Trend_residue_zeroCycle_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '___DE_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '___DE_Lag1Trend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '___DE_Lag1Trend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2663 MAPE_Forecast=0.2377 MAPE_Test=0.2269
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2562 SMAPE_Forecast=0.2098 SMAPE_Test=0.2037
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9722 MASE_Forecast=1.0209 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=1780306.3333333333 L1_Forecast=1107360.888888889 L1_Test=868251.0
INFO:pyaf.std:MODEL_L2 L2_Fit=2608066.128208228 L2_Forecast=1311702.0584794695 L2_Test=868251.0
INFO:pyaf.std:MODEL_COMPLEXITY 32
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 6508552.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES ___DE_Lag1Trend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='__GB' Length=46  Min=4584449 Max=34054975  Mean=13642437.52173913 StdDev=7330809.1345297
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='___GB' Min=4584449 Max=34054975  Mean=13642437.52173913 StdDev=7330809.1345297
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '___GB_Lag1Trend_residue_zeroCycle_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '___GB_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '___GB_Lag1Trend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '___GB_Lag1Trend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3503 MAPE_Forecast=0.1579 MAPE_Test=0.0961
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3066 SMAPE_Forecast=0.1538 SMAPE_Test=0.1009
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9722 MASE_Forecast=0.9576 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=4173764.3333333335 L1_Forecast=1230684.111111111 L1_Test=840216.0
INFO:pyaf.std:MODEL_L2 L2_Fit=5023345.709032571 L2_Forecast=1567222.4394758958 L2_Test=840216.0
INFO:pyaf.std:MODEL_COMPLEXITY 32
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 16811090
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES ___GB_Lag1Trend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='__US' Length=46  Min=5868951 Max=17185987  Mean=9945897.913043479 StdDev=2510136.266406258
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='___US' Min=5868951 Max=17185987  Mean=9945897.913043479 StdDev=2510136.266406258
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '___US_LinearTrend_residue_zeroCycle_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '___US_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '___US_LinearTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '___US_LinearTrend_residue_zeroCycle_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1917 MAPE_Forecast=0.2209 MAPE_Test=0.2236
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1847 SMAPE_Forecast=0.2023 SMAPE_Test=0.2011
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7802 MASE_Forecast=0.7157 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=1922713.7690322092 L1_Forecast=1789928.428711845 L1_Test=1632606.6700245067
INFO:pyaf.std:MODEL_L2 L2_Fit=2510501.287288395 L2_Forecast=2096609.4319779796 L2_Test=1632606.6700245067
INFO:pyaf.std:MODEL_COMPLEXITY 16
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (10887439.458791293, array([-1314881.70988409]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES ___US_LinearTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TIME_DETAIL TimeVariable='Month' TimeMin=2012-01-01T00:00:00.000000 TimeMax=2014-12-01T00:00:00.000000 TimeDelta=<DateOffset: months=1> Horizon=1
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='__' Length=46  Min=28850872.5 Max=74341125.5  Mean=49180545.10869565 StdDev=11452870.277739467
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='___' Min=28850872.5 Max=74341125.5  Mean=49180545.10869565 StdDev=11452870.277739467
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '____LinearTrend_residue_zeroCycle_residue_AR(11)' [LinearTrend + NoCycle + AR]
INFO:pyaf.std:TREND_DETAIL '____LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '____LinearTrend_residue_zeroCycle' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '____LinearTrend_residue_zeroCycle_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1073 MAPE_Forecast=0.1367 MAPE_Test=0.0933
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.104 SMAPE_Forecast=0.1411 SMAPE_Test=0.0891
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.634 MASE_Forecast=0.7528 MASE_Test=None
INFO:pyaf.std:MODEL_L1 L1_Fit=5311578.465220075 L1_Forecast=5309854.235871161 L1_Test=3345292.239105746
INFO:pyaf.std:MODEL_L2 L2_Fit=6571495.053618537 L2_Forecast=6516614.471320467 L2_Test=3345292.239105746
INFO:pyaf.std:MODEL_COMPLEXITY 25
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (60068064.09053329, array([-16842619.64399239]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES ____LinearTrend_residue_zeroCycle 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 ____LinearTrend_residue_zeroCycle_residue_Lag1 0.6742205685754659
INFO:pyaf.std:AR_MODEL_COEFF 2 ____LinearTrend_residue_zeroCycle_residue_Lag2 -0.33971284196078616
INFO:pyaf.std:AR_MODEL_COEFF 3 ____LinearTrend_residue_zeroCycle_residue_Lag9 -0.2978646833417023
INFO:pyaf.std:AR_MODEL_COEFF 4 ____LinearTrend_residue_zeroCycle_residue_Lag5 0.15990040041970066
INFO:pyaf.std:AR_MODEL_COEFF 5 ____LinearTrend_residue_zeroCycle_residue_Lag6 -0.11134600418577098
INFO:pyaf.std:AR_MODEL_COEFF 6 ____LinearTrend_residue_zeroCycle_residue_Lag10 0.1059902481535163
INFO:pyaf.std:AR_MODEL_COEFF 7 ____LinearTrend_residue_zeroCycle_residue_Lag3 -0.059348058951261634
INFO:pyaf.std:AR_MODEL_COEFF 8 ____LinearTrend_residue_zeroCycle_residue_Lag8 0.0348269220197896
INFO:pyaf.std:AR_MODEL_COEFF 9 ____LinearTrend_residue_zeroCycle_residue_Lag4 0.016475437012483496
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:START_PLOTTING
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:31: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da06d1f40> has a label of '_Trend' which cannot be automatically added to the legend.
  ax.legend(patched_names)
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:31: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da06d1ee0> has a label of '_Trend_residue' which cannot be automatically added to the legend.
  ax.legend(patched_names)
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:31: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da06f51c0> has a label of '_Trend_residue' which cannot be automatically added to the legend.
  ax.legend(patched_names)
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:31: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0650e80> has a label of '_Cycle' which cannot be automatically added to the legend.
  ax.legend(patched_names)
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:31: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0650e20> has a label of '_Cycle_residue' which cannot be automatically added to the legend.
  ax.legend(patched_names)
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:31: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da066bd60> has a label of '_Cycle_residue' which cannot be automatically added to the legend.
  ax.legend(patched_names)
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:31: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da05c6fd0> has a label of '_AR' which cannot be automatically added to the legend.
  ax.legend(patched_names)
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:31: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da05c6f40> has a label of '_AR_residue' which cannot be automatically added to the legend.
  ax.legend(patched_names)
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:31: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da054abb0> has a label of '_TransformedForecast' which cannot be automatically added to the legend.
  ax.legend(patched_names)
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:31: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da054aca0> has a label of '_TransformedResidue' which cannot be automatically added to the legend.
  ax.legend(patched_names)
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:49: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=2, figsize=(32, 16))
/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/TS/Plots.py:130: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, axs = plt.subplots(ncols=1, figsize=(16, 8))
INFO:pyaf.std:END_PLOTTING_TIME_IN_SECONDS 20.598072052001953
INFO:pyaf.std:START_HIERARCHICAL_FORECASTING
INFO:pyaf.std:START_FORECASTING '['ALSACE_BLANC_BE', 'ALSACE_BLANC_CN', 'ALSACE_BLANC_DE', 'ALSACE_BLANC_GB', 'ALSACE_BLANC_US', 'BEAUJOLAIS_ROUGE_BE', 'BEAUJOLAIS_ROUGE_CN', 'BEAUJOLAIS_ROUGE_DE', 'BEAUJOLAIS_ROUGE_GB', 'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_BLANC_BE', 'BORDEAUX_BLANC_CN', 'BORDEAUX_BLANC_DE', 'BORDEAUX_BLANC_GB', 'BORDEAUX_BLANC_US', 'BORDEAUX_ROUGE_BE', 'BORDEAUX_ROUGE_CN', 'BORDEAUX_ROUGE_DE', 'BORDEAUX_ROUGE_GB', 'BORDEAUX_ROUGE_US', '_BLANC_BE', '_BLANC_CN', '_BLANC_DE', '_BLANC_GB', '_BLANC_US', '_ROUGE_BE', '_ROUGE_CN', '_ROUGE_DE', '_ROUGE_GB', '_ROUGE_US', '__BE', '__CN', '__DE', '__GB', '__US', '__']'
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 50 entries, 0 to 49
Columns: 177 entries, Month to RHÔNE_ROUGE_US
dtypes: datetime64[ns](1), float64(56), int64(120)
memory usage: 69.3 KB
dict_keys(['Structure', 'Models'])
{0: {'ALSACE_BLANC_BE': [], 'ALSACE_BLANC_CN': [], 'ALSACE_BLANC_DE': [], 'ALSACE_BLANC_GB': [], 'ALSACE_BLANC_US': [], 'BEAUJOLAIS_ROUGE_BE': [], 'BEAUJOLAIS_ROUGE_CN': [], 'BEAUJOLAIS_ROUGE_DE': [], 'BEAUJOLAIS_ROUGE_GB': [], 'BEAUJOLAIS_ROUGE_US': [], 'BORDEAUX_BLANC_BE': [], 'BORDEAUX_BLANC_CN': [], 'BORDEAUX_BLANC_DE': [], 'BORDEAUX_BLANC_GB': [], 'BORDEAUX_BLANC_US': [], 'BORDEAUX_ROUGE_BE': [], 'BORDEAUX_ROUGE_CN': [], 'BORDEAUX_ROUGE_DE': [], 'BORDEAUX_ROUGE_GB': [], 'BORDEAUX_ROUGE_US': []}, 1: {'_BLANC_BE': ['ALSACE_BLANC_BE', 'BORDEAUX_BLANC_BE'], '_BLANC_CN': ['ALSACE_BLANC_CN', 'BORDEAUX_BLANC_CN'], '_BLANC_DE': ['ALSACE_BLANC_DE', 'BORDEAUX_BLANC_DE'], '_BLANC_GB': ['ALSACE_BLANC_GB', 'BORDEAUX_BLANC_GB'], '_BLANC_US': ['ALSACE_BLANC_US', 'BORDEAUX_BLANC_US'], '_ROUGE_BE': ['BEAUJOLAIS_ROUGE_BE', 'BORDEAUX_ROUGE_BE'], '_ROUGE_CN': ['BEAUJOLAIS_ROUGE_CN', 'BORDEAUX_ROUGE_CN'], '_ROUGE_DE': ['BEAUJOLAIS_ROUGE_DE', 'BORDEAUX_ROUGE_DE'], '_ROUGE_GB': ['BEAUJOLAIS_ROUGE_GB', 'BORDEAUX_ROUGE_GB'], '_ROUGE_US': ['BEAUJOLAIS_ROUGE_US', 'BORDEAUX_ROUGE_US']}, 2: {'__BE': ['_BLANC_BE', '_ROUGE_BE'], '__CN': ['_BLANC_CN', '_ROUGE_CN'], '__DE': ['_BLANC_DE', '_ROUGE_DE'], '__GB': ['_BLANC_GB', '_ROUGE_GB'], '__US': ['_BLANC_US', '_ROUGE_US']}, 3: {'__': ['__BE', '__CN', '__DE', '__GB', '__US']}}
dict_keys(['ALSACE_BLANC_BE', 'ALSACE_BLANC_CN', 'ALSACE_BLANC_DE', 'ALSACE_BLANC_GB', 'ALSACE_BLANC_US', 'BEAUJOLAIS_ROUGE_BE', 'BEAUJOLAIS_ROUGE_CN', 'BEAUJOLAIS_ROUGE_DE', 'BEAUJOLAIS_ROUGE_GB', 'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_BLANC_BE', 'BORDEAUX_BLANC_CN', 'BORDEAUX_BLANC_DE', 'BORDEAUX_BLANC_GB', 'BORDEAUX_BLANC_US', 'BORDEAUX_ROUGE_BE', 'BORDEAUX_ROUGE_CN', 'BORDEAUX_ROUGE_DE', 'BORDEAUX_ROUGE_GB', 'BORDEAUX_ROUGE_US', '_BLANC_BE', '_BLANC_CN', '_BLANC_DE', '_BLANC_GB', '_BLANC_US', '_ROUGE_BE', '_ROUGE_CN', '_ROUGE_DE', '_ROUGE_GB', '_ROUGE_US', '__BE', '__CN', '__DE', '__GB', '__US', '__'])
{'Dataset': {'Time': {'TimeVariable': 'Month', 'TimeMinMax': ['2012-01-01 00:00:00', '2016-05-01 00:00:00'], 'Horizon': 1}, 'Signal': 'BORDEAUX_ROUGE_CN', 'Training_Signal_Length': 46}, 'Model': {'Best_Decomposition': 'Diff_BORDEAUX_ROUGE_CN_ConstantTrend_residue_zeroCycle_residue_AR(11)', 'Signal_Transoformation': 'Difference', 'Trend': 'ConstantTrend', 'Cycle': 'NoCycle', 'AR_Model': 'AR'}, 'Model_Performance': {'MAPE': '0.2216', 'MASE': '0.7022', 'MAE': '2110502.4689600933', 'RMSE': '2646130.4232281283', 'COMPLEXITY': '41'}}
                  Model                RMSE    MAPE
13    BORDEAUX_BLANC_GB   99936.68789248545   0.133
30                   __   6516614.471320467  0.1367
22            _BLANC_DE  141608.55178546874   0.137
3       ALSACE_BLANC_GB   66480.16663925201  0.1402
23            _BLANC_GB  194430.47856165405  0.1475
29            _ROUGE_US  1353323.9885370727  0.1533
34                 __GB  1567222.4394758958  0.1579
18    BORDEAUX_ROUGE_GB  1259434.9100598427  0.1592
28            _ROUGE_GB  1442701.9862164112  0.1611
31                 __BE  1150941.4629769188  0.1693
2       ALSACE_BLANC_DE   144769.4922736975  0.1906
15    BORDEAUX_ROUGE_BE   921082.2727095841  0.1915
24            _BLANC_US   406290.2059059647  0.1927
19    BORDEAUX_ROUGE_US    1279973.40760195  0.1988
25            _ROUGE_BE   946236.4320116949  0.2045
14    BORDEAUX_BLANC_US  252977.83561553687  0.2096
35                 __US  2096609.4319779796  0.2209
16    BORDEAUX_ROUGE_CN  2646130.4232281283  0.2216
26            _ROUGE_CN   2626225.262002648  0.2253
32                 __CN  2852608.7810445037  0.2353
33                 __DE  1311702.0584794695  0.2377
4       ALSACE_BLANC_US   178019.5721837483   0.238
27            _ROUGE_DE   1118073.196200151  0.2428
12    BORDEAUX_BLANC_DE   201387.2590557804  0.2533
21            _BLANC_CN   447221.0158893082   0.255
20            _BLANC_BE   536239.7343081034  0.2702
17    BORDEAUX_ROUGE_DE  1186136.6973808932   0.272
9   BEAUJOLAIS_ROUGE_US   774435.6013471647  0.2867
0       ALSACE_BLANC_BE  444837.29072987556  0.2979
11    BORDEAUX_BLANC_CN  477151.95433478977   0.306
10    BORDEAUX_BLANC_BE  133791.73715896055  0.3373
1       ALSACE_BLANC_CN   86153.69023954055  0.3401
8   BEAUJOLAIS_ROUGE_GB  485564.32192152576  0.3584
5   BEAUJOLAIS_ROUGE_BE   126806.9861784883  0.4458
7   BEAUJOLAIS_ROUGE_DE  155871.73582628762  0.6144
6   BEAUJOLAIS_ROUGE_CN  190554.48176906724     1.0
<IPython.core.display.Image object>
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  '['ALSACE_BLANC_BE', 'ALSACE_BLANC_CN', 'ALSACE_BLANC_DE', 'ALSACE_BLANC_GB', 'ALSACE_BLANC_US', 'BEAUJOLAIS_ROUGE_BE', 'BEAUJOLAIS_ROUGE_CN', 'BEAUJOLAIS_ROUGE_DE', 'BEAUJOLAIS_ROUGE_GB', 'BEAUJOLAIS_ROUGE_US', 'BORDEAUX_BLANC_BE', 'BORDEAUX_BLANC_CN', 'BORDEAUX_BLANC_DE', 'BORDEAUX_BLANC_GB', 'BORDEAUX_BLANC_US', 'BORDEAUX_ROUGE_BE', 'BORDEAUX_ROUGE_CN', 'BORDEAUX_ROUGE_DE', 'BORDEAUX_ROUGE_GB', 'BORDEAUX_ROUGE_US', '_BLANC_BE', '_BLANC_CN', '_BLANC_DE', '_BLANC_GB', '_BLANC_US', '_ROUGE_BE', '_ROUGE_CN', '_ROUGE_DE', '_ROUGE_GB', '_ROUGE_US', '__BE', '__CN', '__DE', '__GB', '__US', '__']' 7.281851291656494
INFO:pyaf.hierarchical:FORECASTING_HIERARCHICAL_MODEL_COMBINATION_METHODS ['BU', 'TD', 'MO', 'OC']
INFO:pyaf.hierarchical:FORECASTING_HIERARCHICAL_MODEL_BOTTOM_UP_METHOD BU
INFO:pyaf.hierarchical:FORECASTING_HIERARCHICAL_MODEL_TOP_DOWN_METHOD AHP_TD
INFO:pyaf.hierarchical:FORECASTING_HIERARCHICAL_MODEL_TOP_DOWN_METHOD PHA_TD
INFO:pyaf.hierarchical:FORECASTING_HIERARCHICAL_MODEL_MIDDLE_OUT_METHOD MO
INFO:pyaf.hierarchical:FORECASTING_HIERARCHICAL_MODEL_OPTIMAL_COMBINATION_METHOD OC
INFO:pyaf.std:END_HIERARCHICAL_FORECAST_TIME_IN_SECONDS 7.43456506729126
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:320: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig = self.plt.figure(figsize=self.figsize)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0fbd700> has a label of '__GB' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da013bd60> has a label of '__GB_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da013b1c0> has a label of '__GB_BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da013beb0> has a label of '__GB_PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da013b3a0> has a label of '__GB_AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da013be50> has a label of '__GB_MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da00b4e20> has a label of '__GB_OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:320: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig = self.plt.figure(figsize=self.figsize)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da01bdbb0> has a label of '__US' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da004ecd0> has a label of '__US_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da004e1f0> has a label of '__US_BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da004efa0> has a label of '__US_PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da004e340> has a label of '__US_AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da004ef70> has a label of '__US_MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da032ae50> has a label of '__US_OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:320: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig = self.plt.figure(figsize=self.figsize)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da00be6a0> has a label of '__DE' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0352460> has a label of '__DE_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0352820> has a label of '__DE_BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03529a0> has a label of '__DE_PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0352070> has a label of '__DE_AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0352910> has a label of '__DE_MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da02bf820> has a label of '__DE_OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:320: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig = self.plt.figure(figsize=self.figsize)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0329e20> has a label of '__BE' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0327c10> has a label of '__BE_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0327e50> has a label of '__BE_BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0327940> has a label of '__BE_PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da0327a60> has a label of '__BE_AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da01b7af0> has a label of '__BE_MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da01b70a0> has a label of '__BE_OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:320: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig = self.plt.figure(figsize=self.figsize)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da009a1f0> has a label of '__CN' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03e19d0> has a label of '__CN_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03b3490> has a label of '__CN_BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03b3550> has a label of '__CN_PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03b39d0> has a label of '__CN_AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03b30d0> has a label of '__CN_MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03b3580> has a label of '__CN_OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:320: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig = self.plt.figure(figsize=self.figsize)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da02e95b0> has a label of '__' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03b8d30> has a label of '___Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03b8040> has a label of '___BU_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03b8190> has a label of '___PHA_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03b1430> has a label of '___AHP_TD_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03b1f40> has a label of '___MO_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
/home/antoine/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:572: UserWarning: The handle <matplotlib.lines.Line2D object at 0x7f7da03b1340> has a label of '___OC_Forecast' which cannot be automatically added to the legend.
  ax.legend(handles, labels, loc="best", title=title)
WARNING:matplotlib.legend:No handles with labels found to put in legend.
