INFO:pyaf.std:START_TRAINING 'Signal'
          Time_Hourly  Hour  Day  Week    Signal
0 2000-01-01 00:00:00     0    5     0  5.240405
1 2000-01-01 01:00:00     1    5     0  3.888539
2 2000-01-01 02:00:00     2    5     0  3.274896
3 2000-01-01 03:00:00     3    5     0  4.993891
4 2000-01-01 04:00:00     4    5     0  3.323902
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10000 entries, 0 to 9999
Data columns (total 5 columns):
 #   Column       Non-Null Count  Dtype         
---  ------       --------------  -----         
 0   Time_Hourly  10000 non-null  datetime64[ns]
 1   Hour         10000 non-null  int64         
 2   Day          10000 non-null  int64         
 3   Week         10000 non-null  int64         
 4   Signal       10000 non-null  float64       
dtypes: datetime64[ns](1), float64(1), int64(3)
memory usage: 390.8 KB
None
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA RelDiff_Signal_ConstantTrend [('RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek', (0.0, 7)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_WeekOfMonth', (0.0, 11)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek', (0.0, 14)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek', (0.0, 21)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_Hour', (0.0, 24)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek', (0.0, 28)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfMonth', (0.0, 31)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek', (0.0, 42)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_WeekOfYear', (0.0, 49)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek', (0.0, 56)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfNthWeekOfMonth', (0.0, 66)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek', (0.0, 84)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek', (0.0, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST RelDiff_Signal_ConstantTrend RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek (0.0, 7)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA _Signal_ConstantTrend [('_Signal_ConstantTrend_residue_Seasonal_DayOfMonth', (0.736, 31))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST _Signal_ConstantTrend _Signal_ConstantTrend_residue_Seasonal_DayOfMonth (0.736, 31)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_ConstantTrend [('CumSum_Signal_ConstantTrend_residue_Seasonal_DayOfWeek', (0.986, 7)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfMonth', (0.957, 11)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek', (0.986, 14)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek', (0.987, 21)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_Hour', (0.983, 24)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek', (0.986, 28)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek', (0.987, 42)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek', (0.987, 56)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_DayOfNthWeekOfMonth', (0.952, 66)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek', (0.987, 84)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_HourOfWeek', (0.987, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_ConstantTrend CumSum_Signal_ConstantTrend_residue_Seasonal_DayOfWeek (0.986, 7)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_Lag1Trend [('CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfMonth', (0.139, 31))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_Lag1Trend CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfMonth (0.139, 31)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_LinearTrend [('CumSum_Signal_LinearTrend_residue_Seasonal_DayOfMonth', (0.598, 31))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_LinearTrend CumSum_Signal_LinearTrend_residue_Seasonal_DayOfMonth (0.598, 31)
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_Seasonal_DayOfMonth_NoAR 4 0.1389
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_Cycle_NoAR 8 0.3016
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_NoCycle_NoAR 0 0.5124
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfMonth_NoAR 36 0.1933
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 36 0.194
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfWeek_NoAR 36 0.1932
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 36 0.1933
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 36 0.1932
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_HourOfWeek_NoAR 36 0.1964
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_Hour_NoAR 36 0.1939
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 36 0.1931
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 36 0.1935
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 36 0.1931
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 36 0.194
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_WeekOfMonth_NoAR 36 0.1932
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_WeekOfYear_NoAR 36 0.1929
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Cycle_None_NoAR 40 0.1933
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_NoCycle_NoAR 32 0.1933
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfMonth_NoAR 20 0.138
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 20 0.2713
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfWeek_NoAR 20 0.2929
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_EightHourOfWeek_NoAR 20 0.293
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_FourHourOfWeek_NoAR 20 0.2941
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_HourOfWeek_NoAR 20 0.2953
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_Hour_NoAR 20 0.2933
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_SixHourOfWeek_NoAR 20 0.2934
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 20 0.2942
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 20 0.2929
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 20 0.2947
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_WeekOfMonth_NoAR 20 0.3148
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_WeekOfYear_NoAR 20 0.2972
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Cycle_None_NoAR 24 0.4729
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_NoCycle_NoAR 16 0.4729
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfMonth_NoAR 20 0.1641
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 20 0.2843
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfWeek_NoAR 20 0.3041
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_EightHourOfWeek_NoAR 20 0.3039
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_FourHourOfWeek_NoAR 20 0.305
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_HourOfWeek_NoAR 20 0.3068
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_Hour_NoAR 20 0.3042
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_SixHourOfWeek_NoAR 20 0.3043
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 20 0.3054
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 20 0.304
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 20 0.3056
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_WeekOfMonth_NoAR 20 0.3252
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_WeekOfYear_NoAR 20 0.3244
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Cycle_None_NoAR 24 0.4113
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_NoCycle_NoAR 16 0.4113
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfMonth_NoAR 36 12.917
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 36 1.8487
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfWeek_NoAR 36 7.3825
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_EightHourOfWeek_NoAR 36 19.4912
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_FourHourOfWeek_NoAR 36 5.6005
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_HourOfWeek_NoAR 36 2.4013
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_Hour_NoAR 36 5.8647
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_SixHourOfWeek_NoAR 36 7.7567
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_ThreeHourOfWeek_NoAR 36 15.9098
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_TwelveHourOfWeek_NoAR 36 13.9826
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_TwoHourOfWeek_NoAR 36 5.9384
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_WeekOfMonth_NoAR 36 8.3537
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_WeekOfYear_NoAR 36 14.4006
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Cycle_None_NoAR 40 0.2959
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_NoCycle_NoAR 32 0.2959
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfMonth_NoAR 68 3.2545
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 68 20.1335
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfWeek_NoAR 68 20.4784
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 68 8.1561
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 68 23.4634
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_HourOfWeek_NoAR 68 16.5958
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_Hour_NoAR 68 18.2922
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 68 11.2453
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 68 21.4057
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 68 0.4198
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 68 2.1421
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_WeekOfMonth_NoAR 68 16.741
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_WeekOfYear_NoAR 68 6.8288
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Cycle_None_NoAR 72 0.1933
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_NoCycle_NoAR 64 0.1933
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfMonth_NoAR 52 13.3224
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 2.12
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfWeek_NoAR 52 8.124
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 19.8558
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 5.9581
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_HourOfWeek_NoAR 52 2.819
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_Hour_NoAR 52 6.0447
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 8.3297
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 16.2141
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 14.1665
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 5.7679
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 8.1243
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_WeekOfYear_NoAR 52 14.8693
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Cycle_None_NoAR 56 0.5511
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_NoCycle_NoAR 48 0.5511
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfMonth_NoAR 52 14.2658
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 2.9958
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfWeek_NoAR 52 9.3456
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 20.9692
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 6.9866
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_HourOfWeek_NoAR 52 3.521
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_Hour_NoAR 52 7.2332
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 9.2246
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 17.1951
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 15.0085
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 4.9158
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 9.4942
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_WeekOfYear_NoAR 52 15.6768
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Cycle_None_NoAR 56 1.3397
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_NoCycle_NoAR 48 1.3397
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_Seasonal_DayOfWeek_NoAR 36 0.7504
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_Cycle_NoAR 40 0.3176
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_NoCycle_NoAR 32 65339326.3485
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfMonth_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfWeek_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_HourOfWeek_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_Hour_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_WeekOfMonth_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_WeekOfYear_NoAR 68 0.7548
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Cycle_None_NoAR 72 0.1933
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_NoCycle_NoAR 64 0.1933
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfMonth_NoAR 52 65339327.1037
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 65339327.1037
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfWeek_NoAR 52 65339327.1037
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 65339327.103
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 65339327.103
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_HourOfWeek_NoAR 52 65339327.103
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_Hour_NoAR 52 65339327.1037
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 65339327.103
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 65339327.1037
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 65339327.1037
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 65339327.1037
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 65339327.1037
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_WeekOfYear_NoAR 52 65339327.103
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Cycle_None_NoAR 56 65339327.103
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_NoCycle_NoAR 48 65339327.103
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfMonth_NoAR 52 65339327.5602
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 65339327.6087
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfWeek_NoAR 52 65339327.634
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 65339327.634
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 65339327.634
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_HourOfWeek_NoAR 52 65339326.5727
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_Hour_NoAR 52 65339326.5804
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 65339326.5727
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 65339327.634
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 65339326.5727
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 65339326.5727
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 65339327.614
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_WeekOfYear_NoAR 52 65339327.5802
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Cycle_NoAR 56 65339326.5798
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_NoCycle_NoAR 48 65339326.3485
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_Seasonal_DayOfWeek_NoAR 36 2.7363
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_Cycle_NoAR 40 1.0716
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_NoCycle_NoAR 32 1.0
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_Seasonal_DayOfMonth_NoAR 68 0.1903
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_Cycle_NoAR 72 0.1928
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_NoCycle_NoAR 64 0.1933
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_DayOfMonth_NoAR 52 0.9393
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Cycle_None_NoAR 56 0.5097
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_NoCycle_NoAR 48 0.5097
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfMonth_NoAR 52 0.8758
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 0.827
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfWeek_NoAR 52 0.5746
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 0.6799
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 0.745
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_HourOfWeek_NoAR 52 0.6119
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_Hour_NoAR 52 0.5462
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 0.7174
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 0.7333
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 0.6049
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 0.7129
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 0.8181
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_WeekOfYear_NoAR 52 0.755
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Cycle_None_NoAR 56 0.4429
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_NoCycle_NoAR 48 0.4429
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'Signal' 15.701192855834961
INFO:pyaf.std:TIME_DETAIL TimeVariable='Time_Hourly' TimeMin=2000-01-01T00:00:00.000000 TimeMax=2000-11-28T11:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=24
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal' Length=10000  Min=1.4298648953514634 Max=18.29213017759026  Mean=7.359055158518629 StdDev=4.355419651225986
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_Signal' Min=1.4298648953514634 Max=18.29213017759026  Mean=7.359055158518629 StdDev=4.355419651225986
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue_NoAR' [ConstantTrend + Seasonal_DayOfMonth + NoAR]
INFO:pyaf.std:TREND_DETAIL '_Signal_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth' [Seasonal_DayOfMonth]
INFO:pyaf.std:AUTOREG_DETAIL '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1483 MAPE_Forecast=0.1389 MAPE_Test=0.1626
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1385 SMAPE_Forecast=0.1319 SMAPE_Test=0.1565
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6925 MASE_Forecast=0.7059 MASE_Test=0.6639
INFO:pyaf.std:MODEL_L1 L1_Fit=0.8021219506403999 L1_Forecast=0.7900925023550233 L1_Test=0.7804353499571496
INFO:pyaf.std:MODEL_L2 L2_Fit=1.0076200721818447 L2_Forecast=0.9836795719661424 L2_Test=0.9211022891585691
INFO:pyaf.std:MODEL_COMPLEXITY 4
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 7.318164908178878
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:SEASONAL_MODEL_VALUES _Signal_ConstantTrend_residue_Seasonal_DayOfMonth -1.9296624307450876 {1: -2.3243309538763395, 2: -2.3335382878447017, 3: -2.3774457746242414, 4: -2.366780115617107, 5: -2.1748765975996536, 6: -2.20653913127525, 7: 7.7970294589418305, 8: 7.621690812759624, 9: 7.661564682460868, 10: 7.771467713593256, 11: 7.692260285376832, 12: 7.631813265057481, 13: 7.699981160129544, 14: -2.212205236982232, 15: -2.4438919013408746, 16: -2.321977234389551, 17: -2.3022556013143753, 18: -2.3508389630079494, 19: -2.2375579608614222, 20: -2.3445957294854023, 21: -2.3385087576941377, 22: -2.3320372471044983, 23: -2.4137481639039615, 24: -2.382343238375421, 25: -2.325614990246838, 26: -2.386967846776374, 27: -2.3507014173325422, 28: -2.1873240951984423, 29: -2.2249730028955192, 30: -2.3263330854138355, 31: -2.3229553225227484}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:START_FORECASTING 'Signal'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  'Signal' 0.6270005702972412
INFO:pyaf.std:START_PLOTTING
INFO:pyaf.std:END_PLOTTING_TIME_IN_SECONDS 4.85755729675293
  Split Transformation  ... TestMAPE TestMASE
1  None        _Signal  ...   0.1626   0.6639
0  None        _Signal  ...   0.1637   0.7111

[2 rows x 20 columns]
  Split Transformation  ... TestMAPE TestMASE
0  None        _Signal  ...   0.1637   0.7111
1  None        _Signal  ...   0.1626   0.6639
2  None        _Signal  ...   0.2657   1.2393
3  None  CumSum_Signal  ...   0.2440   0.9962
4  None  CumSum_Signal  ...   0.2435   0.9946

[5 rows x 20 columns]
Forecast Columns  Index(['Time_Hourly', 'Signal', 'row_number', 'Time_Hourly_Normalized',
       '_Signal', '_Signal_ConstantTrend', '_Signal_ConstantTrend_residue',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue_NoAR',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue_NoAR_residue',
       '_Signal_Trend', '_Signal_Trend_residue', '_Signal_Cycle',
       '_Signal_Cycle_residue', '_Signal_AR', '_Signal_AR_residue',
       '_Signal_TransformedForecast', 'Signal_Forecast',
       '_Signal_TransformedResidue', 'Signal_Residue',
       'Signal_Forecast_Lower_Bound', 'Signal_Forecast_Upper_Bound'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10024 entries, 0 to 10023
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Time_Hourly      10024 non-null  datetime64[ns]
 1   Signal           10000 non-null  float64       
 2   Signal_Forecast  10024 non-null  float64       
dtypes: datetime64[ns](1), float64(2)
memory usage: 235.1 KB
None
Forecasts
               Time_Hourly  Signal  Signal_Forecast
10000 2001-02-20 16:00:00     NaN         4.973569
10001 2001-02-20 17:00:00     NaN         4.973569
10002 2001-02-20 18:00:00     NaN         4.973569
10003 2001-02-20 19:00:00     NaN         4.973569
10004 2001-02-20 20:00:00     NaN         4.973569
10005 2001-02-20 21:00:00     NaN         4.973569
10006 2001-02-20 22:00:00     NaN         4.973569
10007 2001-02-20 23:00:00     NaN         4.973569
10008 2001-02-21 00:00:00     NaN         4.979656
10009 2001-02-21 01:00:00     NaN         4.979656
10010 2001-02-21 02:00:00     NaN         4.979656
10011 2001-02-21 03:00:00     NaN         4.979656
10012 2001-02-21 04:00:00     NaN         4.979656
10013 2001-02-21 05:00:00     NaN         4.979656
10014 2001-02-21 06:00:00     NaN         4.979656
10015 2001-02-21 07:00:00     NaN         4.979656
10016 2001-02-21 08:00:00     NaN         4.979656
10017 2001-02-21 09:00:00     NaN         4.979656
10018 2001-02-21 10:00:00     NaN         4.979656
10019 2001-02-21 11:00:00     NaN         4.979656
10020 2001-02-21 12:00:00     NaN         4.979656
10021 2001-02-21 13:00:00     NaN         4.979656
10022 2001-02-21 14:00:00     NaN         4.979656
10023 2001-02-21 15:00:00     NaN         4.979656


<ModelInfo>
{
    "Dataset": {
        "Signal": "Signal",
        "Time": {
            "Horizon": 24,
            "TimeMinMax": [
                "2000-01-01 00:00:00",
                "2001-02-20 15:00:00"
            ],
            "TimeVariable": "Time_Hourly"
        },
        "Training_Signal_Length": 10000
    },
    "Model": {
        "AR_Model": "NoAR",
        "Best_Decomposition": "_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue_NoAR",
        "Cycle": "Seasonal_DayOfMonth",
        "Signal_Transoformation": "NoTransf",
        "Trend": "ConstantTrend"
    },
    "Model_Performance": {
        "COMPLEXITY": "4",
        "MAE": "0.7900925023550233",
        "MAPE": "0.1389",
        "MASE": "0.7059",
        "RMSE": "0.9836795719661424"
    }
}
</ModelInfo>




<Forecast>
{"Time_Hourly":{"9976":"2001-02-19T16:00:00.000Z","9977":"2001-02-19T17:00:00.000Z","9978":"2001-02-19T18:00:00.000Z","9979":"2001-02-19T19:00:00.000Z","9980":"2001-02-19T20:00:00.000Z","9981":"2001-02-19T21:00:00.000Z","9982":"2001-02-19T22:00:00.000Z","9983":"2001-02-19T23:00:00.000Z","9984":"2001-02-20T00:00:00.000Z","9985":"2001-02-20T01:00:00.000Z","9986":"2001-02-20T02:00:00.000Z","9987":"2001-02-20T03:00:00.000Z","9988":"2001-02-20T04:00:00.000Z","9989":"2001-02-20T05:00:00.000Z","9990":"2001-02-20T06:00:00.000Z","9991":"2001-02-20T07:00:00.000Z","9992":"2001-02-20T08:00:00.000Z","9993":"2001-02-20T09:00:00.000Z","9994":"2001-02-20T10:00:00.000Z","9995":"2001-02-20T11:00:00.000Z","9996":"2001-02-20T12:00:00.000Z","9997":"2001-02-20T13:00:00.000Z","9998":"2001-02-20T14:00:00.000Z","9999":"2001-02-20T15:00:00.000Z","10000":"2001-02-20T16:00:00.000Z","10001":"2001-02-20T17:00:00.000Z","10002":"2001-02-20T18:00:00.000Z","10003":"2001-02-20T19:00:00.000Z","10004":"2001-02-20T20:00:00.000Z","10005":"2001-02-20T21:00:00.000Z","10006":"2001-02-20T22:00:00.000Z","10007":"2001-02-20T23:00:00.000Z","10008":"2001-02-21T00:00:00.000Z","10009":"2001-02-21T01:00:00.000Z","10010":"2001-02-21T02:00:00.000Z","10011":"2001-02-21T03:00:00.000Z","10012":"2001-02-21T04:00:00.000Z","10013":"2001-02-21T05:00:00.000Z","10014":"2001-02-21T06:00:00.000Z","10015":"2001-02-21T07:00:00.000Z","10016":"2001-02-21T08:00:00.000Z","10017":"2001-02-21T09:00:00.000Z","10018":"2001-02-21T10:00:00.000Z","10019":"2001-02-21T11:00:00.000Z","10020":"2001-02-21T12:00:00.000Z","10021":"2001-02-21T13:00:00.000Z","10022":"2001-02-21T14:00:00.000Z","10023":"2001-02-21T15:00:00.000Z"},"Signal":{"9976":3.6559333724,"9977":5.5721399278,"9978":4.6833514341,"9979":6.4816866019,"9980":6.9073456384,"9981":5.9089970925,"9982":5.0130518216,"9983":5.3411221567,"9984":5.9780260543,"9985":5.5711256334,"9986":4.3027097103,"9987":4.8839822761,"9988":6.0758641034,"9989":4.8582704793,"9990":3.0782322621,"9991":4.3120090779,"9992":5.4570803328,"9993":3.8916068977,"9994":5.7981992151,"9995":4.4738570339,"9996":5.7523043047,"9997":4.5869543453,"9998":5.8298470766,"9999":3.9892554905,"10000":null,"10001":null,"10002":null,"10003":null,"10004":null,"10005":null,"10006":null,"10007":null,"10008":null,"10009":null,"10010":null,"10011":null,"10012":null,"10013":null,"10014":null,"10015":null,"10016":null,"10017":null,"10018":null,"10019":null,"10020":null,"10021":null,"10022":null,"10023":null},"Signal_Forecast":{"9976":5.0806069473,"9977":5.0806069473,"9978":5.0806069473,"9979":5.0806069473,"9980":5.0806069473,"9981":5.0806069473,"9982":5.0806069473,"9983":5.0806069473,"9984":4.9735691787,"9985":4.9735691787,"9986":4.9735691787,"9987":4.9735691787,"9988":4.9735691787,"9989":4.9735691787,"9990":4.9735691787,"9991":4.9735691787,"9992":4.9735691787,"9993":4.9735691787,"9994":4.9735691787,"9995":4.9735691787,"9996":4.9735691787,"9997":4.9735691787,"9998":4.9735691787,"9999":4.9735691787,"10000":4.9735691787,"10001":4.9735691787,"10002":4.9735691787,"10003":4.9735691787,"10004":4.9735691787,"10005":4.9735691787,"10006":4.9735691787,"10007":4.9735691787,"10008":4.9796561505,"10009":4.9796561505,"10010":4.9796561505,"10011":4.9796561505,"10012":4.9796561505,"10013":4.9796561505,"10014":4.9796561505,"10015":4.9796561505,"10016":4.9796561505,"10017":4.9796561505,"10018":4.9796561505,"10019":4.9796561505,"10020":4.9796561505,"10021":4.9796561505,"10022":4.9796561505,"10023":4.9796561505}}
</Forecast>


