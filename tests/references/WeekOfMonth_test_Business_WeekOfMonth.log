INFO:pyaf.std:START_TRAINING 'Signal'
          Time_Hourly  Hour  Day  Week    Signal
0 2000-01-01 00:00:00     0    5     0  4.252533
1 2000-01-01 01:00:00     1    5     0  4.045545
2 2000-01-01 02:00:00     2    5     0  6.414304
3 2000-01-01 03:00:00     3    5     0  5.597974
4 2000-01-01 04:00:00     4    5     0  5.995570
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10000 entries, 0 to 9999
Data columns (total 5 columns):
 #   Column       Non-Null Count  Dtype         
---  ------       --------------  -----         
 0   Time_Hourly  10000 non-null  datetime64[ns]
 1   Hour         10000 non-null  int64         
 2   Day          10000 non-null  int64         
 3   Week         10000 non-null  int64         
 4   Signal       10000 non-null  float64       
dtypes: datetime64[ns](1), float64(1), int64(3)
memory usage: 390.8 KB
None
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA _Signal_ConstantTrend [('_Signal_ConstantTrend_residue_Seasonal_DayOfMonth', (0.741, 31))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST _Signal_ConstantTrend _Signal_ConstantTrend_residue_Seasonal_DayOfMonth (0.741, 31)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_ConstantTrend [('CumSum_Signal_ConstantTrend_residue_Seasonal_DayOfWeek', (0.988, 7)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfMonth', (0.958, 11)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek', (0.988, 14)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek', (0.988, 21)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_Hour', (0.985, 24)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek', (0.988, 28)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek', (0.988, 42)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek', (0.988, 56)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_DayOfNthWeekOfMonth', (0.953, 66)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek', (0.988, 84)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_HourOfWeek', (0.988, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_ConstantTrend CumSum_Signal_ConstantTrend_residue_Seasonal_DayOfWeek (0.988, 7)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA RelDiff_Signal_ConstantTrend [('RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek', (0.0, 7)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_WeekOfMonth', (0.0, 11)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek', (0.0, 14)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek', (0.0, 21)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_Hour', (0.0, 24)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek', (0.0, 28)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfMonth', (0.0, 31)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek', (0.0, 42)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_WeekOfYear', (0.0, 49)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek', (0.0, 56)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfNthWeekOfMonth', (0.0, 66)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek', (0.0, 84)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek', (0.0, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST RelDiff_Signal_ConstantTrend RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek (0.0, 7)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_Lag1Trend [('CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfMonth', (0.144, 31))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_Lag1Trend CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfMonth (0.144, 31)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_LinearTrend [('CumSum_Signal_LinearTrend_residue_Seasonal_DayOfMonth', (0.438, 31))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_LinearTrend CumSum_Signal_LinearTrend_residue_Seasonal_DayOfMonth (0.438, 31)
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_Seasonal_DayOfMonth_NoAR 4 0.1445
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_Cycle_NoAR 8 0.3089
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_NoCycle_NoAR 0 0.5244
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfMonth_NoAR 36 0.2048
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 36 0.2043
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfWeek_NoAR 36 0.2041
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 36 0.2041
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 36 0.2044
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_HourOfWeek_NoAR 36 0.2075
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_Hour_NoAR 36 0.2048
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 36 0.2041
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 36 0.2052
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 36 0.2042
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 36 0.2054
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_WeekOfMonth_NoAR 36 0.2043
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_WeekOfYear_NoAR 36 0.2038
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Cycle_None_NoAR 40 0.2041
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_NoCycle_NoAR 32 0.2041
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfMonth_NoAR 20 0.1423
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 20 0.2749
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfWeek_NoAR 20 0.3002
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_EightHourOfWeek_NoAR 20 0.3003
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_FourHourOfWeek_NoAR 20 0.3005
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_HourOfWeek_NoAR 20 0.3012
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_Hour_NoAR 20 0.3003
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_SixHourOfWeek_NoAR 20 0.3002
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 20 0.301
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 20 0.3003
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 20 0.3006
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_WeekOfMonth_NoAR 20 0.3189
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_WeekOfYear_NoAR 20 0.2936
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Cycle_None_NoAR 24 0.489
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_NoCycle_NoAR 16 0.489
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfMonth_NoAR 20 0.173
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 20 0.2901
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfWeek_NoAR 20 0.3126
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_EightHourOfWeek_NoAR 20 0.3125
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_FourHourOfWeek_NoAR 20 0.313
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_HourOfWeek_NoAR 20 0.3145
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_Hour_NoAR 20 0.3129
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_SixHourOfWeek_NoAR 20 0.3126
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 20 0.313
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 20 0.3123
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 20 0.3135
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_WeekOfMonth_NoAR 20 0.3305
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_WeekOfYear_NoAR 20 0.3191
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Cycle_None_NoAR 24 0.415
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_NoCycle_NoAR 16 0.415
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfMonth_NoAR 36 18.443
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 36 12.1063
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfWeek_NoAR 36 7.5135
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_EightHourOfWeek_NoAR 36 9.2708
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_FourHourOfWeek_NoAR 36 10.6932
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_HourOfWeek_NoAR 36 3.3954
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_Hour_NoAR 36 5.8638
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_SixHourOfWeek_NoAR 36 9.1332
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_ThreeHourOfWeek_NoAR 36 17.9961
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_TwelveHourOfWeek_NoAR 36 11.0699
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_TwoHourOfWeek_NoAR 36 15.6032
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_WeekOfMonth_NoAR 36 9.1349
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_WeekOfYear_NoAR 36 4.6075
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Cycle_None_NoAR 40 0.4428
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_NoCycle_NoAR 32 0.4428
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfMonth_NoAR 68 22.7945
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 68 26.8928
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfWeek_NoAR 68 24.3989
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 68 47.9075
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 68 39.9764
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_HourOfWeek_NoAR 68 45.5532
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_Hour_NoAR 68 31.0233
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 68 35.9061
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 68 35.6276
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 68 30.4673
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 68 39.4558
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_WeekOfMonth_NoAR 68 28.3308
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_WeekOfYear_NoAR 68 37.9774
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Cycle_None_NoAR 72 0.2041
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_NoCycle_NoAR 64 0.2041
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfMonth_NoAR 52 17.9155
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 11.8484
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfWeek_NoAR 52 6.9266
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 8.868
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 10.4808
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_HourOfWeek_NoAR 52 3.1281
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_Hour_NoAR 52 5.6771
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 8.7017
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 17.77
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 10.632
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 15.0452
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 8.8699
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_WeekOfYear_NoAR 52 4.2837
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Cycle_None_NoAR 56 0.3413
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_NoCycle_NoAR 48 0.3413
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfMonth_NoAR 52 17.6107
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 11.8309
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfWeek_NoAR 52 6.4375
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 8.3459
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 10.2214
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_HourOfWeek_NoAR 52 2.9216
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_Hour_NoAR 52 5.6226
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 8.3595
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 17.552
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 9.8654
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 14.7531
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 8.6797
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_WeekOfYear_NoAR 52 4.1053
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Cycle_None_NoAR 56 0.4825
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_NoCycle_NoAR 48 0.4825
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_Seasonal_DayOfWeek_NoAR 36 322.6407
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_Cycle_NoAR 40 17682092.8426
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_NoCycle_NoAR 32 52034672.5645
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfMonth_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfWeek_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_HourOfWeek_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_Hour_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_WeekOfMonth_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_WeekOfYear_NoAR 68 0.7847
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Cycle_None_NoAR 72 0.2041
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_NoCycle_NoAR 64 0.2041
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfMonth_NoAR 52 52034673.3504
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 52034673.3504
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfWeek_NoAR 52 52034673.3504
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 52034673.348
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 52034673.348
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_HourOfWeek_NoAR 52 52034673.348
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_Hour_NoAR 52 52034673.348
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 52034673.3504
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 52034673.3504
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 52034673.348
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 52034673.348
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 52034673.3504
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_WeekOfYear_NoAR 52 52034673.3504
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Cycle_None_NoAR 56 52034673.3504
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_NoCycle_NoAR 48 52034673.3504
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfMonth_NoAR 52 52034674.064
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 52034674.107
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfWeek_NoAR 52 52034674.1267
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 52034672.5717
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 52034674.1268
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_HourOfWeek_NoAR 52 52034672.5716
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_Hour_NoAR 52 52034672.5704
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 52034674.1268
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 52034674.1268
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 52034674.126
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 52034672.5716
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 52034674.107
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_WeekOfYear_NoAR 52 52034673.594
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Cycle_NoAR 56 52034672.5673
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_NoCycle_NoAR 48 52034672.5645
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_Seasonal_DayOfWeek_NoAR 36 2.5721
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_Cycle_NoAR 40 1.1523
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_NoCycle_NoAR 32 1.0
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_Seasonal_DayOfMonth_NoAR 68 0.2002
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_Cycle_NoAR 72 0.2041
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_NoCycle_NoAR 64 0.2041
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_DayOfMonth_NoAR 52 0.9435
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Cycle_None_NoAR 56 0.5218
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_NoCycle_NoAR 48 0.5218
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfMonth_NoAR 52 0.889
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 0.8499
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfWeek_NoAR 52 0.5877
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 0.7037
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 0.8089
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_HourOfWeek_NoAR 52 0.6677
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_Hour_NoAR 52 0.5532
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 0.7648
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 0.814
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 0.6644
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 0.7823
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 0.8748
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_WeekOfYear_NoAR 52 0.7596
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Cycle_None_NoAR 56 0.4607
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_NoCycle_NoAR 48 0.4607
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'Signal' 17.214401960372925
INFO:pyaf.std:TIME_DETAIL TimeVariable='Time_Hourly' TimeMin=2000-01-01T00:00:00.000000 TimeMax=2000-11-28T11:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=24
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal' Length=10000  Min=1.2446893260198526 Max=18.775567680200425  Mean=7.357379361953187 StdDev=4.380404028182647
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_Signal' Min=1.2446893260198526 Max=18.775567680200425  Mean=7.357379361953187 StdDev=4.380404028182647
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue_NoAR' [ConstantTrend + Seasonal_DayOfMonth + NoAR]
INFO:pyaf.std:TREND_DETAIL '_Signal_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth' [Seasonal_DayOfMonth]
INFO:pyaf.std:AUTOREG_DETAIL '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1462 MAPE_Forecast=0.1445 MAPE_Test=0.1721
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1363 SMAPE_Forecast=0.1356 SMAPE_Test=0.1431
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6896 MASE_Forecast=0.6934 MASE_Test=0.7109
INFO:pyaf.std:MODEL_L1 L1_Fit=0.7874891006161175 L1_Forecast=0.8005850000440354 L1_Test=0.6410919281684592
INFO:pyaf.std:MODEL_L2 L2_Fit=0.9910171799904566 L2_Forecast=1.0044762605284925 L2_Test=0.8992171450684164
INFO:pyaf.std:MODEL_COMPLEXITY 4
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND ConstantTrend 7.321415631209903
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:SEASONAL_MODEL_VALUES _Signal_ConstantTrend_residue_Seasonal_DayOfMonth -1.952112378140261 {1: -2.4956599701839477, 2: -2.2918518758498077, 3: -2.3598042276166797, 4: -2.3609389868007202, 5: -2.2947802172201452, 6: -2.442414363684187, 7: 7.830882682467393, 8: 7.836988726861552, 9: 7.669865007894567, 10: 7.738519613455766, 11: 7.669373672243087, 12: 7.620528185053783, 13: 7.684324523208692, 14: -2.304712174067969, 15: -2.4541308229157863, 16: -2.385662414625508, 17: -2.2626125475440277, 18: -2.2798112003551596, 19: -2.253604226336263, 20: -2.3428758862764374, 21: -2.362224440520097, 22: -2.323875198554355, 23: -2.245499002738134, 24: -2.2617703225436925, 25: -2.3879480937548565, 26: -2.4377913226780032, 27: -2.314077150305189, 28: -2.213765319134333, 29: -2.183056482399724, 30: -2.288769938237141, 31: -2.2072305125016585}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:START_FORECASTING 'Signal'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  'Signal' 0.6508686542510986
INFO:pyaf.std:START_PLOTTING
INFO:pyaf.std:END_PLOTTING_TIME_IN_SECONDS 5.026155948638916
  Split Transformation  ... TestMAPE TestMASE
1  None        _Signal  ...   0.1721   0.7109
0  None        _Signal  ...   0.1747   0.7827

[2 rows x 20 columns]
  Split Transformation  ... TestMAPE TestMASE
0  None        _Signal  ...   0.1747   0.7827
1  None        _Signal  ...   0.1721   0.7109
2  None        _Signal  ...   0.2795   1.5337
3  None  CumSum_Signal  ...   0.2150   0.9789
4  None        _Signal  ...   0.2140   0.9817

[5 rows x 20 columns]
Forecast Columns  Index(['Time_Hourly', 'Signal', 'row_number', 'Time_Hourly_Normalized',
       '_Signal', '_Signal_ConstantTrend', '_Signal_ConstantTrend_residue',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue_NoAR',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue_NoAR_residue',
       '_Signal_Trend', '_Signal_Trend_residue', '_Signal_Cycle',
       '_Signal_Cycle_residue', '_Signal_AR', '_Signal_AR_residue',
       '_Signal_TransformedForecast', 'Signal_Forecast',
       '_Signal_TransformedResidue', 'Signal_Residue',
       'Signal_Forecast_Lower_Bound', 'Signal_Forecast_Upper_Bound'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10024 entries, 0 to 10023
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Time_Hourly      10024 non-null  datetime64[ns]
 1   Signal           10000 non-null  float64       
 2   Signal_Forecast  10024 non-null  float64       
dtypes: datetime64[ns](1), float64(2)
memory usage: 235.1 KB
None
Forecasts
               Time_Hourly  Signal  Signal_Forecast
10000 2001-02-20 16:00:00     NaN         4.978540
10001 2001-02-20 17:00:00     NaN         4.978540
10002 2001-02-20 18:00:00     NaN         4.978540
10003 2001-02-20 19:00:00     NaN         4.978540
10004 2001-02-20 20:00:00     NaN         4.978540
10005 2001-02-20 21:00:00     NaN         4.978540
10006 2001-02-20 22:00:00     NaN         4.978540
10007 2001-02-20 23:00:00     NaN         4.978540
10008 2001-02-21 00:00:00     NaN         4.959191
10009 2001-02-21 01:00:00     NaN         4.959191
10010 2001-02-21 02:00:00     NaN         4.959191
10011 2001-02-21 03:00:00     NaN         4.959191
10012 2001-02-21 04:00:00     NaN         4.959191
10013 2001-02-21 05:00:00     NaN         4.959191
10014 2001-02-21 06:00:00     NaN         4.959191
10015 2001-02-21 07:00:00     NaN         4.959191
10016 2001-02-21 08:00:00     NaN         4.959191
10017 2001-02-21 09:00:00     NaN         4.959191
10018 2001-02-21 10:00:00     NaN         4.959191
10019 2001-02-21 11:00:00     NaN         4.959191
10020 2001-02-21 12:00:00     NaN         4.959191
10021 2001-02-21 13:00:00     NaN         4.959191
10022 2001-02-21 14:00:00     NaN         4.959191
10023 2001-02-21 15:00:00     NaN         4.959191


<ModelInfo>
{
    "Dataset": {
        "Signal": "Signal",
        "Time": {
            "Horizon": 24,
            "TimeMinMax": [
                "2000-01-01 00:00:00",
                "2001-02-20 15:00:00"
            ],
            "TimeVariable": "Time_Hourly"
        },
        "Training_Signal_Length": 10000
    },
    "Model": {
        "AR_Model": "NoAR",
        "Best_Decomposition": "_Signal_ConstantTrend_residue_Seasonal_DayOfMonth_residue_NoAR",
        "Cycle": "Seasonal_DayOfMonth",
        "Signal_Transoformation": "NoTransf",
        "Trend": "ConstantTrend"
    },
    "Model_Performance": {
        "COMPLEXITY": "4",
        "MAE": "0.8005850000440354",
        "MAPE": "0.1445",
        "MASE": "0.6934",
        "RMSE": "1.0044762605284925"
    }
}
</ModelInfo>




<Forecast>
{"Time_Hourly":{"9976":"2001-02-19T16:00:00.000Z","9977":"2001-02-19T17:00:00.000Z","9978":"2001-02-19T18:00:00.000Z","9979":"2001-02-19T19:00:00.000Z","9980":"2001-02-19T20:00:00.000Z","9981":"2001-02-19T21:00:00.000Z","9982":"2001-02-19T22:00:00.000Z","9983":"2001-02-19T23:00:00.000Z","9984":"2001-02-20T00:00:00.000Z","9985":"2001-02-20T01:00:00.000Z","9986":"2001-02-20T02:00:00.000Z","9987":"2001-02-20T03:00:00.000Z","9988":"2001-02-20T04:00:00.000Z","9989":"2001-02-20T05:00:00.000Z","9990":"2001-02-20T06:00:00.000Z","9991":"2001-02-20T07:00:00.000Z","9992":"2001-02-20T08:00:00.000Z","9993":"2001-02-20T09:00:00.000Z","9994":"2001-02-20T10:00:00.000Z","9995":"2001-02-20T11:00:00.000Z","9996":"2001-02-20T12:00:00.000Z","9997":"2001-02-20T13:00:00.000Z","9998":"2001-02-20T14:00:00.000Z","9999":"2001-02-20T15:00:00.000Z","10000":"2001-02-20T16:00:00.000Z","10001":"2001-02-20T17:00:00.000Z","10002":"2001-02-20T18:00:00.000Z","10003":"2001-02-20T19:00:00.000Z","10004":"2001-02-20T20:00:00.000Z","10005":"2001-02-20T21:00:00.000Z","10006":"2001-02-20T22:00:00.000Z","10007":"2001-02-20T23:00:00.000Z","10008":"2001-02-21T00:00:00.000Z","10009":"2001-02-21T01:00:00.000Z","10010":"2001-02-21T02:00:00.000Z","10011":"2001-02-21T03:00:00.000Z","10012":"2001-02-21T04:00:00.000Z","10013":"2001-02-21T05:00:00.000Z","10014":"2001-02-21T06:00:00.000Z","10015":"2001-02-21T07:00:00.000Z","10016":"2001-02-21T08:00:00.000Z","10017":"2001-02-21T09:00:00.000Z","10018":"2001-02-21T10:00:00.000Z","10019":"2001-02-21T11:00:00.000Z","10020":"2001-02-21T12:00:00.000Z","10021":"2001-02-21T13:00:00.000Z","10022":"2001-02-21T14:00:00.000Z","10023":"2001-02-21T15:00:00.000Z"},"Signal":{"9976":5.5681895251,"9977":5.5537721497,"9978":5.1415136383,"9979":5.3061460764,"9980":5.0014951565,"9981":3.5912882701,"9982":5.3270834618,"9983":5.4189084696,"9984":4.2621052046,"9985":5.7564428607,"9986":5.4588740275,"9987":4.8095449568,"9988":5.085722188,"9989":4.5757230704,"9990":5.0456899585,"9991":3.0894017188,"9992":4.4093252145,"9993":4.7599666385,"9994":5.9340332523,"9995":5.3813884019,"9996":4.5883270066,"9997":2.2978659056,"9998":3.505660677,"9999":5.6133122151,"10000":null,"10001":null,"10002":null,"10003":null,"10004":null,"10005":null,"10006":null,"10007":null,"10008":null,"10009":null,"10010":null,"10011":null,"10012":null,"10013":null,"10014":null,"10015":null,"10016":null,"10017":null,"10018":null,"10019":null,"10020":null,"10021":null,"10022":null,"10023":null},"Signal_Forecast":{"9976":5.0678114049,"9977":5.0678114049,"9978":5.0678114049,"9979":5.0678114049,"9980":5.0678114049,"9981":5.0678114049,"9982":5.0678114049,"9983":5.0678114049,"9984":4.9785397449,"9985":4.9785397449,"9986":4.9785397449,"9987":4.9785397449,"9988":4.9785397449,"9989":4.9785397449,"9990":4.9785397449,"9991":4.9785397449,"9992":4.9785397449,"9993":4.9785397449,"9994":4.9785397449,"9995":4.9785397449,"9996":4.9785397449,"9997":4.9785397449,"9998":4.9785397449,"9999":4.9785397449,"10000":4.9785397449,"10001":4.9785397449,"10002":4.9785397449,"10003":4.9785397449,"10004":4.9785397449,"10005":4.9785397449,"10006":4.9785397449,"10007":4.9785397449,"10008":4.9591911907,"10009":4.9591911907,"10010":4.9591911907,"10011":4.9591911907,"10012":4.9591911907,"10013":4.9591911907,"10014":4.9591911907,"10015":4.9591911907,"10016":4.9591911907,"10017":4.9591911907,"10018":4.9591911907,"10019":4.9591911907,"10020":4.9591911907,"10021":4.9591911907,"10022":4.9591911907,"10023":4.9591911907}}
</Forecast>


