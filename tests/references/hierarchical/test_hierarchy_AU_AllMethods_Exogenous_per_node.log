/home/circleci/project/tests/hierarchical/test_hierarchy_AU_AllMethods_Exogenous_per_node.py:14: FutureWarning: The series.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  lDate = lDate1.append(lDate2)
INFO:pyaf.timing:('OPERATION_START', 'HIERARCHICAL_TRAINING')
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['BrisbaneGC', 'Capitals', 'Melbourne', 'NSW', 'Other', 'QLD', 'Sydney', 'VIC', 'NSW_State', 'Other_State', 'QLD_State', 'VIC_State', 'Australia'], 'Transformations': [('BrisbaneGC', 'None', '_', 'T+S+R'), ('BrisbaneGC', 'None', 'Diff_', 'T+S+R'), ('BrisbaneGC', 'None', 'RelDiff_', 'T+S+R'), ('BrisbaneGC', 'None', 'CumSum_', 'T+S+R'), ('Capitals', 'None', '_', 'T+S+R'), ('Capitals', 'None', 'Diff_', 'T+S+R'), ('Capitals', 'None', 'RelDiff_', 'T+S+R'), ('Capitals', 'None', 'CumSum_', 'T+S+R'), ('Melbourne', 'None', '_', 'T+S+R'), ('Melbourne', 'None', 'Diff_', 'T+S+R'), ('Melbourne', 'None', 'RelDiff_', 'T+S+R'), ('Melbourne', 'None', 'CumSum_', 'T+S+R'), ('NSW', 'None', '_', 'T+S+R'), ('NSW', 'None', 'Diff_', 'T+S+R'), ('NSW', 'None', 'RelDiff_', 'T+S+R'), ('NSW', 'None', 'CumSum_', 'T+S+R'), ('Other', 'None', '_', 'T+S+R'), ('Other', 'None', 'Diff_', 'T+S+R'), ('Other', 'None', 'RelDiff_', 'T+S+R'), ('Other', 'None', 'CumSum_', 'T+S+R'), ('QLD', 'None', '_', 'T+S+R'), ('QLD', 'None', 'Diff_', 'T+S+R'), ('QLD', 'None', 'RelDiff_', 'T+S+R'), ('QLD', 'None', 'CumSum_', 'T+S+R'), ('Sydney', 'None', '_', 'T+S+R'), ('Sydney', 'None', 'Diff_', 'T+S+R'), ('Sydney', 'None', 'RelDiff_', 'T+S+R'), ('Sydney', 'None', 'CumSum_', 'T+S+R'), ('VIC', 'None', '_', 'T+S+R'), ('VIC', 'None', 'Diff_', 'T+S+R'), ('VIC', 'None', 'RelDiff_', 'T+S+R'), ('VIC', 'None', 'CumSum_', 'T+S+R'), ('NSW_State', 'None', '_', 'T+S+R'), ('NSW_State', 'None', 'Diff_', 'T+S+R'), ('NSW_State', 'None', 'RelDiff_', 'T+S+R'), ('NSW_State', 'None', 'CumSum_', 'T+S+R'), ('Other_State', 'None', '_', 'T+S+R'), ('Other_State', 'None', 'Diff_', 'T+S+R'), ('Other_State', 'None', 'RelDiff_', 'T+S+R'), ('Other_State', 'None', 'CumSum_', 'T+S+R'), ('QLD_State', 'None', '_', 'T+S+R'), ('QLD_State', 'None', 'Diff_', 'T+S+R'), ('QLD_State', 'None', 'RelDiff_', 'T+S+R'), ('QLD_State', 'None', 'CumSum_', 'T+S+R'), ('VIC_State', 'None', '_', 'T+S+R'), ('VIC_State', 'None', 'Diff_', 'T+S+R'), ('VIC_State', 'None', 'RelDiff_', 'T+S+R'), ('VIC_State', 'None', 'CumSum_', 'T+S+R'), ('Australia', 'None', '_', 'T+S+R'), ('Australia', 'None', 'Diff_', 'T+S+R'), ('Australia', 'None', 'RelDiff_', 'T+S+R'), ('Australia', 'None', 'CumSum_', 'T+S+R')], 'Cores': 16}))
         City        State    Country
0      Sydney    NSW_State  Australia
1         NSW    NSW_State  Australia
2   Melbourne    VIC_State  Australia
3         VIC    VIC_State  Australia
4  BrisbaneGC    QLD_State  Australia
5         QLD    QLD_State  Australia
6    Capitals  Other_State  Australia
7       Other  Other_State  Australia
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BrisbaneGC', 'Transformation': '_BrisbaneGC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BrisbaneGC', 'Transformation': 'Diff_BrisbaneGC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BrisbaneGC', 'Transformation': 'RelDiff_BrisbaneGC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Capitals', 'Transformation': '_Capitals'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BrisbaneGC', 'Transformation': 'CumSum_BrisbaneGC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Capitals', 'Transformation': 'Diff_Capitals'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Capitals', 'Transformation': 'RelDiff_Capitals'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Capitals', 'Transformation': 'CumSum_Capitals'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Melbourne', 'Transformation': '_Melbourne'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Melbourne', 'Transformation': 'Diff_Melbourne'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Melbourne', 'Transformation': 'RelDiff_Melbourne'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Melbourne', 'Transformation': 'CumSum_Melbourne'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NSW', 'Transformation': 'Diff_NSW'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NSW', 'Transformation': 'RelDiff_NSW'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NSW', 'Transformation': 'CumSum_NSW'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NSW', 'Transformation': '_NSW'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 25.202, ('TRAINING', {'Signal': 'Capitals', 'Transformation': 'CumSum_Capitals'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Other', 'Transformation': '_Other'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 26.202, ('TRAINING', {'Signal': 'Melbourne', 'Transformation': '_Melbourne'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 27.193, ('TRAINING', {'Signal': 'BrisbaneGC', 'Transformation': '_BrisbaneGC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 28.403, ('TRAINING', {'Signal': 'NSW', 'Transformation': 'CumSum_NSW'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 29.105, ('TRAINING', {'Signal': 'Melbourne', 'Transformation': 'CumSum_Melbourne'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 29.092, ('TRAINING', {'Signal': 'NSW', 'Transformation': '_NSW'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 29.792, ('TRAINING', {'Signal': 'BrisbaneGC', 'Transformation': 'CumSum_BrisbaneGC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 29.601, ('TRAINING', {'Signal': 'Melbourne', 'Transformation': 'Diff_Melbourne'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 30.31, ('TRAINING', {'Signal': 'Capitals', 'Transformation': '_Capitals'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.899, ('TRAINING', {'Signal': 'Other', 'Transformation': '_Other'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 30.313, ('TRAINING', {'Signal': 'Melbourne', 'Transformation': 'RelDiff_Melbourne'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 30.996, ('TRAINING', {'Signal': 'BrisbaneGC', 'Transformation': 'RelDiff_BrisbaneGC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 31.497, ('TRAINING', {'Signal': 'BrisbaneGC', 'Transformation': 'Diff_BrisbaneGC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 31.197, ('TRAINING', {'Signal': 'NSW', 'Transformation': 'Diff_NSW'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 31.811, ('TRAINING', {'Signal': 'Capitals', 'Transformation': 'RelDiff_Capitals'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 32.618, ('TRAINING', {'Signal': 'NSW', 'Transformation': 'RelDiff_NSW'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 33.416, ('TRAINING', {'Signal': 'Capitals', 'Transformation': 'Diff_Capitals'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Other', 'Transformation': 'Diff_Other'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Other', 'Transformation': 'RelDiff_Other'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Other', 'Transformation': 'CumSum_Other'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'QLD', 'Transformation': '_QLD'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'QLD', 'Transformation': 'Diff_QLD'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'QLD', 'Transformation': 'RelDiff_QLD'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'QLD', 'Transformation': 'CumSum_QLD'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Sydney', 'Transformation': '_Sydney'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Sydney', 'Transformation': 'Diff_Sydney'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Sydney', 'Transformation': 'RelDiff_Sydney'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Sydney', 'Transformation': 'CumSum_Sydney'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'VIC', 'Transformation': '_VIC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'VIC', 'Transformation': 'Diff_VIC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'VIC', 'Transformation': 'RelDiff_VIC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'VIC', 'Transformation': 'CumSum_VIC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NSW_State', 'Transformation': '_NSW_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 7.601, ('TRAINING', {'Signal': 'Other', 'Transformation': 'CumSum_Other'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 8.994, ('TRAINING', {'Signal': 'Other', 'Transformation': 'Diff_Other'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 7.605, ('TRAINING', {'Signal': 'QLD', 'Transformation': '_QLD'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 8.709, ('TRAINING', {'Signal': 'Other', 'Transformation': 'RelDiff_Other'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NSW_State', 'Transformation': 'Diff_NSW_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NSW_State', 'Transformation': 'RelDiff_NSW_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.093, ('TRAINING', {'Signal': 'QLD', 'Transformation': 'RelDiff_QLD'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.433, ('TRAINING', {'Signal': 'QLD', 'Transformation': 'Diff_QLD'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 8.414, ('TRAINING', {'Signal': 'QLD', 'Transformation': 'CumSum_QLD'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NSW_State', 'Transformation': 'CumSum_NSW_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Other_State', 'Transformation': '_Other_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Other_State', 'Transformation': 'Diff_Other_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 7.9, ('TRAINING', {'Signal': 'Sydney', 'Transformation': 'CumSum_Sydney'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Other_State', 'Transformation': 'RelDiff_Other_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.323, ('TRAINING', {'Signal': 'Sydney', 'Transformation': 'Diff_Sydney'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.393, ('TRAINING', {'Signal': 'Sydney', 'Transformation': '_Sydney'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 8.607, ('TRAINING', {'Signal': 'VIC', 'Transformation': '_VIC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 8.301, ('TRAINING', {'Signal': 'VIC', 'Transformation': 'Diff_VIC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Other_State', 'Transformation': 'CumSum_Other_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'QLD_State', 'Transformation': '_QLD_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'QLD_State', 'Transformation': 'Diff_QLD_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.721, ('TRAINING', {'Signal': 'Sydney', 'Transformation': 'RelDiff_Sydney'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'QLD_State', 'Transformation': 'RelDiff_QLD_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'QLD_State', 'Transformation': 'CumSum_QLD_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.898, ('TRAINING', {'Signal': 'VIC', 'Transformation': 'CumSum_VIC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.991, ('TRAINING', {'Signal': 'VIC', 'Transformation': 'RelDiff_VIC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.495, ('TRAINING', {'Signal': 'NSW_State', 'Transformation': '_NSW_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'VIC_State', 'Transformation': '_VIC_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 6.498, ('TRAINING', {'Signal': 'Other_State', 'Transformation': 'Diff_Other_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'VIC_State', 'Transformation': 'Diff_VIC_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 7.211, ('TRAINING', {'Signal': 'Other_State', 'Transformation': '_Other_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'VIC_State', 'Transformation': 'RelDiff_VIC_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'VIC_State', 'Transformation': 'CumSum_VIC_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Australia', 'Transformation': '_Australia'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 8.302, ('TRAINING', {'Signal': 'Other_State', 'Transformation': 'CumSum_Other_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Australia', 'Transformation': 'Diff_Australia'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.601, ('TRAINING', {'Signal': 'Other_State', 'Transformation': 'RelDiff_Other_State'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Australia', 'Transformation': 'RelDiff_Australia'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Australia', 'Transformation': 'CumSum_Australia'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 14.908, ('TRAINING', {'Signal': 'NSW_State', 'Transformation': 'Diff_NSW_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 14.796, ('TRAINING', {'Signal': 'NSW_State', 'Transformation': 'CumSum_NSW_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 16.204, ('TRAINING', {'Signal': 'NSW_State', 'Transformation': 'RelDiff_NSW_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 6.999, ('TRAINING', {'Signal': 'Australia', 'Transformation': '_Australia'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 6.804, ('TRAINING', {'Signal': 'Australia', 'Transformation': 'Diff_Australia'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 15.395, ('TRAINING', {'Signal': 'QLD_State', 'Transformation': '_QLD_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 7.7, ('TRAINING', {'Signal': 'Australia', 'Transformation': 'CumSum_Australia'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 14.499, ('TRAINING', {'Signal': 'QLD_State', 'Transformation': 'CumSum_QLD_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 8.705, ('TRAINING', {'Signal': 'Australia', 'Transformation': 'RelDiff_Australia'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 16.1, ('TRAINING', {'Signal': 'QLD_State', 'Transformation': 'Diff_QLD_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 13.403, ('TRAINING', {'Signal': 'VIC_State', 'Transformation': '_VIC_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 13.795, ('TRAINING', {'Signal': 'VIC_State', 'Transformation': 'Diff_VIC_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.606, ('TRAINING', {'Signal': 'VIC_State', 'Transformation': 'CumSum_VIC_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 17.799, ('TRAINING', {'Signal': 'QLD_State', 'Transformation': 'RelDiff_QLD_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 14.692, ('TRAINING', {'Signal': 'VIC_State', 'Transformation': 'RelDiff_VIC_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 75.8, ('SIGNAL_TRAINING', {'Signals': ['BrisbaneGC', 'Capitals', 'Melbourne', 'NSW', 'Other', 'QLD', 'Sydney', 'VIC', 'NSW_State', 'Other_State', 'QLD_State', 'VIC_State', 'Australia'], 'Transformations': [('BrisbaneGC', 'None', '_', 'T+S+R'), ('BrisbaneGC', 'None', 'Diff_', 'T+S+R'), ('BrisbaneGC', 'None', 'RelDiff_', 'T+S+R'), ('BrisbaneGC', 'None', 'CumSum_', 'T+S+R'), ('Capitals', 'None', '_', 'T+S+R'), ('Capitals', 'None', 'Diff_', 'T+S+R'), ('Capitals', 'None', 'RelDiff_', 'T+S+R'), ('Capitals', 'None', 'CumSum_', 'T+S+R'), ('Melbourne', 'None', '_', 'T+S+R'), ('Melbourne', 'None', 'Diff_', 'T+S+R'), ('Melbourne', 'None', 'RelDiff_', 'T+S+R'), ('Melbourne', 'None', 'CumSum_', 'T+S+R'), ('NSW', 'None', '_', 'T+S+R'), ('NSW', 'None', 'Diff_', 'T+S+R'), ('NSW', 'None', 'RelDiff_', 'T+S+R'), ('NSW', 'None', 'CumSum_', 'T+S+R'), ('Other', 'None', '_', 'T+S+R'), ('Other', 'None', 'Diff_', 'T+S+R'), ('Other', 'None', 'RelDiff_', 'T+S+R'), ('Other', 'None', 'CumSum_', 'T+S+R'), ('QLD', 'None', '_', 'T+S+R'), ('QLD', 'None', 'Diff_', 'T+S+R'), ('QLD', 'None', 'RelDiff_', 'T+S+R'), ('QLD', 'None', 'CumSum_', 'T+S+R'), ('Sydney', 'None', '_', 'T+S+R'), ('Sydney', 'None', 'Diff_', 'T+S+R'), ('Sydney', 'None', 'RelDiff_', 'T+S+R'), ('Sydney', 'None', 'CumSum_', 'T+S+R'), ('VIC', 'None', '_', 'T+S+R'), ('VIC', 'None', 'Diff_', 'T+S+R'), ('VIC', 'None', 'RelDiff_', 'T+S+R'), ('VIC', 'None', 'CumSum_', 'T+S+R'), ('NSW_State', 'None', '_', 'T+S+R'), ('NSW_State', 'None', 'Diff_', 'T+S+R'), ('NSW_State', 'None', 'RelDiff_', 'T+S+R'), ('NSW_State', 'None', 'CumSum_', 'T+S+R'), ('Other_State', 'None', '_', 'T+S+R'), ('Other_State', 'None', 'Diff_', 'T+S+R'), ('Other_State', 'None', 'RelDiff_', 'T+S+R'), ('Other_State', 'None', 'CumSum_', 'T+S+R'), ('QLD_State', 'None', '_', 'T+S+R'), ('QLD_State', 'None', 'Diff_', 'T+S+R'), ('QLD_State', 'None', 'RelDiff_', 'T+S+R'), ('QLD_State', 'None', 'CumSum_', 'T+S+R'), ('VIC_State', 'None', '_', 'T+S+R'), ('VIC_State', 'None', 'Diff_', 'T+S+R'), ('VIC_State', 'None', 'RelDiff_', 'T+S+R'), ('VIC_State', 'None', 'CumSum_', 'T+S+R'), ('Australia', 'None', '_', 'T+S+R'), ('Australia', 'None', 'Diff_', 'T+S+R'), ('Australia', 'None', 'RelDiff_', 'T+S+R'), ('Australia', 'None', 'CumSum_', 'T+S+R')], 'Cores': 16}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['BrisbaneGC', 'Capitals', 'Melbourne', 'NSW', 'Other', 'QLD', 'Sydney', 'VIC', 'NSW_State', 'Other_State', 'QLD_State', 'VIC_State', 'Australia'], 'Transformations': [('BrisbaneGC', [('BrisbaneGC', 'None', 'CumSum_', 'T+S+R'), ('BrisbaneGC', 'None', 'Diff_', 'T+S+R'), ('BrisbaneGC', 'None', 'RelDiff_', 'T+S+R'), ('BrisbaneGC', 'None', '_', 'T+S+R')]), ('Capitals', [('Capitals', 'None', 'CumSum_', 'T+S+R'), ('Capitals', 'None', 'Diff_', 'T+S+R'), ('Capitals', 'None', 'RelDiff_', 'T+S+R'), ('Capitals', 'None', '_', 'T+S+R')]), ('Melbourne', [('Melbourne', 'None', 'CumSum_', 'T+S+R'), ('Melbourne', 'None', 'Diff_', 'T+S+R'), ('Melbourne', 'None', 'RelDiff_', 'T+S+R'), ('Melbourne', 'None', '_', 'T+S+R')]), ('NSW', [('NSW', 'None', 'CumSum_', 'T+S+R'), ('NSW', 'None', 'Diff_', 'T+S+R'), ('NSW', 'None', 'RelDiff_', 'T+S+R'), ('NSW', 'None', '_', 'T+S+R')]), ('Other', [('Other', 'None', 'CumSum_', 'T+S+R'), ('Other', 'None', 'Diff_', 'T+S+R'), ('Other', 'None', 'RelDiff_', 'T+S+R'), ('Other', 'None', '_', 'T+S+R')]), ('QLD', [('QLD', 'None', 'CumSum_', 'T+S+R'), ('QLD', 'None', 'Diff_', 'T+S+R'), ('QLD', 'None', 'RelDiff_', 'T+S+R'), ('QLD', 'None', '_', 'T+S+R')]), ('Sydney', [('Sydney', 'None', 'CumSum_', 'T+S+R'), ('Sydney', 'None', 'Diff_', 'T+S+R'), ('Sydney', 'None', 'RelDiff_', 'T+S+R'), ('Sydney', 'None', '_', 'T+S+R')]), ('VIC', [('VIC', 'None', 'CumSum_', 'T+S+R'), ('VIC', 'None', 'Diff_', 'T+S+R'), ('VIC', 'None', 'RelDiff_', 'T+S+R'), ('VIC', 'None', '_', 'T+S+R')]), ('NSW_State', [('NSW_State', 'None', 'CumSum_', 'T+S+R'), ('NSW_State', 'None', 'Diff_', 'T+S+R'), ('NSW_State', 'None', 'RelDiff_', 'T+S+R'), ('NSW_State', 'None', '_', 'T+S+R')]), ('Other_State', [('Other_State', 'None', 'CumSum_', 'T+S+R'), ('Other_State', 'None', 'Diff_', 'T+S+R'), ('Other_State', 'None', 'RelDiff_', 'T+S+R'), ('Other_State', 'None', '_', 'T+S+R')]), ('QLD_State', [('QLD_State', 'None', 'CumSum_', 'T+S+R'), ('QLD_State', 'None', 'Diff_', 'T+S+R'), ('QLD_State', 'None', 'RelDiff_', 'T+S+R'), ('QLD_State', 'None', '_', 'T+S+R')]), ('VIC_State', [('VIC_State', 'None', 'CumSum_', 'T+S+R'), ('VIC_State', 'None', 'Diff_', 'T+S+R'), ('VIC_State', 'None', 'RelDiff_', 'T+S+R'), ('VIC_State', 'None', '_', 'T+S+R')]), ('Australia', [('Australia', 'None', 'CumSum_', 'T+S+R'), ('Australia', 'None', 'Diff_', 'T+S+R'), ('Australia', 'None', 'RelDiff_', 'T+S+R'), ('Australia', 'None', '_', 'T+S+R')])], 'Cores': 13}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'BrisbaneGC', 'Transformations': [('BrisbaneGC', 'None', 'CumSum_', 'T+S+R'), ('BrisbaneGC', 'None', 'Diff_', 'T+S+R'), ('BrisbaneGC', 'None', 'RelDiff_', 'T+S+R'), ('BrisbaneGC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.01, ('MODEL_SELECTION', {'Signal': 'BrisbaneGC', 'Transformations': [('BrisbaneGC', 'None', 'CumSum_', 'T+S+R'), ('BrisbaneGC', 'None', 'Diff_', 'T+S+R'), ('BrisbaneGC', 'None', 'RelDiff_', 'T+S+R'), ('BrisbaneGC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BrisbaneGC', 'Model': '_BrisbaneGC_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.106, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BrisbaneGC', 'Model': '_BrisbaneGC_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BrisbaneGC'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Capitals', 'Transformations': [('Capitals', 'None', 'CumSum_', 'T+S+R'), ('Capitals', 'None', 'Diff_', 'T+S+R'), ('Capitals', 'None', 'RelDiff_', 'T+S+R'), ('Capitals', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.08, ('MODEL_SELECTION', {'Signal': 'Capitals', 'Transformations': [('Capitals', 'None', 'CumSum_', 'T+S+R'), ('Capitals', 'None', 'Diff_', 'T+S+R'), ('Capitals', 'None', 'RelDiff_', 'T+S+R'), ('Capitals', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Capitals', 'Model': '_Capitals_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Melbourne', 'Transformations': [('Melbourne', 'None', 'CumSum_', 'T+S+R'), ('Melbourne', 'None', 'Diff_', 'T+S+R'), ('Melbourne', 'None', 'RelDiff_', 'T+S+R'), ('Melbourne', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.01, ('MODEL_SELECTION', {'Signal': 'Melbourne', 'Transformations': [('Melbourne', 'None', 'CumSum_', 'T+S+R'), ('Melbourne', 'None', 'Diff_', 'T+S+R'), ('Melbourne', 'None', 'RelDiff_', 'T+S+R'), ('Melbourne', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Melbourne', 'Model': '_Melbourne_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.194, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Capitals', 'Model': '_Capitals_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Capitals'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.179, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Melbourne', 'Model': '_Melbourne_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Melbourne'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NSW', 'Transformations': [('NSW', 'None', 'CumSum_', 'T+S+R'), ('NSW', 'None', 'Diff_', 'T+S+R'), ('NSW', 'None', 'RelDiff_', 'T+S+R'), ('NSW', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.01, ('MODEL_SELECTION', {'Signal': 'NSW', 'Transformations': [('NSW', 'None', 'CumSum_', 'T+S+R'), ('NSW', 'None', 'Diff_', 'T+S+R'), ('NSW', 'None', 'RelDiff_', 'T+S+R'), ('NSW', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NSW', 'Model': '_NSW_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Other', 'Transformations': [('Other', 'None', 'CumSum_', 'T+S+R'), ('Other', 'None', 'Diff_', 'T+S+R'), ('Other', 'None', 'RelDiff_', 'T+S+R'), ('Other', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.193, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NSW', 'Model': '_NSW_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NSW'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.013, ('MODEL_SELECTION', {'Signal': 'Other', 'Transformations': [('Other', 'None', 'CumSum_', 'T+S+R'), ('Other', 'None', 'Diff_', 'T+S+R'), ('Other', 'None', 'RelDiff_', 'T+S+R'), ('Other', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Other', 'Model': '_Other_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Other', 'Model': '_Other_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Other'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'QLD', 'Transformations': [('QLD', 'None', 'CumSum_', 'T+S+R'), ('QLD', 'None', 'Diff_', 'T+S+R'), ('QLD', 'None', 'RelDiff_', 'T+S+R'), ('QLD', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.012, ('MODEL_SELECTION', {'Signal': 'QLD', 'Transformations': [('QLD', 'None', 'CumSum_', 'T+S+R'), ('QLD', 'None', 'Diff_', 'T+S+R'), ('QLD', 'None', 'RelDiff_', 'T+S+R'), ('QLD', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'QLD', 'Model': '_QLD_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'QLD', 'Model': '_QLD_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'QLD'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.587, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BrisbaneGC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.501, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Melbourne'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Sydney', 'Transformations': [('Sydney', 'None', 'CumSum_', 'T+S+R'), ('Sydney', 'None', 'Diff_', 'T+S+R'), ('Sydney', 'None', 'RelDiff_', 'T+S+R'), ('Sydney', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.089, ('MODEL_SELECTION', {'Signal': 'Sydney', 'Transformations': [('Sydney', 'None', 'CumSum_', 'T+S+R'), ('Sydney', 'None', 'Diff_', 'T+S+R'), ('Sydney', 'None', 'RelDiff_', 'T+S+R'), ('Sydney', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Sydney', 'Model': '_Sydney_LinearTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.797, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Capitals'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'VIC', 'Transformations': [('VIC', 'None', 'CumSum_', 'T+S+R'), ('VIC', 'None', 'Diff_', 'T+S+R'), ('VIC', 'None', 'RelDiff_', 'T+S+R'), ('VIC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.097, ('MODEL_SELECTION', {'Signal': 'VIC', 'Transformations': [('VIC', 'None', 'CumSum_', 'T+S+R'), ('VIC', 'None', 'Diff_', 'T+S+R'), ('VIC', 'None', 'RelDiff_', 'T+S+R'), ('VIC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'VIC', 'Model': '_VIC_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.3, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Sydney', 'Model': '_Sydney_LinearTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Sydney'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.801, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Other'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.002, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NSW'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.498, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'VIC', 'Model': '_VIC_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'VIC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.305, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'QLD'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NSW_State', 'Transformations': [('NSW_State', 'None', 'CumSum_', 'T+S+R'), ('NSW_State', 'None', 'Diff_', 'T+S+R'), ('NSW_State', 'None', 'RelDiff_', 'T+S+R'), ('NSW_State', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.097, ('MODEL_SELECTION', {'Signal': 'NSW_State', 'Transformations': [('NSW_State', 'None', 'CumSum_', 'T+S+R'), ('NSW_State', 'None', 'Diff_', 'T+S+R'), ('NSW_State', 'None', 'RelDiff_', 'T+S+R'), ('NSW_State', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NSW_State', 'Model': '_NSW_State_LinearTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.292, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NSW_State', 'Model': '_NSW_State_LinearTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NSW_State'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Other_State', 'Transformations': [('Other_State', 'None', 'CumSum_', 'T+S+R'), ('Other_State', 'None', 'Diff_', 'T+S+R'), ('Other_State', 'None', 'RelDiff_', 'T+S+R'), ('Other_State', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.01, ('MODEL_SELECTION', {'Signal': 'Other_State', 'Transformations': [('Other_State', 'None', 'CumSum_', 'T+S+R'), ('Other_State', 'None', 'Diff_', 'T+S+R'), ('Other_State', 'None', 'RelDiff_', 'T+S+R'), ('Other_State', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Other_State', 'Model': '_Other_State_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.193, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Other_State', 'Model': '_Other_State_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Other_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.203, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Sydney'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.2, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'VIC'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'QLD_State', 'Transformations': [('QLD_State', 'None', 'CumSum_', 'T+S+R'), ('QLD_State', 'None', 'Diff_', 'T+S+R'), ('QLD_State', 'None', 'RelDiff_', 'T+S+R'), ('QLD_State', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.098, ('MODEL_SELECTION', {'Signal': 'QLD_State', 'Transformations': [('QLD_State', 'None', 'CumSum_', 'T+S+R'), ('QLD_State', 'None', 'Diff_', 'T+S+R'), ('QLD_State', 'None', 'RelDiff_', 'T+S+R'), ('QLD_State', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'QLD_State', 'Model': '_QLD_State_ConstantTrend_residue_Seasonal_MonthOfYear_residue_ARX(11)'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.515, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NSW_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.397, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'QLD_State', 'Model': '_QLD_State_ConstantTrend_residue_Seasonal_MonthOfYear_residue_ARX(11)'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'QLD_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.698, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Other_State'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'VIC_State', 'Transformations': [('VIC_State', 'None', 'CumSum_', 'T+S+R'), ('VIC_State', 'None', 'Diff_', 'T+S+R'), ('VIC_State', 'None', 'RelDiff_', 'T+S+R'), ('VIC_State', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.102, ('MODEL_SELECTION', {'Signal': 'VIC_State', 'Transformations': [('VIC_State', 'None', 'CumSum_', 'T+S+R'), ('VIC_State', 'None', 'Diff_', 'T+S+R'), ('VIC_State', 'None', 'RelDiff_', 'T+S+R'), ('VIC_State', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'VIC_State', 'Model': '_VIC_State_LinearTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.301, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'VIC_State', 'Model': '_VIC_State_LinearTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'VIC_State'}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Australia', 'Transformations': [('Australia', 'None', 'CumSum_', 'T+S+R'), ('Australia', 'None', 'Diff_', 'T+S+R'), ('Australia', 'None', 'RelDiff_', 'T+S+R'), ('Australia', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.099, ('MODEL_SELECTION', {'Signal': 'Australia', 'Transformations': [('Australia', 'None', 'CumSum_', 'T+S+R'), ('Australia', 'None', 'Diff_', 'T+S+R'), ('Australia', 'None', 'RelDiff_', 'T+S+R'), ('Australia', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Australia', 'Model': '_Australia_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.304, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Australia', 'Model': '_Australia_ConstantTrend_residue_Seasonal_MonthOfYear_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Australia'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.103, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'VIC_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.794, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'QLD_State'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.712, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Australia'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 22.712, ('FINALIZE_TRAINING', {'Signals': ['BrisbaneGC', 'Capitals', 'Melbourne', 'NSW', 'Other', 'QLD', 'Sydney', 'VIC', 'NSW_State', 'Other_State', 'QLD_State', 'VIC_State', 'Australia'], 'Transformations': [('BrisbaneGC', [('BrisbaneGC', 'None', 'CumSum_', 'T+S+R'), ('BrisbaneGC', 'None', 'Diff_', 'T+S+R'), ('BrisbaneGC', 'None', 'RelDiff_', 'T+S+R'), ('BrisbaneGC', 'None', '_', 'T+S+R')]), ('Capitals', [('Capitals', 'None', 'CumSum_', 'T+S+R'), ('Capitals', 'None', 'Diff_', 'T+S+R'), ('Capitals', 'None', 'RelDiff_', 'T+S+R'), ('Capitals', 'None', '_', 'T+S+R')]), ('Melbourne', [('Melbourne', 'None', 'CumSum_', 'T+S+R'), ('Melbourne', 'None', 'Diff_', 'T+S+R'), ('Melbourne', 'None', 'RelDiff_', 'T+S+R'), ('Melbourne', 'None', '_', 'T+S+R')]), ('NSW', [('NSW', 'None', 'CumSum_', 'T+S+R'), ('NSW', 'None', 'Diff_', 'T+S+R'), ('NSW', 'None', 'RelDiff_', 'T+S+R'), ('NSW', 'None', '_', 'T+S+R')]), ('Other', [('Other', 'None', 'CumSum_', 'T+S+R'), ('Other', 'None', 'Diff_', 'T+S+R'), ('Other', 'None', 'RelDiff_', 'T+S+R'), ('Other', 'None', '_', 'T+S+R')]), ('QLD', [('QLD', 'None', 'CumSum_', 'T+S+R'), ('QLD', 'None', 'Diff_', 'T+S+R'), ('QLD', 'None', 'RelDiff_', 'T+S+R'), ('QLD', 'None', '_', 'T+S+R')]), ('Sydney', [('Sydney', 'None', 'CumSum_', 'T+S+R'), ('Sydney', 'None', 'Diff_', 'T+S+R'), ('Sydney', 'None', 'RelDiff_', 'T+S+R'), ('Sydney', 'None', '_', 'T+S+R')]), ('VIC', [('VIC', 'None', 'CumSum_', 'T+S+R'), ('VIC', 'None', 'Diff_', 'T+S+R'), ('VIC', 'None', 'RelDiff_', 'T+S+R'), ('VIC', 'None', '_', 'T+S+R')]), ('NSW_State', [('NSW_State', 'None', 'CumSum_', 'T+S+R'), ('NSW_State', 'None', 'Diff_', 'T+S+R'), ('NSW_State', 'None', 'RelDiff_', 'T+S+R'), ('NSW_State', 'None', '_', 'T+S+R')]), ('Other_State', [('Other_State', 'None', 'CumSum_', 'T+S+R'), ('Other_State', 'None', 'Diff_', 'T+S+R'), ('Other_State', 'None', 'RelDiff_', 'T+S+R'), ('Other_State', 'None', '_', 'T+S+R')]), ('QLD_State', [('QLD_State', 'None', 'CumSum_', 'T+S+R'), ('QLD_State', 'None', 'Diff_', 'T+S+R'), ('QLD_State', 'None', 'RelDiff_', 'T+S+R'), ('QLD_State', 'None', '_', 'T+S+R')]), ('VIC_State', [('VIC_State', 'None', 'CumSum_', 'T+S+R'), ('VIC_State', 'None', 'Diff_', 'T+S+R'), ('VIC_State', 'None', 'RelDiff_', 'T+S+R'), ('VIC_State', 'None', '_', 'T+S+R')]), ('Australia', [('Australia', 'None', 'CumSum_', 'T+S+R'), ('Australia', 'None', 'Diff_', 'T+S+R'), ('Australia', 'None', 'RelDiff_', 'T+S+R'), ('Australia', 'None', '_', 'T+S+R')])], 'Cores': 13}))
INFO:pyaf.hierarchical:TRAINING_HIERARCHICAL_MODEL_COMPUTE_TOP_DOWN_HISTORICAL_PROPORTIONS
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['BrisbaneGC', 'Capitals', 'Melbourne', 'NSW', 'Other', 'QLD', 'Sydney', 'VIC', 'NSW_State', 'Other_State', 'QLD_State', 'VIC_State', 'Australia'], 'Horizon': 12}))
Killed
Process ForkPoolWorker-39:
Traceback (most recent call last):
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/queues.py", line 378, in put
    self._writer.send_bytes(obj)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 205, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 409, in _send_bytes
    self._send(header)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 373, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/pool.py", line 136, in worker
    put((job, i, (False, wrapped)))
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/queues.py", line 378, in put
    self._writer.send_bytes(obj)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 205, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 416, in _send_bytes
    self._send(header + buf)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 373, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Process ForkPoolWorker-42:
Traceback (most recent call last):
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/queues.py", line 378, in put
    self._writer.send_bytes(obj)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 205, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 409, in _send_bytes
    self._send(header)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 373, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/pool.py", line 136, in worker
    put((job, i, (False, wrapped)))
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/queues.py", line 378, in put
    self._writer.send_bytes(obj)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 205, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 416, in _send_bytes
    self._send(header + buf)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 373, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Process ForkPoolWorker-40:
Traceback (most recent call last):
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/queues.py", line 378, in put
    self._writer.send_bytes(obj)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 205, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 409, in _send_bytes
    self._send(header)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 373, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/pool.py", line 136, in worker
    put((job, i, (False, wrapped)))
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/queues.py", line 378, in put
    self._writer.send_bytes(obj)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 205, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 416, in _send_bytes
    self._send(header + buf)
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/connection.py", line 373, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
