INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['Ozone'], 'Transformations': [('Ozone', 'None', '_', 'T+S+R'), ('Ozone', 'None', '_', 'TS+R'), ('Ozone', 'None', '_', 'TSR'), ('Ozone', 'None', 'Diff_', 'T+S+R'), ('Ozone', 'None', 'Diff_', 'TS+R'), ('Ozone', 'None', 'Diff_', 'TSR'), ('Ozone', 'None', 'RelDiff_', 'T+S+R'), ('Ozone', 'None', 'RelDiff_', 'TS+R'), ('Ozone', 'None', 'RelDiff_', 'TSR'), ('Ozone', 'None', 'CumSum_', 'T+S+R'), ('Ozone', 'None', 'CumSum_', 'TS+R'), ('Ozone', 'None', 'CumSum_', 'TSR'), ('Ozone', 'None', 'Box_Cox_-2.0_', 'T+S+R'), ('Ozone', 'None', 'Box_Cox_-2.0_', 'TS+R'), ('Ozone', 'None', 'Box_Cox_-2.0_', 'TSR'), ('Ozone', 'None', 'Box_Cox_-1.0_', 'T+S+R'), ('Ozone', 'None', 'Box_Cox_-1.0_', 'TS+R'), ('Ozone', 'None', 'Box_Cox_-1.0_', 'TSR'), ('Ozone', 'None', 'Box_Cox_0.0_', 'T+S+R'), ('Ozone', 'None', 'Box_Cox_0.0_', 'TS+R'), ('Ozone', 'None', 'Box_Cox_0.0_', 'TSR'), ('Ozone', 'None', 'Box_Cox_2.0_', 'T+S+R'), ('Ozone', 'None', 'Box_Cox_2.0_', 'TS+R'), ('Ozone', 'None', 'Box_Cox_2.0_', 'TSR'), ('Ozone', 'None', 'Quantized_5_', 'T+S+R'), ('Ozone', 'None', 'Quantized_5_', 'TS+R'), ('Ozone', 'None', 'Quantized_5_', 'TSR'), ('Ozone', 'None', 'Quantized_10_', 'T+S+R'), ('Ozone', 'None', 'Quantized_10_', 'TS+R'), ('Ozone', 'None', 'Quantized_10_', 'TSR'), ('Ozone', 'None', 'Quantized_20_', 'T+S+R'), ('Ozone', 'None', 'Quantized_20_', 'TS+R'), ('Ozone', 'None', 'Quantized_20_', 'TSR'), ('Ozone', 'None', 'Logit_', 'T+S+R'), ('Ozone', 'None', 'Logit_', 'TS+R'), ('Ozone', 'None', 'Logit_', 'TSR'), ('Ozone', 'None', 'Fisher_', 'T+S+R'), ('Ozone', 'None', 'Fisher_', 'TS+R'), ('Ozone', 'None', 'Fisher_', 'TSR'), ('Ozone', 'None', 'Anscombe_', 'T+S+R'), ('Ozone', 'None', 'Anscombe_', 'TS+R'), ('Ozone', 'None', 'Anscombe_', 'TSR')], 'Cores': 8}))
     Month  Ozone       Time
0  1955-01    2.7 1955-01-01
1  1955-02    2.0 1955-02-01
2  1955-03    3.6 1955-03-01
3  1955-04    5.0 1955-04-01
4  1955-05    6.5 1955-05-01
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': '_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': '_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': '_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Diff_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'RelDiff_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Diff_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'RelDiff_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Diff_Ozone'}))
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.53, ('TRAINING', {'Signal': 'Ozone', 'Transformation': '_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'RelDiff_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.79, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Diff_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.793, ('TRAINING', {'Signal': 'Ozone', 'Transformation': '_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.802, ('TRAINING', {'Signal': 'Ozone', 'Transformation': '_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.897, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Diff_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'CumSum_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'CumSum_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.05, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Diff_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'CumSum_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.402, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'RelDiff_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.491, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'RelDiff_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-1.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.212, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'CumSum_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.191, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'CumSum_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.282, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'CumSum_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-1.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-1.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_0.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.393, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'RelDiff_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_0.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.429, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_0.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.384, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-1.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.624, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 6.784, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.937, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_0.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_5_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.376, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-1.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_5_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.534, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_-1.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_5_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.505, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_0.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_10_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.098, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_0.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_10_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.055, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_5_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_10_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.272, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_5_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_20_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.067, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_20_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.305, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_20_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.936, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_10_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Logit_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.099, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_10_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Logit_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.979, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_20_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Logit_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.615, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Box_Cox_2.0_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Fisher_Ozone'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.74, ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Quantized_5_Ozone'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Ozone', 'Transformation': 'Fisher_Ozone'}))
multiprocessing.pool.RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/home/circleci/project/pyaf/TS/SignalDecomposition.py", line 380, in run_transform_thread
    arg.mSigDec.train(arg.mInputDS, arg.mSplit, arg.mTime, arg.mSignal, arg.mHorizon, arg.mTransformation, arg.mDecompositionType);
  File "/home/circleci/project/pyaf/TS/SignalDecomposition.py", line 194, in train
    lAREstimator.estimate();
  File "/home/circleci/project/pyaf/TS/SignalDecomposition_AR.py", line 323, in estimate
    self.add_model_if_activated(cycle_residue, 'CROSTON', interm.cCroston_Model, lLags, False)
  File "/home/circleci/project/pyaf/TS/SignalDecomposition_AR.py", line 278, in add_model_if_activated
    if(self.mOptions.mActiveAutoRegressions[model_type_str + 'X'] and (self.mExogenousInfo is not None)):
KeyError: 'CROSTONX'
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/circleci/project/pyaf/ForecastEngine.py", line 25, in train
    self.mSignalDecomposition.train(iInputDS, iTime, iSignal, iHorizon, iExogenousData);
  File "/home/circleci/project/pyaf/TS/SignalDecomposition.py", line 666, in train
    lTrainer.train(iInputDS, lSplits , self.mDateColumns, self.mSignals, self.mHorizons)
  File "/home/circleci/project/pyaf/TS/SignalDecomposition.py", line 416, in train
    self.train_all_transformations(iInputDS, iSplits, iTime, iSignals, iHorizon);
  File "/home/circleci/project/pyaf/TS/SignalDecomposition.py", line 505, in train_all_transformations
    for res in pool.imap(run_transform_thread, args):
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/pool.py", line 870, in next
    raise value
KeyError: 'CROSTONX'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/circleci/project/tests/model_control/test_ozone_all_models_enabled.py", line 25, in <module>
    lEngine.train(df , b1.mTimeVar , b1.mSignalVar, H);
  File "/home/circleci/project/pyaf/ForecastEngine.py", line 30, in train
    raise tsutil.PyAF_Error("TRAIN_FAILED");
pyaf.TS.Utils.PyAF_Error: TRAIN_FAILED
Exception ignored in: <function cTimer.__del__ at 0x7f93b97c8550>
Traceback (most recent call last):
  File "/home/circleci/project/pyaf/TS/Utils.py", line 89, in __del__
  File "/home/circleci/project/pyaf/TS/Utils.py", line 65, in get_pyaf_timing_logger
ImportError: sys.meta_path is None, Python is likely shutting down
