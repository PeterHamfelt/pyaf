INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
          Time_Hourly  Hour  Day       Signal
0 2000-01-01 00:00:00     0    5  2766.904897
1 2000-01-01 01:00:00     1    5  2763.570326
2 2000-01-01 02:00:00     2    5  2763.685613
3 2000-01-01 03:00:00     3    5  2765.025123
4 2000-01-01 04:00:00     4    5  2765.401209
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10000 entries, 0 to 9999
Data columns (total 4 columns):
 #   Column       Non-Null Count  Dtype         
---  ------       --------------  -----         
 0   Time_Hourly  10000 non-null  datetime64[ns]
 1   Hour         10000 non-null  int64         
 2   Day          10000 non-null  int64         
 3   Signal       10000 non-null  float64       
dtypes: datetime64[ns](1), float64(1), int64(2)
memory usage: 312.6 KB
None
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': '_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'Diff_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'RelDiff_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'CumSum_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.662, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'CumSum_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.07, ('TRAINING', {'Signal': 'Signal', 'Transformation': '_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.538, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'Diff_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.945, ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 56.0, 0.0439)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 5.0, 21.2897)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 0.0, 41.0169)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 3.5205)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 3.5204)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 3.5201)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 0.0353)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 4.5578)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 3.5203)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 3.5186)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 3.5204)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 3.5643)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 3.5216)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 3.5211)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 3.5211)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 0.435)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 0.4343)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 0.4195)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 0.378)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 20.4544)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 0.4337)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 0.395)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 0.4347)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 0.3795)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 20.9597)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 6.0, 21.2157)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 41.0129)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 0.3705)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 0.3702)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 0.3544)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 0.312)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 20.5057)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 0.37)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 0.3296)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 0.3704)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 0.3141)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 20.9724)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 8.0, 21.3345)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 41.0061)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 30.2081)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 33.3605)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 545.491)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 2.0273)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 990.8572)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 36.2276)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 803.029)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 31.2765)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 4.2038)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 29.9966)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 1.0, 14.7189)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 14.7189)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 6.1035)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 5.1191)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 509.3501)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 0.5375)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 5.1253)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 6.0353)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 7014.4701)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 5.3908)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 7.4194)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 5.2481)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 3.5211)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 3.5211)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 56.1215)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 59.7222)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 571.6023)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 26.2103)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 1019.4191)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 63.8572)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 833.0561)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 57.6397)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 29.5741)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 30.0876)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 40.9937)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 40.9937)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 56.6362)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 59.1216)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 572.0476)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 22.8266)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 1016.59)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 62.5458)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 829.1831)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 57.935)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 28.3663)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 29.862)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 4.0, 40.7054)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 40.7054)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 21.2342)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 25.0, 1830253563.4871)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 2106721779.5686)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 23.7888)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 8.0, 23.7895)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 23.7895)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 21.3872)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 26.0, 1814373524.4814)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 2106715668.2405)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 21.3764)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 28.0, 1814973507.1956)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 2106712389.8948)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 275.1761)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 6.0, 87.5446)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 1.8929)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 0.0783)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 3.5213)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 3.5213)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 40.5847)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 60.5294)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 56.653)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 0.0421)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 40.7939)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 60.257)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 51.2251)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 57.2958)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 39.3168)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 41.788)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 40.8901)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 40.8901)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 40.376)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 59.7191)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 56.1382)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 1.2095)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 40.6013)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 59.7296)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 50.876)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 56.3736)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 38.7161)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 44.698)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 4.0, 40.5411)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 40.5411)
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.013, ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.041, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.994, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.049, ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Time_Hourly' TimeMin=2000-03-16T08:00:00.000000 TimeMax=2000-12-13T13:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=24
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal' Length=8192  Min=2.2754793159844815 Max=2767.966879996208  Mean=1336.786642783612 StdDev=1188.8727287765628
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_Signal' Min=0.0 Max=1.0  Mean=0.48252352490932415 StdDev=0.42986456424030495
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR' [Lag1Trend + Seasonal_HourOfWeek + NoAR]
INFO:pyaf.std:TREND_DETAIL '_Signal_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek' [Seasonal_HourOfWeek]
INFO:pyaf.std:AUTOREG_DETAIL '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0353 MAPE_Forecast=0.0335 MAPE_Test=0.0516
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0342 SMAPE_Forecast=0.0329 SMAPE_Test=0.051
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.0122 MASE_Forecast=0.0127 MASE_Test=0.0365
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=333.00362847905825 CRPS_Forecast=333.98503632196406 CRPS_Test=33.54718667955341
INFO:pyaf.std:MODEL_L1 L1_Fit=1.0829919147455598 L1_Forecast=1.150148736371311 L1_Test=0.7380275233063767
INFO:pyaf.std:MODEL_L2 L2_Fit=1.3761980842956687 L2_Forecast=1.4379194685320658 L2_Test=0.8547760215893782
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=83.40740545960844 LnQ_Forecast=18.44927762679451 LnQ_Test=0.22704865035561006
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.9118122109363753 MedAE_Forecast=0.9825528449610061 MedAE_Test=0.6316556497544352
INFO:pyaf.std:MODEL_COMPLEXITY 170.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.25056762146253414
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:SEASONAL_MODEL_VALUES _Signal_Lag1Trend_residue_Seasonal_HourOfWeek 3.0034566873143875e-05 {80: 0.00012094131670215003, 81: 0.00018990630568238576, 82: -5.930244316959543e-05, 83: -4.503461657934249e-05, 84: -0.11937987135607173, 85: 0.010847523061560227, 86: 0.10836405164844978, 87: 8.997201997501536e-05, 88: -6.397152784298754e-05, 89: -8.430360286593164e-05, 90: 3.501666718780383e-05, 91: -5.450637886417198e-05, 92: -0.00012571145262330052, 93: 2.520963340524318e-05, 94: -5.47817478351309e-05, 95: -7.275160496256206e-08, 96: 0.7483844005705169, 97: 0.00014372749439517385, 98: 8.623333110913123e-07, 99: -1.5038281856005753e-05, 100: 2.505028691768274e-05, 101: 5.969533161154228e-05, 102: -0.0001153536323096338, 103: 5.181641763174483e-05, 104: -7.547439536903511e-06, 105: -5.9814050799245067e-05, 106: -4.7880572559888535e-05, 107: -1.5077724583090202e-05, 108: -0.4773118137306298, 109: 0.043295400443534304, 110: 0.433919331420457, 111: 7.281358272814842e-05, 112: 0.0001994600424045645, 113: 3.1643285700710955e-05, 114: 2.089823867401641e-06, 115: -6.0480192823009205e-05, 116: -0.0001364401475943966, 117: -8.111074347816327e-05, 118: 0.00010920488331478406, 119: 1.635713792547122e-05, 120: 8.203815052643115e-05, 121: -8.653171768602252e-05, 122: -2.1017870208250855e-05, 123: -8.534496193823848e-05, 124: -4.134391421539707e-05, 125: -4.3242489894401714e-05, 126: 8.038352535599813e-06, 127: -4.9971638817258857e-05, 128: 0.00016350988154190116, 129: -0.00013674255152595904, 130: 2.7733924686246247e-05, 131: 2.3000913861648264e-05, 132: -0.4773023393286453, 133: 0.04329546078926594, 134: 0.4340645788084815, 135: 4.327833012496285e-05, 136: -0.00013352065804184132, 137: -4.8506173039086775e-05, 138: -0.00011499616472421259, 139: 7.594570682023516e-05, 140: 0.00012448739046078128, 141: -2.7528177654279062e-05, 142: 5.683815446844154e-05, 143: -0.00011082066494227938, 144: -6.794484752670193e-05, 145: 0.00017658580752288877, 146: -2.3338602459177515e-05, 147: 6.8601033636706e-05, 148: 4.479563722747937e-05, 149: 0.00012915612662101061, 150: 2.74860310156555e-06, 151: -0.0001067648427856005, 152: -6.545200330632106e-05, 153: 7.585851515823361e-05, 154: -0.00013798248807594948, 155: -2.7589820557505362e-05, 156: -0.4772570411980762, 157: 0.04345273042738451, 158: 0.43398729082753684, 159: -0.00012990763339737477, 160: 0.0002061554581171965, 161: -0.00022208167155490788, 162: 0.00012348611690737865, 163: -0.00018036962817402635, 164: 1.7591651312653944e-05, 165: 0.00010377800842298335, 166: -0.00016488981334661368, 167: 0.00015311905250270375, 0: -0.9980117095179507, 1: -0.00011050253712608174, 2: 5.908916759963601e-05, 3: -0.0001603113007848249, 4: -9.244361698618284e-05, 5: 6.677228622603841e-05, 6: -6.160704695842259e-05, 7: -5.350755382664291e-05, 8: -2.5743112481558953e-05, 9: -4.5075227041551464e-05, 10: 3.298635339859363e-05, 11: 4.4293197397261776e-05, 12: 2.7272786946902668e-06, 13: -7.277705966050462e-05, 14: 0.00012240953509918585, 15: -0.00018211287514666115, 16: -4.9455008245567755e-05, 17: 2.488661128074261e-05, 18: -5.818862187045577e-05, 19: 0.00012482216583721204, 20: 5.48639764565449e-05, 21: -0.00011366794117858648, 22: 8.596593515798688e-05, 23: -5.6801879026919166e-05, 24: 0.08322936609138519, 25: -4.126535194966252e-05, 26: -2.590067141454433e-05, 27: -6.740744801531084e-05, 28: -1.361706066368984e-05, 29: 4.587355018167982e-05, 30: 4.499682593879506e-05, 31: -7.041893590563342e-05, 32: -5.6521014210289544e-05, 33: -1.6411214080469527e-05, 34: -3.926580843582883e-06, 35: -1.154910051166802e-05, 36: -0.03986124403828343, 37: 0.0035760154280576814, 38: 0.03617933937132264, 39: 1.5000255925323724e-05, 40: -1.8400720062899945e-05, 41: 0.000227311298492891, 42: -0.00011638672359787217, 43: 2.1165290041674778e-05, 44: 3.756567299327551e-05, 45: 5.302602456910832e-05, 46: -0.0002653327015839507, 47: 3.735806013423215e-05, 48: 0.08319997709192305, 49: 0.00018798273698941714, 50: -0.00012286743242040377, 51: 3.851678575667039e-06, 52: -6.360206901923071e-05, 53: -6.60139897162848e-07, 54: -1.4047424015922738e-05, 55: 2.3763586577268958e-05, 56: -6.699206619026343e-06, 57: 2.3819446420797474e-05, 58: -0.00012609648421865738, 59: 0.00019359393192244778, 60: -0.07962466206372887, 61: 0.007293060082424613, 62: 0.072213837563848, 63: -5.2391918059363496e-05, 64: 8.681329566065377e-06, 65: 0.00011309007071903798, 66: -2.319278607350317e-05, 67: -0.0001821051361877435, 68: 2.5771972474747384e-05, 69: -1.4055013180913623e-05, 70: -2.2386899338380783e-05, 71: -3.76743812905006e-05, 72: 0.08326240427413299, 73: -0.00016343943258981253, 74: 0.0001561497631894504, 75: 0.00015705808463192805, 76: 7.756208660811281e-05, 77: -0.00028971330987775934, 78: 0.00020451355557493667, 79: -0.0002259648150599869}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 24}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.941, ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 24}))
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _Signal             T+S+R  ...  0.0353       0.0335   0.0516
1  None  CumSum_Signal             T+S+R  ...  0.0421       0.0414   0.0929
2  None        _Signal             T+S+R  ...  0.0439       0.0441   0.0602
3  None  CumSum_Signal             T+S+R  ...  0.0783       0.0763   0.0943
4  None        _Signal             T+S+R  ...  0.3780       0.9152   2.6116

[5 rows x 10 columns]
Forecast Columns  Index(['Time_Hourly', 'Signal', 'row_number', 'Time_Hourly_Normalized',
       '_Signal', '_Signal_Lag1Trend', '_Signal_Lag1Trend_residue',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR_residue',
       '_Signal_Trend', '_Signal_Trend_residue', '_Signal_Cycle',
       '_Signal_Cycle_residue', '_Signal_AR', '_Signal_AR_residue',
       '_Signal_TransformedForecast', 'Signal_Forecast',
       '_Signal_TransformedResidue', 'Signal_Residue',
       'Signal_Forecast_Lower_Bound', 'Signal_Forecast_Upper_Bound',
       'Signal_Forecast_Quantile_5', 'Signal_Forecast_Quantile_10',
       'Signal_Forecast_Quantile_15', 'Signal_Forecast_Quantile_20',
       'Signal_Forecast_Quantile_25', 'Signal_Forecast_Quantile_30',
       'Signal_Forecast_Quantile_35', 'Signal_Forecast_Quantile_40',
       'Signal_Forecast_Quantile_45', 'Signal_Forecast_Quantile_50',
       'Signal_Forecast_Quantile_55', 'Signal_Forecast_Quantile_60',
       'Signal_Forecast_Quantile_65', 'Signal_Forecast_Quantile_70',
       'Signal_Forecast_Quantile_75', 'Signal_Forecast_Quantile_80',
       'Signal_Forecast_Quantile_85', 'Signal_Forecast_Quantile_90',
       'Signal_Forecast_Quantile_95'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 8216 entries, 0 to 8215
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Time_Hourly      8216 non-null   datetime64[ns]
 1   Signal           8192 non-null   float64       
 2   Signal_Forecast  8216 non-null   float64       
dtypes: datetime64[ns](1), float64(2)
memory usage: 192.7 KB
None
Forecasts
              Time_Hourly  Signal  Signal_Forecast
8192 2001-02-20 16:00:00     NaN       235.468764
8193 2001-02-20 17:00:00     NaN       236.097437
8194 2001-02-20 18:00:00     NaN       235.775547
8195 2001-02-20 19:00:00     NaN       235.834084
8196 2001-02-20 20:00:00     NaN       235.937979
8197 2001-02-20 21:00:00     NaN       236.084633
8198 2001-02-20 22:00:00     NaN       235.350804
8199 2001-02-20 23:00:00     NaN       235.454125
8200 2001-02-21 00:00:00     NaN       465.559586
8201 2001-02-21 01:00:00     NaN       466.079489
8202 2001-02-21 02:00:00     NaN       465.739675
8203 2001-02-21 03:00:00     NaN       465.750328
8204 2001-02-21 04:00:00     NaN       465.574424
8205 2001-02-21 05:00:00     NaN       465.572598
8206 2001-02-21 06:00:00     NaN       465.533747
8207 2001-02-21 07:00:00     NaN       465.599470
8208 2001-02-21 08:00:00     NaN       465.580942
8209 2001-02-21 09:00:00     NaN       465.646820
8210 2001-02-21 10:00:00     NaN       465.298076
8211 2001-02-21 11:00:00     NaN       465.833497
8212 2001-02-21 12:00:00     NaN       245.616253
8213 2001-02-21 13:00:00     NaN       265.786607
8214 2001-02-21 14:00:00     NaN       465.507797
8215 2001-02-21 15:00:00     NaN       465.362897


<ModelInfo>
{
    "Signal": {
        "Dataset": {
            "Signal": "Signal",
            "Time": {
                "Horizon": 24,
                "TimeMinMax": [
                    "2000-03-16 08:00:00",
                    "2001-02-20 15:00:00"
                ],
                "TimeVariable": "Time_Hourly"
            },
            "Training_Signal_Length": 8192
        },
        "Model": {
            "AR_Model": "NoAR",
            "Best_Decomposition": "_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR",
            "Cycle": "Seasonal_HourOfWeek",
            "Signal_Decomposition_Type": "T+S+R",
            "Signal_Transoformation": "NoTransf",
            "Trend": "Lag1Trend"
        },
        "Model_Performance": {
            "COMPLEXITY": 170.0,
            "CRPS": 333.98503632196406,
            "LnQ": 18.44927762679451,
            "MAE": 1.150148736371311,
            "MAPE": 0.0335,
            "MASE": 0.0127,
            "MedAE": 0.9825528449610061,
            "RMSE": 1.4379194685320658
        }
    }
}
</ModelInfo>




<Forecast>
INFO:pyaf.timing:('OPERATION_START', ('PLOTTING', {'Signals': ['Signal']}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 6.382, ('PLOTTING', {'Signals': ['Signal']}))
{"Time_Hourly":{"8168":"2001-02-19T16:00:00.000Z","8169":"2001-02-19T17:00:00.000Z","8170":"2001-02-19T18:00:00.000Z","8171":"2001-02-19T19:00:00.000Z","8172":"2001-02-19T20:00:00.000Z","8173":"2001-02-19T21:00:00.000Z","8174":"2001-02-19T22:00:00.000Z","8175":"2001-02-19T23:00:00.000Z","8176":"2001-02-20T00:00:00.000Z","8177":"2001-02-20T01:00:00.000Z","8178":"2001-02-20T02:00:00.000Z","8179":"2001-02-20T03:00:00.000Z","8180":"2001-02-20T04:00:00.000Z","8181":"2001-02-20T05:00:00.000Z","8182":"2001-02-20T06:00:00.000Z","8183":"2001-02-20T07:00:00.000Z","8184":"2001-02-20T08:00:00.000Z","8185":"2001-02-20T09:00:00.000Z","8186":"2001-02-20T10:00:00.000Z","8187":"2001-02-20T11:00:00.000Z","8188":"2001-02-20T12:00:00.000Z","8189":"2001-02-20T13:00:00.000Z","8190":"2001-02-20T14:00:00.000Z","8191":"2001-02-20T15:00:00.000Z","8192":"2001-02-20T16:00:00.000Z","8193":"2001-02-20T17:00:00.000Z","8194":"2001-02-20T18:00:00.000Z","8195":"2001-02-20T19:00:00.000Z","8196":"2001-02-20T20:00:00.000Z","8197":"2001-02-20T21:00:00.000Z","8198":"2001-02-20T22:00:00.000Z","8199":"2001-02-20T23:00:00.000Z","8200":"2001-02-21T00:00:00.000Z","8201":"2001-02-21T01:00:00.000Z","8202":"2001-02-21T02:00:00.000Z","8203":"2001-02-21T03:00:00.000Z","8204":"2001-02-21T04:00:00.000Z","8205":"2001-02-21T05:00:00.000Z","8206":"2001-02-21T06:00:00.000Z","8207":"2001-02-21T07:00:00.000Z","8208":"2001-02-21T08:00:00.000Z","8209":"2001-02-21T09:00:00.000Z","8210":"2001-02-21T10:00:00.000Z","8211":"2001-02-21T11:00:00.000Z","8212":"2001-02-21T12:00:00.000Z","8213":"2001-02-21T13:00:00.000Z","8214":"2001-02-21T14:00:00.000Z","8215":"2001-02-21T15:00:00.000Z"},"Signal":{"8168":6.1828044847,"8169":4.8593202407,"8170":4.4581210597,"8171":4.6720669544,"8172":5.377316142,"8173":4.6057202027,"8174":3.948168777,"8175":4.488278897,"8176":235.2411256911,"8177":235.8410141926,"8178":235.3992971332,"8179":236.5652340139,"8180":235.1510918179,"8181":234.8075931922,"8182":235.8816710308,"8183":235.5407126867,"8184":234.9860840606,"8185":234.7994054131,"8186":235.9182146446,"8187":236.3021914065,"8188":124.9340494532,"8189":135.2337239728,"8190":234.2087054952,"8191":235.519654915,"8192":null,"8193":null,"8194":null,"8195":null,"8196":null,"8197":null,"8198":null,"8199":null,"8200":null,"8201":null,"8202":null,"8203":null,"8204":null,"8205":null,"8206":null,"8207":null,"8208":null,"8209":null,"8210":null,"8211":null,"8212":null,"8213":null,"8214":null,"8215":null},"Signal_Forecast":{"8168":4.7568197991,"8169":6.2516331715,"8170":4.6983884696,"8171":4.8033406504,"8172":4.8238037823,"8173":5.0629456946,"8174":4.8434754503,"8175":3.7910723086,"8176":234.67502098,"8177":235.1269984621,"8178":235.7693809284,"8179":235.2128689339,"8180":236.5275734263,"8181":235.2779639012,"8182":234.9320405267,"8183":235.6869139853,"8184":235.3843930037,"8185":234.940695707,"8186":234.7885457023,"8187":235.8862733966,"8188":126.0582915494,"8189":134.8242045713,"8190":235.2946117544,"8191":234.250191574,"8192":235.4687642017,"8193":236.0974371052,"8194":235.7755473446,"8195":235.8340840053,"8196":235.937979064,"8197":236.0846326842,"8198":235.3508043131,"8199":235.4541251788,"8200":465.5595863587,"8201":466.0794885979,"8202":465.7396751966,"8203":465.7503277509,"8204":465.5744240556,"8205":465.5725983123,"8206":465.5337474725,"8207":465.5994702196,"8208":465.5809422814,"8209":465.6468195196,"8210":465.2980755575,"8211":465.8334966302,"8212":245.6162534785,"8213":265.7866070331,"8214":465.5077965936,"8215":465.3628967163}}
</Forecast>


