INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
          Time_Hourly  Hour  Day      Signal
0 2000-01-01 00:00:00     0    5  238.904897
1 2000-01-01 01:00:00     1    5  235.570326
2 2000-01-01 02:00:00     2    5  235.685613
3 2000-01-01 03:00:00     3    5  237.025123
4 2000-01-01 04:00:00     4    5  237.401209
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10000 entries, 0 to 9999
Data columns (total 4 columns):
 #   Column       Non-Null Count  Dtype         
---  ------       --------------  -----         
 0   Time_Hourly  10000 non-null  datetime64[ns]
 1   Hour         10000 non-null  int64         
 2   Day          10000 non-null  int64         
 3   Signal       10000 non-null  float64       
dtypes: datetime64[ns](1), float64(1), int64(2)
memory usage: 312.6 KB
None
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': '_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'Diff_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'RelDiff_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'CumSum_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.153, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'CumSum_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.383, ('TRAINING', {'Signal': 'Signal', 'Transformation': '_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.823, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'Diff_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.186, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'RelDiff_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.686, ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 7.0, 0.034)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 5.0, 1.1265)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 0.0, 3.0804)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 0.2585)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 0.2584)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 0.2579)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 0.0471)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 0.2594)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 0.2583)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 0.2576)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 0.2585)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 0.258)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 0.2589)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 0.2589)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 0.2589)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 0.0386)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 0.0385)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 0.0384)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 0.0379)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 1.1265)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 0.0385)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 0.0385)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 0.0385)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 0.0382)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 1.1319)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 6.0, 1.1254)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 3.0802)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 0.0397)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 0.0397)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 0.0395)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 0.039)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 1.1264)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 0.0397)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 0.0395)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 0.0397)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 0.0393)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 1.1324)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 8.0, 1.1265)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 3.08)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 3.0619)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 4.9271)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 6.2415)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 2.7786)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 54.0463)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 5.2589)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 6.0239)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 3.0345)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 2.1829)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 5.6461)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 1.0, 0.978)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 0.978)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 1.2762)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 1.1797)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 0.6921)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 0.7663)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 1.6413)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 1.0297)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 1.1232)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 1.3917)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 0.6897)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 1.6135)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 0.2589)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 0.2589)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 5.0149)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 7.1605)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 8.2596)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 1.5474)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 56.7895)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 7.6865)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 8.4167)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 4.8618)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 1.5025)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 5.6662)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 3.083)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 3.083)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 5.419)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 7.2012)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 8.1031)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 1.2057)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 56.694)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 7.7381)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 8.2486)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 5.2236)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 1.0717)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 5.6445)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 4.0, 3.0587)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 3.0587)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 239.2712)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 1.1444)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 1.1444)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 1.1253)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 116255740.0168)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 1.1444)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 1.1443)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 84.2639)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 106782317.4425)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 3.0576)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 1.0, 134311167.9038)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 134311167.9038)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 108940857.9009)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 110299000.9833)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 106234124.5672)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 1.5352)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 4071617.7928)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 114152269.3002)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 114599478.5962)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 111089558.7677)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 1.1372)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 3.0044)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 1.0587)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 1.0587)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 280.0346)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 1.179)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 1.1442)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 1.0944)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 117752078.7084)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 1.1531)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 1.1424)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 107.5644)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 109789384.9093)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 3.0918)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 134470069.5106)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 134470069.5106)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 617.3411)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 1.1507)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 1.1444)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 1.1333)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 115959698.2603)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 1.1434)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 1.1444)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 406.4)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 107792576.6984)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 2.9694)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 4.0, 134180364.2429)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 134180364.2429)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 12.7878)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 6.0, 12.9344)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 1.9333)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 0.0482)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 0.259)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 0.259)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 5.0403)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 5.1052)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 4.4703)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 0.055)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 3.1973)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 4.9124)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 4.0032)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 5.2181)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 3.0147)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 3.1514)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 3.0765)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 3.0765)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 5.0946)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 5.1205)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 4.5005)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 0.1299)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 3.085)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 4.941)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 3.9569)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 5.1818)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 3.0195)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 3.2692)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 4.0, 3.0651)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 3.0651)
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.011, ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.541, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.578, ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Time_Hourly' TimeMin=2000-03-16T08:00:00.000000 TimeMax=2000-12-13T13:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=24
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal' Length=8192  Min=4.275479315984482 Max=239.9668799962079  Mean=87.29250215861188 StdDev=95.75252669794803
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_Signal' Min=0.0 Max=1.0  Mean=0.35222762732553636 StdDev=0.4062622837388166
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR' [ConstantTrend + Seasonal_DayOfWeek + NoAR]
INFO:pyaf.std:TREND_DETAIL '_Signal_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek' [Seasonal_DayOfWeek]
INFO:pyaf.std:AUTOREG_DETAIL '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.034 MAPE_Forecast=0.0342 MAPE_Test=0.0494
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0334 SMAPE_Forecast=0.0337 SMAPE_Test=0.0493
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.2053 MASE_Forecast=0.2078 MASE_Test=0.4817
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=24.70043801571731 CRPS_Forecast=24.990223703938128 CRPS_Test=1.4359345316535517
INFO:pyaf.std:MODEL_L1 L1_Fit=0.7827213384671344 L1_Forecast=0.8113572035915444 L1_Test=0.5653961353611905
INFO:pyaf.std:MODEL_L2 L2_Fit=0.9776280016999008 L2_Forecast=1.0100610998526038 L2_Test=0.7003754036366524
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=24.982902296698544 LnQ_Forecast=6.37697475805542 LnQ_Test=0.10071606386355927
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.6675896270997761 MedAE_Forecast=0.6635025033350708 MedAE_Test=0.47655572862355866
INFO:pyaf.std:MODEL_COMPLEXITY 7.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _Signal_ConstantTrend 0.35161974320417644
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:SEASONAL_MODEL_VALUES _Signal_ConstantTrend_residue_Seasonal_DayOfWeek -0.21265247310113922 {3: -0.2127471866793277, 4: -0.1705572557536207, 5: 0.6354858840147938, 6: 0.6359518731808542, 0: -0.3399495402201404, 1: -0.2976873990207922, 2: -0.25529641838861267}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 24}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.362, ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 24}))
INFO:pyaf.timing:('OPERATION_START', ('PLOTTING', {'Signals': ['Signal']}))
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _Signal             T+S+R  ...  0.0340       0.0342   0.0494
1  None  CumSum_Signal             T+S+R  ...  0.0482       0.0467   0.0652
2  None        _Signal             T+S+R  ...  0.0471       0.0469   0.0633
3  None        _Signal             T+S+R  ...  0.0385       0.0504   0.1220
4  None        _Signal             T+S+R  ...  0.0384       0.0508   0.1225

[5 rows x 10 columns]
Forecast Columns  Index(['Time_Hourly', 'Signal', 'row_number', 'Time_Hourly_Normalized',
       '_Signal', '_Signal_ConstantTrend', '_Signal_ConstantTrend_residue',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR',
       '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR_residue',
       '_Signal_Trend', '_Signal_Trend_residue', '_Signal_Cycle',
       '_Signal_Cycle_residue', '_Signal_AR', '_Signal_AR_residue',
       '_Signal_TransformedForecast', 'Signal_Forecast',
       '_Signal_TransformedResidue', 'Signal_Residue',
       'Signal_Forecast_Lower_Bound', 'Signal_Forecast_Upper_Bound',
       'Signal_Forecast_Quantile_5', 'Signal_Forecast_Quantile_10',
       'Signal_Forecast_Quantile_15', 'Signal_Forecast_Quantile_20',
       'Signal_Forecast_Quantile_25', 'Signal_Forecast_Quantile_30',
       'Signal_Forecast_Quantile_35', 'Signal_Forecast_Quantile_40',
       'Signal_Forecast_Quantile_45', 'Signal_Forecast_Quantile_50',
       'Signal_Forecast_Quantile_55', 'Signal_Forecast_Quantile_60',
       'Signal_Forecast_Quantile_65', 'Signal_Forecast_Quantile_70',
       'Signal_Forecast_Quantile_75', 'Signal_Forecast_Quantile_80',
       'Signal_Forecast_Quantile_85', 'Signal_Forecast_Quantile_90',
       'Signal_Forecast_Quantile_95'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 8216 entries, 0 to 8215
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Time_Hourly      8216 non-null   datetime64[ns]
 1   Signal           8192 non-null   float64       
 2   Signal_Forecast  8216 non-null   float64       
dtypes: datetime64[ns](1), float64(2)
memory usage: 192.7 KB
None
Forecasts
              Time_Hourly  Signal  Signal_Forecast
8192 2001-02-20 16:00:00     NaN        16.986869
8193 2001-02-20 17:00:00     NaN        16.986869
8194 2001-02-20 18:00:00     NaN        16.986869
8195 2001-02-20 19:00:00     NaN        16.986869
8196 2001-02-20 20:00:00     NaN        16.986869
8197 2001-02-20 21:00:00     NaN        16.986869
8198 2001-02-20 22:00:00     NaN        16.986869
8199 2001-02-20 23:00:00     NaN        16.986869
8200 2001-02-21 00:00:00     NaN        26.978059
8201 2001-02-21 01:00:00     NaN        26.978059
8202 2001-02-21 02:00:00     NaN        26.978059
8203 2001-02-21 03:00:00     NaN        26.978059
8204 2001-02-21 04:00:00     NaN        26.978059
8205 2001-02-21 05:00:00     NaN        26.978059
8206 2001-02-21 06:00:00     NaN        26.978059
8207 2001-02-21 07:00:00     NaN        26.978059
8208 2001-02-21 08:00:00     NaN        26.978059
8209 2001-02-21 09:00:00     NaN        26.978059
8210 2001-02-21 10:00:00     NaN        26.978059
8211 2001-02-21 11:00:00     NaN        26.978059
8212 2001-02-21 12:00:00     NaN        26.978059
8213 2001-02-21 13:00:00     NaN        26.978059
8214 2001-02-21 14:00:00     NaN        26.978059
8215 2001-02-21 15:00:00     NaN        26.978059


<ModelInfo>
{
    "Signal": {
        "Dataset": {
            "Signal": "Signal",
            "Time": {
                "Horizon": 24,
                "TimeMinMax": [
                    "2000-03-16 08:00:00",
                    "2001-02-20 15:00:00"
                ],
                "TimeVariable": "Time_Hourly"
            },
            "Training_Signal_Length": 8192
        },
        "Model": {
            "AR_Model": "NoAR",
            "Best_Decomposition": "_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR",
            "Cycle": "Seasonal_DayOfWeek",
            "Signal_Decomposition_Type": "T+S+R",
            "Signal_Transoformation": "NoTransf",
            "Trend": "ConstantTrend"
        },
        "Model_Performance": {
            "COMPLEXITY": 7.0,
            "CRPS": 24.990223703938128,
            "LnQ": 6.37697475805542,
            "MAE": 0.8113572035915444,
            "MAPE": 0.0342,
            "MASE": 0.2078,
            "MedAE": 0.6635025033350708,
            "RMSE": 1.0100610998526038
        }
    }
}
</ModelInfo>




<Forecast>
{"Time_Hourly":{"8168":"2001-02-19T16:00:00.000Z","8169":"2001-02-19T17:00:00.000Z","8170":"2001-02-19T18:00:00.000Z","8171":"2001-02-19T19:00:00.000Z","8172":"2001-02-19T20:00:00.000Z","8173":"2001-02-19T21:00:00.000Z","8174":"2001-02-19T22:00:00.000Z","8175":"2001-02-19T23:00:00.000Z","8176":"2001-02-20T00:00:00.000Z","8177":"2001-02-20T01:00:00.000Z","8178":"2001-02-20T02:00:00.000Z","8179":"2001-02-20T03:00:00.000Z","8180":"2001-02-20T04:00:00.000Z","8181":"2001-02-20T05:00:00.000Z","8182":"2001-02-20T06:00:00.000Z","8183":"2001-02-20T07:00:00.000Z","8184":"2001-02-20T08:00:00.000Z","8185":"2001-02-20T09:00:00.000Z","8186":"2001-02-20T10:00:00.000Z","8187":"2001-02-20T11:00:00.000Z","8188":"2001-02-20T12:00:00.000Z","8189":"2001-02-20T13:00:00.000Z","8190":"2001-02-20T14:00:00.000Z","8191":"2001-02-20T15:00:00.000Z","8192":"2001-02-20T16:00:00.000Z","8193":"2001-02-20T17:00:00.000Z","8194":"2001-02-20T18:00:00.000Z","8195":"2001-02-20T19:00:00.000Z","8196":"2001-02-20T20:00:00.000Z","8197":"2001-02-20T21:00:00.000Z","8198":"2001-02-20T22:00:00.000Z","8199":"2001-02-20T23:00:00.000Z","8200":"2001-02-21T00:00:00.000Z","8201":"2001-02-21T01:00:00.000Z","8202":"2001-02-21T02:00:00.000Z","8203":"2001-02-21T03:00:00.000Z","8204":"2001-02-21T04:00:00.000Z","8205":"2001-02-21T05:00:00.000Z","8206":"2001-02-21T06:00:00.000Z","8207":"2001-02-21T07:00:00.000Z","8208":"2001-02-21T08:00:00.000Z","8209":"2001-02-21T09:00:00.000Z","8210":"2001-02-21T10:00:00.000Z","8211":"2001-02-21T11:00:00.000Z","8212":"2001-02-21T12:00:00.000Z","8213":"2001-02-21T13:00:00.000Z","8214":"2001-02-21T14:00:00.000Z","8215":"2001-02-21T15:00:00.000Z"},"Signal":{"8168":8.1828044847,"8169":6.8593202407,"8170":6.4581210597,"8171":6.6720669544,"8172":7.377316142,"8173":6.6057202027,"8174":5.948168777,"8175":6.488278897,"8176":17.2411256911,"8177":17.8410141926,"8178":17.3992971332,"8179":18.5652340139,"8180":17.1510918179,"8181":16.8075931922,"8182":17.8816710308,"8183":17.5407126867,"8184":16.9860840606,"8185":16.7994054131,"8186":17.9182146446,"8187":18.3021914065,"8188":16.9340494532,"8189":17.2337239728,"8190":16.2087054952,"8191":17.519654915,"8192":null,"8193":null,"8194":null,"8195":null,"8196":null,"8197":null,"8198":null,"8199":null,"8200":null,"8201":null,"8202":null,"8203":null,"8204":null,"8205":null,"8206":null,"8207":null,"8208":null,"8209":null,"8210":null,"8211":null,"8212":null,"8213":null,"8214":null,"8215":null},"Signal_Forecast":{"8168":7.0260458035,"8169":7.0260458035,"8170":7.0260458035,"8171":7.0260458035,"8172":7.0260458035,"8173":7.0260458035,"8174":7.0260458035,"8175":7.0260458035,"8176":16.9868690585,"8177":16.9868690585,"8178":16.9868690585,"8179":16.9868690585,"8180":16.9868690585,"8181":16.9868690585,"8182":16.9868690585,"8183":16.9868690585,"8184":16.9868690585,"8185":16.9868690585,"8186":16.9868690585,"8187":16.9868690585,"8188":16.9868690585,"8189":16.9868690585,"8190":16.9868690585,"8191":16.9868690585,"8192":16.9868690585,"8193":16.9868690585,"8194":16.9868690585,"8195":16.9868690585,"8196":16.9868690585,"8197":16.9868690585,"8198":16.9868690585,"8199":16.9868690585,"8200":26.9780586599,"8201":26.9780586599,"8202":26.9780586599,"8203":26.9780586599,"8204":26.9780586599,"8205":26.9780586599,"8206":26.9780586599,"8207":26.9780586599,"8208":26.9780586599,"8209":26.9780586599,"8210":26.9780586599,"8211":26.9780586599,"8212":26.9780586599,"8213":26.9780586599,"8214":26.9780586599,"8215":26.9780586599}}
</Forecast>


INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.802, ('PLOTTING', {'Signals': ['Signal']}))
