INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
          Time_Hourly  Hour  Day      Signal
0 2000-01-01 00:00:00     0    5    6.904897
1 2000-01-01 01:00:00     1    5  123.570326
2 2000-01-01 02:00:00     2    5  243.685613
3 2000-01-01 03:00:00     3    5  365.025123
4 2000-01-01 04:00:00     4    5  485.401209
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10000 entries, 0 to 9999
Data columns (total 4 columns):
 #   Column       Non-Null Count  Dtype         
---  ------       --------------  -----         
 0   Time_Hourly  10000 non-null  datetime64[ns]
 1   Hour         10000 non-null  int64         
 2   Day          10000 non-null  int64         
 3   Signal       10000 non-null  float64       
dtypes: datetime64[ns](1), float64(1), int64(2)
memory usage: 312.6 KB
None
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': '_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'Diff_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'RelDiff_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'CumSum_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.13, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'CumSum_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.39, ('TRAINING', {'Signal': 'Signal', 'Transformation': '_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.787, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'RelDiff_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.805, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'Diff_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.498, ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 42.0, 1.4575)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 24.0, 58.9886)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 0.0, 64.6743)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 21.0173)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 21.8263)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 21.8235)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 0.0435)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 6.8368)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 21.8332)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 21.8195)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 21.8252)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 13.0436)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 21.0232)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 21.0129)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 21.0129)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 22.812)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 3.5049)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 1.5968)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 0.2081)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 58.986)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 2.7122)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 1.1396)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 5.5981)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 0.6647)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 102.9974)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 25.0, 58.986)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 64.6736)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 22.8149)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 3.4967)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 1.5889)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 0.1787)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 58.9952)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 2.7045)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 1.1146)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 5.5853)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 0.6549)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 103.0032)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 27.0, 58.9952)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 64.6706)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 195.648)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 4381.078)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 4380.5872)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 71.104)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 120.1434)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 4670.7906)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 4918.4017)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 6495.4662)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 1378.3263)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 189.9015)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 1.0, 104.9573)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 104.9573)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 21.8385)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 21.6977)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 23.3297)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 5.2299)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 11.8107)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 22.9976)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 23.6605)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 23.8881)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 106.6954)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 22.1099)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 21.0129)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 21.0129)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 163.1293)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 4340.5784)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 4341.1924)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 32.6279)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 79.6024)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 4630.2127)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 4878.1342)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 6452.7422)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 1420.3991)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 189.9547)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 64.6192)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 64.6192)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 164.9517)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 4340.1081)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 4343.3908)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 32.8024)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 78.4113)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 4629.0371)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 4879.6721)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 6453.616)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 1419.6368)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 190.3144)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 4.0, 65.0979)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 65.0979)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 107.2332)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 25.0, 139.9736)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 10562021269.8385)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 106.0479)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 106.0479)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 106.0479)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 106.1523)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 106.0483)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 106.0479)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 106.0479)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 106.0479)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 10334433321.1833)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 106.0479)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 106.0479)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 106.0479)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 269.4625)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 10234687278.0294)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 10330731800.2661)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 134.5887)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 4257.7932)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 10312256300.3647)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 10337641884.9446)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 10312358632.0627)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 10352730018.053)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 157.847)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 26.0, 4257.7932)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 10562008340.049)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 219.8213)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 10163474311.6197)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 10326919183.2183)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 128.2677)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 5261.9575)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 10310718810.3075)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 10335989719.1941)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 10310557860.2021)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 10352330842.8674)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 171.0725)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 28.0, 5261.9575)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 10561977787.6789)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 350.118)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 6.0, 127.2436)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 1.2243)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 0.0443)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 21.013)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 21.013)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 140.7468)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 96.9146)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 81.7036)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 0.0459)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 50.5695)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 91.8374)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 72.2656)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 96.7282)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 53.6419)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 65.5015)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 64.5573)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 64.5573)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 139.0573)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 95.5482)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 80.632)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 1.5754)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 50.5334)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 92.2999)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 70.1585)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 96.1511)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 52.5714)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 68.542)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 9.0, 64.0076)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 63.9794)
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.011, ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.566, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.603, ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Time_Hourly' TimeMin=2000-03-16T08:00:00.000000 TimeMax=2000-12-13T13:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=24
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal' Length=8192  Min=2.1783088195634366 Max=2767.9693841284075  Mean=1701.5229709086118 StdDev=1243.183952362572
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_Signal' Min=0.0 Max=1.0  Mean=0.6144154116555206 StdDev=0.44948584998371616
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR' [Lag1Trend + Seasonal_HourOfWeek + NoAR]
INFO:pyaf.std:TREND_DETAIL '_Signal_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek' [Seasonal_HourOfWeek]
INFO:pyaf.std:AUTOREG_DETAIL '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0435 MAPE_Forecast=0.0418 MAPE_Test=0.0546
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.042 SMAPE_Forecast=0.0414 SMAPE_Test=0.0541
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.007 MASE_Forecast=0.0058 MASE_Test=0.0061
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=334.9318172547287 CRPS_Forecast=334.0548346110802 CRPS_Test=396.76738595263714
INFO:pyaf.std:MODEL_L1 L1_Fit=1.376839481320401 L1_Forecast=1.150148736371312 L1_Test=0.7380275233063581
INFO:pyaf.std:MODEL_L2 L2_Fit=23.79659271821381 L2_Forecast=1.4379194685320695 L2_Test=0.8547760215893613
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=103.21028966802803 LnQ_Forecast=24.031898178441754 LnQ_Test=0.23989870100651103
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.9121324517878975 MedAE_Forecast=0.9825528449611056 MedAE_Test=0.6316556497544348
INFO:pyaf.std:MODEL_COMPLEXITY 170.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.9990233575960565
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:SEASONAL_MODEL_VALUES _Signal_Lag1Trend_residue_Seasonal_HourOfWeek 0.00023807883251270034 {80: 0.6943165387664556, 81: 0.00018989946176684036, 82: -5.9300306005538594e-05, 83: -4.50329936045879e-05, 84: -6.070003815461522e-05, 85: 3.2585615228342135e-07, 86: -0.0001079163989208265, 87: 8.996877752931454e-05, 88: -6.396922241269642e-05, 89: -8.430056470076774e-05, 90: 3.5015405243865594e-05, 91: -5.4504414542577706e-05, 92: -0.000125706922186275, 93: 2.520872489086834e-05, 94: -5.47797735896971e-05, 95: -7.27489831708894e-08, 96: -0.9979783807895463, 97: 0.04353094742770697, 98: 0.04338808741525155, 99: 0.04337218737311696, 100: 0.04341227449716356, 101: 0.043446918293306075, 102: 0.04327187563786597, 103: 0.04343903966326962, 104: 0.6941880546407432, 105: -5.981189519776997e-05, 106: -4.787884702162071e-05, 107: -1.5077181206302193e-05, 108: -3.513594311244095e-05, 109: -9.338496555866271e-05, 110: 3.144254070619468e-05, 111: 7.281095864464238e-05, 112: 0.00019945285418787595, 113: 3.164214532791476e-05, 114: 2.0897485535353866e-06, 115: -6.047801321484858e-05, 116: -0.00013643523051265483, 117: -8.110782037840103e-05, 118: 0.00010920094774780065, 119: 1.6356548440787932e-05, 120: -0.9978241424054018, 121: 0.04330069651379442, 122: 0.04336620800025943, 123: 0.04330188322677357, 124: 0.04334588268876996, 125: 0.04334398418151256, 126: 0.043395263175864146, 127: 0.0433372552750973, 128: 0.6943591057971934, 129: -0.000136737623545935, 130: 2.7732925200640857e-05, 131: 2.300008494604544e-05, 132: -2.5661882570027217e-05, 133: -9.332462200195568e-05, 134: 0.00017668469424991784, 135: 4.3276770444133916e-05, 136: -0.00013351584617371515, 137: -4.850442495529794e-05, 138: -0.00011499202044873424, 139: 7.594296985991011e-05, 140: 0.00012448290413691332, 141: -2.752718558329814e-05, 142: 5.68361061134004e-05, 143: -0.00011081667114509752, 144: -0.9979741199983108, 145: 0.04356380455667425, 146: 0.043363887351643836, 147: 0.04345582367438418, 148: 0.04343201913588304, 149: 0.043516376585061245, 150: 0.04338997361706398, 151: 0.04328046411786396, 152: 0.6941301521637603, 153: 7.585578134028381e-05, 154: -0.00013797751541055892, 155: -2.758882626507919e-05, 156: 1.9634615527786003e-05, 157: 6.393934837356507e-05, 158: 9.939949863890796e-05, 159: -0.00012990295173676003, 160: 0.00020614802860863257, 161: -0.0002220736680912383, 162: 0.00012348166666786842, 163: -0.00018036312794489362, 164: 1.7591017338114412e-05, 165: 0.00010377426843177773, 166: -0.0001648838709850109, 167: 0.00015311353434022124, 0: -0.9979757427931343, 1: -0.00011049855479370381, 2: 5.9087038121784685e-05, 3: -0.0001603055234253157, 4: -9.244028546802373e-05, 5: 6.676987986104161e-05, 6: -6.160482674027914e-05, 7: -5.350562550110753e-05, 8: -2.5742184741499915e-05, 9: -4.507360260340952e-05, 10: 3.298516462386892e-05, 11: 4.429160114220103e-05, 12: 2.72718040798532e-06, 13: -7.277443689320353e-05, 14: 0.00012240512365789546, 15: -0.00018210631209373954, 16: -4.945322596720857e-05, 17: 2.4885714407598607e-05, 18: -5.8186524846813364e-05, 19: 0.000124817667448619, 20: 5.4861999247736003e-05, 21: -0.00011366384477017575, 22: 8.596283708498442e-05, 23: -5.679983197924175e-05, 24: 6.751850661364895e-05, 25: 0.04334596124820442, 26: 0.04336132537502135, 27: 0.043319820094257555, 28: 0.043373608543090775, 29: 0.04343309700999093, 30: 0.043432220317343756, 31: 0.04331680871489635, 32: 0.6941390828309979, 33: -1.641062264690074e-05, 34: -3.926439335888432e-06, 35: -1.1548684300755063e-05, 36: -8.818448337388762e-05, 37: -3.971553849524412e-05, 38: 2.201459904249692e-05, 39: 1.4999715340247022e-05, 40: -1.8400056930767406e-05, 41: 0.000227303106562049, 42: -0.00011638252920909142, 43: 2.1164527278849654e-05, 44: 3.7564319187444184e-05, 45: 5.3024113596977784e-05, 46: -0.00026532313942340124, 47: 3.7356713810332565e-05, 48: -0.9978680470331227, 49: 0.04357520107541384, 50: 0.043264362108540434, 51: 0.04339107665278506, 52: 0.04332362533611395, 53: 0.043386564996910904, 54: 0.04337317819524816, 55: 0.04341098784319375, 56: 0.6941889028430921, 57: 2.381858800648562e-05, 58: -0.00012609193990564815, 59: 0.00019358695511084711, 60: -7.854647940086501e-05, 61: 6.159306685415977e-05, 62: -0.00010080676087076412, 63: -5.239002993950859e-05, 64: 8.681016704981115e-06, 65: 0.0001130859951360974, 66: -2.319195024302889e-05, 67: -0.00018209857341372482, 68: 2.5771043694666762e-05, 69: -1.4054506661032029e-05, 70: -2.238609255078572e-05, 71: -3.767302356677549e-05, 72: -0.9978056221006874, 73: 0.043223791570520184, 74: 0.043543369248822676, 75: 0.04354427753753075, 76: 0.043464784404413814, 77: 0.04309752224393813, 78: 0.04359173129825547, 79: 0.04316126844136345}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 24}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.386, ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 24}))
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _Signal             T+S+R  ...  0.0435       0.0418   0.0546
1  None  CumSum_Signal             T+S+R  ...  0.0443       0.0422   0.0539
2  None  CumSum_Signal             T+S+R  ...  0.0459       0.0468   0.0927
3  None        _Signal             T+S+R  ...  0.2081       0.4907   1.2279
4  None        _Signal             T+S+R  ...  0.6647       0.7796   1.4946

[5 rows x 10 columns]
Forecast Columns  Index(['Time_Hourly', 'Signal', 'row_number', 'Time_Hourly_Normalized',
       '_Signal', '_Signal_Lag1Trend', '_Signal_Lag1Trend_residue',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR_residue',
       '_Signal_Trend', '_Signal_Trend_residue', '_Signal_Cycle',
       '_Signal_Cycle_residue', '_Signal_AR', '_Signal_AR_residue',
       '_Signal_TransformedForecast', 'Signal_Forecast',
       '_Signal_TransformedResidue', 'Signal_Residue',
       'Signal_Forecast_Lower_Bound', 'Signal_Forecast_Upper_Bound',
       'Signal_Forecast_Quantile_5', 'Signal_Forecast_Quantile_10',
       'Signal_Forecast_Quantile_15', 'Signal_Forecast_Quantile_20',
       'Signal_Forecast_Quantile_25', 'Signal_Forecast_Quantile_30',
       'Signal_Forecast_Quantile_35', 'Signal_Forecast_Quantile_40',
       'Signal_Forecast_Quantile_45', 'Signal_Forecast_Quantile_50',
       'Signal_Forecast_Quantile_55', 'Signal_Forecast_Quantile_60',
       'Signal_Forecast_Quantile_65', 'Signal_Forecast_Quantile_70',
       'Signal_Forecast_Quantile_75', 'Signal_Forecast_Quantile_80',
       'Signal_Forecast_Quantile_85', 'Signal_Forecast_Quantile_90',
       'Signal_Forecast_Quantile_95'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 8216 entries, 0 to 8215
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Time_Hourly      8216 non-null   datetime64[ns]
 1   Signal           8192 non-null   float64       
 2   Signal_Forecast  8216 non-null   float64       
dtypes: datetime64[ns](1), float64(2)
memory usage: 192.7 KB
None
Forecasts
              Time_Hourly  Signal  Signal_Forecast
8192 2001-02-20 16:00:00     NaN      2765.468764
8193 2001-02-20 17:00:00     NaN      2766.097437
8194 2001-02-20 18:00:00     NaN      2765.775547
8195 2001-02-20 19:00:00     NaN      2765.834084
8196 2001-02-20 20:00:00     NaN      2765.937979
8197 2001-02-20 21:00:00     NaN      2766.084633
8198 2001-02-20 22:00:00     NaN      2765.350804
8199 2001-02-20 23:00:00     NaN      2765.454125
8200 2001-02-21 00:00:00     NaN         5.559586
8201 2001-02-21 01:00:00     NaN       126.079489
8202 2001-02-21 02:00:00     NaN       245.739675
8203 2001-02-21 03:00:00     NaN       365.750328
8204 2001-02-21 04:00:00     NaN       485.574424
8205 2001-02-21 05:00:00     NaN       605.572598
8206 2001-02-21 06:00:00     NaN       725.533747
8207 2001-02-21 07:00:00     NaN       845.599470
8208 2001-02-21 08:00:00     NaN      2765.580942
8209 2001-02-21 09:00:00     NaN      2765.646820
8210 2001-02-21 10:00:00     NaN      2765.298076
8211 2001-02-21 11:00:00     NaN      2765.833497
8212 2001-02-21 12:00:00     NaN      2765.616253
8213 2001-02-21 13:00:00     NaN      2765.786607
8214 2001-02-21 14:00:00     NaN      2765.507797
8215 2001-02-21 15:00:00     NaN      2765.362897


<ModelInfo>
{
    "Signal": {
        "Dataset": {
            "Signal": "Signal",
            "Time": {
                "Horizon": 24,
                "TimeMinMax": [
                    "2000-03-16 08:00:00",
                    "2001-02-20 15:00:00"
                ],
                "TimeVariable": "Time_Hourly"
            },
            "Training_Signal_Length": 8192
        },
        "Model": {
            "AR_Model": "NoAR",
            "Best_Decomposition": "_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR",
            "Cycle": "Seasonal_HourOfWeek",
            "Signal_Decomposition_Type": "T+S+R",
            "Signal_Transoformation": "NoTransf",
            "Trend": "Lag1Trend"
        },
        "Model_Performance": {
            "COMPLEXITY": 170.0,
            "CRPS": 334.0548346110802,
            "LnQ": 24.031898178441754,
            "MAE": 1.150148736371312,
            "MAPE": 0.0418,
            "MASE": 0.0058,
            "MedAE": 0.9825528449611056,
            "RMSE": 1.4379194685320695
        }
    }
}
</ModelInfo>




<Forecast>
INFO:pyaf.timing:('OPERATION_START', ('PLOTTING', {'Signals': ['Signal']}))
{"Time_Hourly":{"8168":"2001-02-19T16:00:00.000Z","8169":"2001-02-19T17:00:00.000Z","8170":"2001-02-19T18:00:00.000Z","8171":"2001-02-19T19:00:00.000Z","8172":"2001-02-19T20:00:00.000Z","8173":"2001-02-19T21:00:00.000Z","8174":"2001-02-19T22:00:00.000Z","8175":"2001-02-19T23:00:00.000Z","8176":"2001-02-20T00:00:00.000Z","8177":"2001-02-20T01:00:00.000Z","8178":"2001-02-20T02:00:00.000Z","8179":"2001-02-20T03:00:00.000Z","8180":"2001-02-20T04:00:00.000Z","8181":"2001-02-20T05:00:00.000Z","8182":"2001-02-20T06:00:00.000Z","8183":"2001-02-20T07:00:00.000Z","8184":"2001-02-20T08:00:00.000Z","8185":"2001-02-20T09:00:00.000Z","8186":"2001-02-20T10:00:00.000Z","8187":"2001-02-20T11:00:00.000Z","8188":"2001-02-20T12:00:00.000Z","8189":"2001-02-20T13:00:00.000Z","8190":"2001-02-20T14:00:00.000Z","8191":"2001-02-20T15:00:00.000Z","8192":"2001-02-20T16:00:00.000Z","8193":"2001-02-20T17:00:00.000Z","8194":"2001-02-20T18:00:00.000Z","8195":"2001-02-20T19:00:00.000Z","8196":"2001-02-20T20:00:00.000Z","8197":"2001-02-20T21:00:00.000Z","8198":"2001-02-20T22:00:00.000Z","8199":"2001-02-20T23:00:00.000Z","8200":"2001-02-21T00:00:00.000Z","8201":"2001-02-21T01:00:00.000Z","8202":"2001-02-21T02:00:00.000Z","8203":"2001-02-21T03:00:00.000Z","8204":"2001-02-21T04:00:00.000Z","8205":"2001-02-21T05:00:00.000Z","8206":"2001-02-21T06:00:00.000Z","8207":"2001-02-21T07:00:00.000Z","8208":"2001-02-21T08:00:00.000Z","8209":"2001-02-21T09:00:00.000Z","8210":"2001-02-21T10:00:00.000Z","8211":"2001-02-21T11:00:00.000Z","8212":"2001-02-21T12:00:00.000Z","8213":"2001-02-21T13:00:00.000Z","8214":"2001-02-21T14:00:00.000Z","8215":"2001-02-21T15:00:00.000Z"},"Signal":{"8168":6.1828044847,"8169":4.8593202407,"8170":4.4581210597,"8171":4.6720669544,"8172":5.377316142,"8173":4.6057202027,"8174":3.948168777,"8175":4.488278897,"8176":5.2411256911,"8177":125.8410141926,"8178":245.3992971332,"8179":366.5652340139,"8180":485.1510918179,"8181":604.8075931922,"8182":725.8816710308,"8183":845.5407126867,"8184":2764.9860840606,"8185":2764.7994054131,"8186":2765.9182146446,"8187":2766.3021914065,"8188":2764.9340494532,"8189":2765.2337239728,"8190":2764.2087054952,"8191":2765.519654915,"8192":null,"8193":null,"8194":null,"8195":null,"8196":null,"8197":null,"8198":null,"8199":null,"8200":null,"8201":null,"8202":null,"8203":null,"8204":null,"8205":null,"8206":null,"8207":null,"8208":null,"8209":null,"8210":null,"8211":null,"8212":null,"8213":null,"8214":null,"8215":null},"Signal_Forecast":{"8168":4.7568197991,"8169":6.2516331715,"8170":4.6983884696,"8171":4.8033406504,"8172":4.8238037823,"8173":5.0629456946,"8174":4.8434754503,"8175":3.7910723086,"8176":4.67502098,"8177":125.1269984621,"8178":245.7693809284,"8179":365.2128689339,"8180":486.5275734263,"8181":605.2779639012,"8182":724.9320405267,"8183":845.6869139853,"8184":2765.3843930037,"8185":2764.940695707,"8186":2764.7885457023,"8187":2765.8862733966,"8188":2766.0582915494,"8189":2764.8242045713,"8190":2765.2946117544,"8191":2764.250191574,"8192":2765.4687642017,"8193":2766.0974371052,"8194":2765.7755473446,"8195":2765.8340840053,"8196":2765.937979064,"8197":2766.0846326842,"8198":2765.3508043131,"8199":2765.4541251788,"8200":5.5595863587,"8201":126.0794885979,"8202":245.7396751966,"8203":365.7503277509,"8204":485.5744240556,"8205":605.5725983123,"8206":725.5337474725,"8207":845.5994702196,"8208":2765.5809422814,"8209":2765.6468195196,"8210":2765.2980755575,"8211":2765.8334966302,"8212":2765.6162534785,"8213":2765.7866070331,"8214":2765.5077965936,"8215":2765.3628967163}}
</Forecast>


INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.95, ('PLOTTING', {'Signals': ['Signal']}))
