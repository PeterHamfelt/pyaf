INFO:pyaf.std:START_TRAINING 'signal'
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '['signal']' 0.957587718963623
INFO:pyaf.std:START_FORECASTING '['signal']'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  '['signal']' 0.013225793838500977
INFO:pyaf.std:START_TRAINING 'signal'
ConstantTrend + NoCycle + NoAR
PERFS_MAPE_MASE 0.0 None
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
1     1     NaN  ...                      0.54543                      0.54543

[1 rows x 6 columns]
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '['signal']' 0.7906851768493652
INFO:pyaf.std:START_FORECASTING '['signal']'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  '['signal']' 0.024096012115478516
INFO:pyaf.std:START_TRAINING 'signal'
ConstantTrend + NoCycle + NoAR
PERFS_MAPE_MASE 0.0 None
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
1     1     NaN  ...                      0.54543                      0.54543
2     2     NaN  ...                          NaN                          NaN

[2 rows x 6 columns]
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '['signal']' 0.7989597320556641
INFO:pyaf.std:START_FORECASTING '['signal']'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  '['signal']' 0.10203170776367188
INFO:pyaf.std:START_TRAINING 'signal'
ConstantTrend + NoCycle + NoAR
PERFS_MAPE_MASE 0.0 None
Forecasts
     date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
1      1     NaN  ...                      0.54543                      0.54543
2      2     NaN  ...                      0.54543                      0.54543
3      3     NaN  ...                          NaN                          NaN
4      4     NaN  ...                          NaN                          NaN
5      5     NaN  ...                          NaN                          NaN
6      6     NaN  ...                          NaN                          NaN
7      7     NaN  ...                          NaN                          NaN
8      8     NaN  ...                          NaN                          NaN
9      9     NaN  ...                          NaN                          NaN
10    10     NaN  ...                          NaN                          NaN

[10 rows x 6 columns]
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '['signal']' 1.0082907676696777
INFO:pyaf.std:START_FORECASTING '['signal']'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  '['signal']' 0.10757017135620117
INFO:pyaf.std:START_TRAINING 'signal'
ConstantTrend + NoCycle + NoAR
PERFS_MAPE_MASE 0.0 None
Forecasts
     date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
1      1     NaN  ...                      0.54543                      0.54543
2      2     NaN  ...                      0.54543                      0.54543
3      3     NaN  ...                      0.54543                      0.54543
4      4     NaN  ...                      0.54543                      0.54543
5      5     NaN  ...                      0.54543                      0.54543
6      6     NaN  ...                      0.54543                      0.54543
7      7     NaN  ...                      0.54543                      0.54543
8      8     NaN  ...                      0.54543                      0.54543
9      9     NaN  ...                      0.54543                      0.54543
10    10     NaN  ...                      0.54543                      0.54543

[10 rows x 6 columns]
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '['signal']' 1.0246529579162598
INFO:pyaf.std:START_FORECASTING '['signal']'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  '['signal']' 0.04846453666687012
INFO:pyaf.std:START_TRAINING 'signal'
LinearTrend + NoCycle + NoAR
PERFS_MAPE_MASE 0.0353 0.1667
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
2     2     NaN  ...                     0.261244                     0.367896
3     3     NaN  ...                          NaN                          NaN
4     4     NaN  ...                          NaN                          NaN
5     5     NaN  ...                          NaN                          NaN

[4 rows x 6 columns]
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '['signal']' 1.0719420909881592
INFO:pyaf.std:START_FORECASTING '['signal']'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  '['signal']' 0.02603912353515625
INFO:pyaf.std:START_TRAINING 'signal'
LinearTrend + NoCycle + NoAR
PERFS_MAPE_MASE 0.0353 0.1667
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
2     2     NaN  ...                     0.261244                     0.367896
3     3     NaN  ...                     0.107337                     0.213989

[2 rows x 6 columns]
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '['signal']' 1.0684938430786133
INFO:pyaf.std:START_FORECASTING '['signal']'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  '['signal']' 0.014734983444213867
INFO:pyaf.std:START_TRAINING 'signal'
LinearTrend + NoCycle + NoAR
PERFS_MAPE_MASE 0.0353 0.1667
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
2     2     NaN  ...                     0.261244                     0.367896

[1 rows x 6 columns]
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS '['signal']' 0.9917697906494141
INFO:pyaf.std:START_FORECASTING '['signal']'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  '['signal']' 0.07975530624389648
LinearTrend + NoCycle + NoAR
PERFS_MAPE_MASE 0.0353 0.1667
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
2     2     NaN  ...                     0.261244                     0.367896
3     3     NaN  ...                          NaN                          NaN
4     4     NaN  ...                          NaN                          NaN
5     5     NaN  ...                          NaN                          NaN
6     6     NaN  ...                          NaN                          NaN
7     7     NaN  ...                          NaN                          NaN
8     8     NaN  ...                          NaN                          NaN

[7 rows x 6 columns]
