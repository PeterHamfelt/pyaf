INFO:pyaf.std:START_TRAINING 'Signal'
          Time_Hourly  Hour  Day      Signal
0 2000-01-01 00:00:00     0    5    4.456653
1 2000-01-01 01:00:00     1    5  124.272167
2 2000-01-01 02:00:00     2    5  243.899677
3 2000-01-01 03:00:00     3    5  363.253149
4 2000-01-01 04:00:00     4    5  484.235189
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10000 entries, 0 to 9999
Data columns (total 4 columns):
 #   Column       Non-Null Count  Dtype         
---  ------       --------------  -----         
 0   Time_Hourly  10000 non-null  datetime64[ns]
 1   Hour         10000 non-null  int64         
 2   Day          10000 non-null  int64         
 3   Signal       10000 non-null  float64       
dtypes: datetime64[ns](1), float64(1), int64(2)
memory usage: 312.6 KB
None
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_ConstantTrend [('CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfMonth', (0.998, 5)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_DayOfNthWeekOfMonth', (1.0, 35))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_ConstantTrend CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfMonth (0.998, 5)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA RelDiff_Signal_ConstantTrend [('RelDiff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek', (0.202, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST RelDiff_Signal_ConstantTrend RelDiff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek (0.202, 168)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA _Signal_ConstantTrend [('_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek', (0.029, 42)), ('_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek', (0.015, 84)), ('_Signal_ConstantTrend_residue_Seasonal_HourOfWeek', (0.001, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST _Signal_ConstantTrend _Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek (0.029, 42)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_Lag1Trend [('CumSum_Signal_Lag1Trend_residue_Seasonal_HourOfWeek', (0.034, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_Lag1Trend CumSum_Signal_Lag1Trend_residue_Seasonal_HourOfWeek (0.034, 168)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA RelDiff_Signal_Lag1Trend [('RelDiff_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek', (0.971, 42))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST RelDiff_Signal_Lag1Trend RelDiff_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek (0.971, 42)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA RelDiff_Signal_LinearTrend [('RelDiff_Signal_LinearTrend_residue_Seasonal_HourOfWeek', (0.557, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST RelDiff_Signal_LinearTrend RelDiff_Signal_LinearTrend_residue_Seasonal_HourOfWeek (0.557, 168)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA RelDiff_Signal_PolyTrend [('RelDiff_Signal_PolyTrend_residue_Seasonal_HourOfWeek', (0.174, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST RelDiff_Signal_PolyTrend RelDiff_Signal_PolyTrend_residue_Seasonal_HourOfWeek (0.174, 168)
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_Seasonal_FourHourOfWeek_NoAR 4 1.4561
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_Cycle_NoAR 8 58.5553
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_NoCycle_NoAR 0 63.9845
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfMonth_NoAR 36 21.0018
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 36 20.996
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfWeek_NoAR 36 20.9959
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 36 21.8053
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 36 21.8025
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_HourOfWeek_NoAR 36 0.0462
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_Hour_NoAR 36 6.496
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 36 21.8115
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 36 21.7976
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 36 21.8042
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 36 14.5826
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_WeekOfMonth_NoAR 36 21.0015
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_WeekOfYear_NoAR 36 21.0012
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Cycle_None_NoAR 40 20.9912
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_NoCycle_NoAR 32 20.9912
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfMonth_NoAR 20 100.9785
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 20 22.7487
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfWeek_NoAR 20 22.7486
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_EightHourOfWeek_NoAR 20 3.4219
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_FourHourOfWeek_NoAR 20 1.5143
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_HourOfWeek_NoAR 20 0.1458
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_Hour_NoAR 20 58.4586
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_SixHourOfWeek_NoAR 20 2.6307
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 20 1.0625
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 20 5.4524
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 20 0.586
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_WeekOfMonth_NoAR 20 103.8498
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_WeekOfYear_NoAR 20 102.323
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Cycle_NoAR 24 58.4586
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_NoCycle_NoAR 16 63.8317
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfMonth_NoAR 20 98.5495
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 20 24.0322
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfWeek_NoAR 20 24.0366
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_EightHourOfWeek_NoAR 20 4.8516
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_FourHourOfWeek_NoAR 20 2.9577
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_HourOfWeek_NoAR 20 2.4376
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_Hour_NoAR 20 57.2415
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_SixHourOfWeek_NoAR 20 4.0614
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 20 2.4535
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 20 6.8678
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 20 2.1218
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_WeekOfMonth_NoAR 20 101.3919
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_WeekOfYear_NoAR 20 100.3674
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Cycle_NoAR 24 57.2415
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_NoCycle_NoAR 16 61.6507
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfMonth_NoAR 36 225.1315
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 36 254.6153
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfWeek_NoAR 36 254.5105
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_EightHourOfWeek_NoAR 36 11748.5175
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_FourHourOfWeek_NoAR 36 11742.826
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_HourOfWeek_NoAR 36 103.4672
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_Hour_NoAR 36 74.3769
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_SixHourOfWeek_NoAR 36 13204.6453
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_ThreeHourOfWeek_NoAR 36 13211.0036
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_TwelveHourOfWeek_NoAR 36 17502.939
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_TwoHourOfWeek_NoAR 36 5601.7391
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_WeekOfMonth_NoAR 36 227.7956
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_WeekOfYear_NoAR 36 224.6606
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Cycle_None_NoAR 40 117.8381
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_NoCycle_NoAR 32 117.8381
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfMonth_NoAR 68 30.9736
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 68 27.5275
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfWeek_NoAR 68 30.2625
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 68 33.7127
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 68 37.5192
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_HourOfWeek_NoAR 68 0.9268
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_Hour_NoAR 68 11.5093
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 68 32.4282
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 68 35.5219
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 68 34.4099
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 68 21.4238
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_WeekOfMonth_NoAR 68 30.6462
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_WeekOfYear_NoAR 68 30.0076
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Cycle_None_NoAR 72 20.9912
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_NoCycle_NoAR 64 20.9912
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfMonth_NoAR 52 221.1907
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 253.7118
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfWeek_NoAR 52 251.2084
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 11742.1026
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 11736.6131
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_HourOfWeek_NoAR 52 117.0409
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_Hour_NoAR 52 82.4412
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 13196.4627
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 13204.0483
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 17495.2727
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 5593.5514
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 217.5308
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_WeekOfYear_NoAR 52 210.9118
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Cycle_None_NoAR 56 106.986
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_NoCycle_NoAR 48 106.986
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfMonth_NoAR 52 356.8493
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 386.9664
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfWeek_NoAR 52 386.6856
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 11834.3501
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 11835.7354
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_HourOfWeek_NoAR 52 52.4716
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_Hour_NoAR 52 60.6393
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 13284.3551
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 13299.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 17580.6258
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 5692.5056
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 355.1369
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_WeekOfYear_NoAR 52 278.4233
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Cycle_None_NoAR 56 204.1323
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_NoCycle_NoAR 48 204.1323
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_Seasonal_HourOfWeek_NoAR 36 0.9157
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_Cycle_NoAR 40 1.0343
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_NoCycle_NoAR 32 12321455.7201
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 68 12321456.5758
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Cycle_None_NoAR 72 20.9912
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_NoCycle_NoAR 64 20.9912
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_HourOfWeek_NoAR 52 12321456.5751
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Cycle_NoAR 56 12321456.6779
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_NoCycle_NoAR 48 12321455.7201
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_HourOfWeek_NoAR 52 12321455.7201
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Cycle_NoAR 56 12321457.6277
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_NoCycle_NoAR 48 12321455.7201
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_Seasonal_WeekOfMonth_NoAR 36 582.4111
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_Cycle_None_NoAR 40 1.0
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_NoCycle_NoAR 32 1.0
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_Seasonal_HourOfWeek_NoAR 68 0.0466
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_Cycle_None_NoAR 72 20.9912
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_NoCycle_NoAR 64 20.9912
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_DayOfMonth_NoAR 52 74.9804
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 138.3559
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_DayOfWeek_NoAR 52 138.165
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 92.969
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 80.3657
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_HourOfWeek_NoAR 52 0.3017
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_Hour_NoAR 52 50.3773
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 91.9481
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 72.2386
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 95.5608
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 53.3799
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 64.1034
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_WeekOfYear_NoAR 52 65.4258
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Cycle_None_NoAR 56 64.0441
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_NoCycle_NoAR 48 64.0441
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfMonth_NoAR 52 84.4858
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 142.8881
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfWeek_NoAR 52 133.9982
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 91.386
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 79.6616
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_HourOfWeek_NoAR 52 5.285
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_Hour_NoAR 52 49.5692
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 90.0259
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 71.9485
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 91.5078
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 54.6846
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 61.0161
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_WeekOfYear_NoAR 52 79.6124
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Cycle_NoAR 56 59.667
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_NoCycle_NoAR 48 59.5943
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'Signal' 14.250081777572632
INFO:pyaf.std:TIME_DETAIL TimeVariable='Time_Hourly' TimeMin=2000-01-01T00:00:00.000000 TimeMax=2000-11-28T11:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=24
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal' Length=10000  Min=1.2150149661786065 Max=2768.7243464387643  Mean=1699.2534885837156 StdDev=1243.6205864314752
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_Signal' Min=1.2150149661786065 Max=2768.7243464387643  Mean=1699.2534885837156 StdDev=1243.6205864314752
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR' [Lag1Trend + Seasonal_HourOfWeek + NoAR]
INFO:pyaf.std:TREND_DETAIL '_Signal_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek' [Seasonal_HourOfWeek]
INFO:pyaf.std:AUTOREG_DETAIL '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1206 MAPE_Forecast=0.0462 MAPE_Test=0.0766
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0417 SMAPE_Forecast=0.0436 SMAPE_Test=0.073
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.0073 MASE_Forecast=0.0059 MASE_Test=0.0087
INFO:pyaf.std:MODEL_L1 L1_Fit=1.4474096860140742 L1_Forecast=1.1660289993431845 L1_Test=1.0444827927881575
INFO:pyaf.std:MODEL_L2 L2_Fit=30.93002597360549 L2_Forecast=1.4699260802789946 L2_Test=1.2803051652953956
INFO:pyaf.std:MODEL_COMPLEXITY 36
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 4.456652807966609
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:SEASONAL_MODEL_VALUES _Signal_Lag1Trend_residue_Seasonal_HourOfWeek 0.6623713096023494 {120: -2760.176105821167, 121: 120.1824852933079, 122: 120.24802954022869, 123: 119.67120242069049, 124: 120.17917330830764, 125: 120.18877924591729, 126: 120.05619596728616, 127: 119.87743335989495, 128: 1920.536237176489, 129: -0.2594222459097182, 130: -0.09181574930607894, 131: -0.05694632302129321, 132: 0.029784989114432392, 133: 0.25230534888555667, 134: -0.21993753891388224, 135: 0.35446263806238676, 136: 0.0358075976055261, 137: -0.4227867709880684, 138: 0.4358413261347778, 139: -0.11599678511174716, 140: -0.1091741617626667, 141: 0.17217108703539452, 142: 0.16091060541407387, 143: 0.029857570548756485, 144: -2760.542103705307, 145: 119.94142778295378, 146: 119.51784291115837, 147: 120.04143005807911, 148: 120.01088281851162, 149: 120.03540295111199, 150: 120.00085512838433, 151: 120.35616228115379, 152: 1919.1370081839623, 153: 0.31005466171654916, 154: -0.07134791990347367, 155: 0.017247085424969555, 156: 0.03772121463862277, 157: -0.12472325752742108, 158: -0.12662713797590186, 159: -0.36340696636921166, 160: 0.34536336252426736, 161: 0.031145601855541827, 162: -0.21348793149354606, 163: 0.22849662464250287, 164: -0.28788248318664955, 165: -0.03905344240683917, 166: -0.12367503807649882, 167: 0.12679499192677213, 0: -2759.7117683172287, 1: -0.20780391742565207, 2: 0.3664365018554787, 3: -0.4896395122502688, 4: 0.25014809429899154, 5: -0.1804871452671737, 6: -0.05876123796808175, 7: 0.2370236904519607, 8: 0.1973167667930209, 9: -0.3065955229539794, 10: 0.04923109152656879, 11: 0.22992214097619756, 12: -0.13344182994267761, 13: -0.15219067181519508, 14: 0.21041223759603334, 15: -0.08684747670347726, 16: -0.1639239416380911, 17: 0.2338727793536326, 18: -0.04665906389595609, 19: 0.13054594779704853, 20: -0.16774766180304734, 21: -0.3121720716353149, 22: 0.34263623671076004, 23: -0.2082583190849987, 24: -0.1817609118489072, 25: 120.26753598506745, 26: 119.98339506031513, 27: 120.07657450418652, 28: 120.24817687715472, 29: 119.94131082122897, 30: 119.71065668683684, 31: 120.09816694350764, 32: 1919.7263244549008, 33: 0.024723806399606474, 34: -0.056724036851846904, 35: -0.4250028924891467, 36: -0.01856565625530493, 37: 0.29070550345932133, 38: -0.16425755824548105, 39: 0.08743033563723657, 40: 0.09052195431831933, 41: 0.0734310646148515, 42: -0.5391946723407273, 43: 0.11305710916894895, 44: 0.14768657277500097, 45: 0.10581233024186076, 46: -0.17402843906256749, 47: 0.20145518251183603, 48: -2759.762184445761, 49: 119.82296193993504, 50: 119.90629494178944, 51: 120.2429698987541, 52: 119.95973002094189, 53: 120.43535010301622, 54: 119.77572523627964, 55: 119.91318725562496, 56: 1919.989524307985, 57: 0.1915034639678197, 58: -0.2532743058213782, 59: 0.4329782147760852, 60: -0.28528493437625, 61: 0.3388121199673151, 62: 0.0361428337992038, 63: -0.047407818468400365, 64: -0.1647085286381298, 65: 0.03799602312165007, 66: 0.0912365794138168, 67: 0.2212391753423617, 68: -0.11212291482024739, 69: 0.11971321019655079, 70: -0.1320143372909115, 71: 0.26504963368552126, 72: -2759.874163757539, 73: 119.8992131416736, 74: 119.6821189476461, 75: 120.34559215561816, 76: 120.14290751627135, 77: 120.27550004585964, 78: 119.94712399277125, 79: 120.46481810902594, 80: 1920.1410237314258, 81: -0.2206048120142441, 82: 0.16470553918588848, 83: -0.07219855474158976, 84: -0.46530009756361324, 85: 0.3620749124943359, 86: -0.19879202226320558, 87: 0.06778916594021211, 88: 0.07010795879386933, 89: -0.14173526167587625, 90: 0.891133062296376, 91: -0.3817159956333853, 92: 0.11229279856797802, 93: 0.5094274594257513, 94: -0.9865468704997511, 95: 0.1409569752772768, 96: -2759.948948252807, 97: 120.23913776726695, 98: 119.99858720922886, 99: 120.01336895705708, 100: 119.72867661240997, 101: 120.04992221762888, 102: 120.06044450224238, 103: 119.95552511298126, 104: 1920.081071838105, 105: 0.3176843632809323, 106: -0.09220708103612196, 107: -0.2947049106956001, 108: 0.11899344008270418, 109: -0.010194810995926673, 110: 0.17602718576426923, 111: -0.09804870998095794, 112: 0.41644098312508504, 113: -0.5287875779254136, 114: -0.07997019745744183, 115: -0.045977568044691, 116: 0.17879130267237997, 117: -0.22552429365714488, 118: -0.06435403936575312, 119: 0.02801487836677552}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:START_FORECASTING 'Signal'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  'Signal' 0.6993870735168457
INFO:pyaf.std:START_PLOTTING
INFO:pyaf.std:END_PLOTTING_TIME_IN_SECONDS 4.881337881088257
  Split Transformation  ... TestMAPE TestMASE
0  None        _Signal  ...   0.0766   0.0087
1  None  CumSum_Signal  ...   0.0690   0.0089

[2 rows x 20 columns]
  Split Transformation  ... TestMAPE TestMASE
0  None        _Signal  ...   0.0766   0.0087
1  None  CumSum_Signal  ...   0.0690   0.0089
2  None        _Signal  ...   0.3779   0.0391
3  None  CumSum_Signal  ...   0.0774   0.0806
4  None        _Signal  ...   1.2592   0.1921

[5 rows x 20 columns]
Forecast Columns  Index(['Time_Hourly', 'Signal', 'row_number', 'Time_Hourly_Normalized',
       '_Signal', '_Signal_Lag1Trend', '_Signal_Lag1Trend_residue',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR_residue',
       '_Signal_Trend', '_Signal_Trend_residue', '_Signal_Cycle',
       '_Signal_Cycle_residue', '_Signal_AR', '_Signal_AR_residue',
       '_Signal_TransformedForecast', 'Signal_Forecast',
       '_Signal_TransformedResidue', 'Signal_Residue',
       'Signal_Forecast_Lower_Bound', 'Signal_Forecast_Upper_Bound'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10024 entries, 0 to 10023
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Time_Hourly      10024 non-null  datetime64[ns]
 1   Signal           10000 non-null  float64       
 2   Signal_Forecast  10024 non-null  float64       
dtypes: datetime64[ns](1), float64(2)
memory usage: 235.1 KB
None
Forecasts
               Time_Hourly  Signal  Signal_Forecast
10000 2001-02-20 16:00:00     NaN      2764.978216
10001 2001-02-20 17:00:00     NaN      2765.051647
10002 2001-02-20 18:00:00     NaN      2764.512452
10003 2001-02-20 19:00:00     NaN      2764.625509
10004 2001-02-20 20:00:00     NaN      2764.773196
10005 2001-02-20 21:00:00     NaN      2764.879008
10006 2001-02-20 22:00:00     NaN      2764.704980
10007 2001-02-20 23:00:00     NaN      2764.906435
10008 2001-02-21 00:00:00     NaN         5.144250
10009 2001-02-21 01:00:00     NaN       124.967212
10010 2001-02-21 02:00:00     NaN       244.873507
10011 2001-02-21 03:00:00     NaN       365.116477
10012 2001-02-21 04:00:00     NaN       485.076207
10013 2001-02-21 05:00:00     NaN       605.511557
10014 2001-02-21 06:00:00     NaN       725.287282
10015 2001-02-21 07:00:00     NaN       845.200470
10016 2001-02-21 08:00:00     NaN      2765.189994
10017 2001-02-21 09:00:00     NaN      2765.381497
10018 2001-02-21 10:00:00     NaN      2765.128223
10019 2001-02-21 11:00:00     NaN      2765.561201
10020 2001-02-21 12:00:00     NaN      2765.275916
10021 2001-02-21 13:00:00     NaN      2765.614729
10022 2001-02-21 14:00:00     NaN      2765.650871
10023 2001-02-21 15:00:00     NaN      2765.603464


<ModelInfo>
{
    "Dataset": {
        "Signal": "Signal",
        "Time": {
            "Horizon": 24,
            "TimeMinMax": [
                "2000-01-01 00:00:00",
                "2001-02-20 15:00:00"
            ],
            "TimeVariable": "Time_Hourly"
        },
        "Training_Signal_Length": 10000
    },
    "Model": {
        "AR_Model": "NoAR",
        "Best_Decomposition": "_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR",
        "Cycle": "Seasonal_HourOfWeek",
        "Signal_Transoformation": "NoTransf",
        "Trend": "Lag1Trend"
    },
    "Model_Performance": {
        "COMPLEXITY": "36",
        "MAE": "1.1660289993431845",
        "MAPE": "0.0462",
        "MASE": "0.0059",
        "RMSE": "1.4699260802789946"
    }
}
</ModelInfo>




<Forecast>
{"Time_Hourly":{"9976":"2001-02-19T16:00:00.000Z","9977":"2001-02-19T17:00:00.000Z","9978":"2001-02-19T18:00:00.000Z","9979":"2001-02-19T19:00:00.000Z","9980":"2001-02-19T20:00:00.000Z","9981":"2001-02-19T21:00:00.000Z","9982":"2001-02-19T22:00:00.000Z","9983":"2001-02-19T23:00:00.000Z","9984":"2001-02-20T00:00:00.000Z","9985":"2001-02-20T01:00:00.000Z","9986":"2001-02-20T02:00:00.000Z","9987":"2001-02-20T03:00:00.000Z","9988":"2001-02-20T04:00:00.000Z","9989":"2001-02-20T05:00:00.000Z","9990":"2001-02-20T06:00:00.000Z","9991":"2001-02-20T07:00:00.000Z","9992":"2001-02-20T08:00:00.000Z","9993":"2001-02-20T09:00:00.000Z","9994":"2001-02-20T10:00:00.000Z","9995":"2001-02-20T11:00:00.000Z","9996":"2001-02-20T12:00:00.000Z","9997":"2001-02-20T13:00:00.000Z","9998":"2001-02-20T14:00:00.000Z","9999":"2001-02-20T15:00:00.000Z","10000":"2001-02-20T16:00:00.000Z","10001":"2001-02-20T17:00:00.000Z","10002":"2001-02-20T18:00:00.000Z","10003":"2001-02-20T19:00:00.000Z","10004":"2001-02-20T20:00:00.000Z","10005":"2001-02-20T21:00:00.000Z","10006":"2001-02-20T22:00:00.000Z","10007":"2001-02-20T23:00:00.000Z","10008":"2001-02-21T00:00:00.000Z","10009":"2001-02-21T01:00:00.000Z","10010":"2001-02-21T02:00:00.000Z","10011":"2001-02-21T03:00:00.000Z","10012":"2001-02-21T04:00:00.000Z","10013":"2001-02-21T05:00:00.000Z","10014":"2001-02-21T06:00:00.000Z","10015":"2001-02-21T07:00:00.000Z","10016":"2001-02-21T08:00:00.000Z","10017":"2001-02-21T09:00:00.000Z","10018":"2001-02-21T10:00:00.000Z","10019":"2001-02-21T11:00:00.000Z","10020":"2001-02-21T12:00:00.000Z","10021":"2001-02-21T13:00:00.000Z","10022":"2001-02-21T14:00:00.000Z","10023":"2001-02-21T15:00:00.000Z"},"Signal":{"9976":4.0857221119,"9977":5.6063011317,"9978":6.283969738,"9979":5.8754277854,"9980":4.3282822352,"9981":5.0514153654,"9982":5.0620335406,"9983":3.9309889767,"9984":2.7345501784,"9985":124.5788661671,"9986":245.4698844624,"9987":363.8164254582,"9988":485.2723954991,"9989":604.75475933,"9990":725.0881387169,"9991":846.15531157,"9992":2763.7399407927,"9993":2763.6423496016,"9994":2766.9764703123,"9995":2764.3155877412,"9996":2764.2423217989,"9997":2765.1606342195,"9998":2765.4300913813,"9999":2764.8876935901,"10000":null,"10001":null,"10002":null,"10003":null,"10004":null,"10005":null,"10006":null,"10007":null,"10008":null,"10009":null,"10010":null,"10011":null,"10012":null,"10013":null,"10014":null,"10015":null,"10016":null,"10017":null,"10018":null,"10019":null,"10020":null,"10021":null,"10022":null,"10023":null},"Signal_Forecast":{"9976":4.8095118281,"9977":4.3195948912,"9978":5.5596420678,"9979":6.4145156858,"9980":5.7076801236,"9981":4.0161101636,"9982":5.3940516021,"9983":4.8537752215,"9984":3.7492280648,"9985":123.0020861635,"9986":244.5622612274,"9987":365.5464589666,"9988":484.0646023354,"9989":605.2137063203,"9990":724.4654160169,"9991":845.1863056604,"9992":2765.8816360249,"9993":2763.764664599,"9994":2763.5856255647,"9995":2766.5514674198,"9996":2764.2970220849,"9997":2764.5330273024,"9998":2764.9963766613,"9999":2765.517521717,"10000":2764.9782155444,"10001":2765.051646609,"10002":2764.5124519367,"10003":2764.6255090459,"10004":2764.7731956186,"10005":2764.8790079489,"10006":2764.7049795098,"10007":2764.9064346923,"10008":5.1442502466,"10009":124.9672121865,"10010":244.8735071283,"10011":365.1164770271,"10012":485.076207048,"10013":605.511557151,"10014":725.2872823873,"10015":845.2004696429,"10016":2765.1899939509,"10017":2765.3814974149,"10018":2765.1282231091,"10019":2765.5612013238,"10020":2765.2759163895,"10021":2765.6147285094,"10022":2765.6508713432,"10023":2765.6034635248}}
</Forecast>


