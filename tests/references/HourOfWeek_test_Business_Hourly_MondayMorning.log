INFO:pyaf.std:START_TRAINING 'Signal'
          Time_Hourly  Hour  Day      Signal
0 2000-01-01 00:00:00     0    5    6.121721
1 2000-01-01 01:00:00     1    5  125.785534
2 2000-01-01 02:00:00     2    5  245.076740
3 2000-01-01 03:00:00     3    5  363.894694
4 2000-01-01 04:00:00     4    5  484.793459
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10000 entries, 0 to 9999
Data columns (total 4 columns):
 #   Column       Non-Null Count  Dtype         
---  ------       --------------  -----         
 0   Time_Hourly  10000 non-null  datetime64[ns]
 1   Hour         10000 non-null  int64         
 2   Day          10000 non-null  int64         
 3   Signal       10000 non-null  float64       
dtypes: datetime64[ns](1), float64(1), int64(2)
memory usage: 312.6 KB
None
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_ConstantTrend [('CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfMonth', (0.955, 11)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_DayOfNthWeekOfMonth', (0.951, 66))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_ConstantTrend CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfMonth (0.955, 11)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA _Signal_ConstantTrend [('_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek', (0.029, 42)), ('_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek', (0.015, 84)), ('_Signal_ConstantTrend_residue_Seasonal_HourOfWeek', (0.001, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST _Signal_ConstantTrend _Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek (0.029, 42)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_Lag1Trend [('CumSum_Signal_Lag1Trend_residue_Seasonal_HourOfWeek', (0.03, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_Lag1Trend CumSum_Signal_Lag1Trend_residue_Seasonal_HourOfWeek (0.03, 168)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA RelDiff_Signal_ConstantTrend [('RelDiff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek', (0.084, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST RelDiff_Signal_ConstantTrend RelDiff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek (0.084, 168)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA _Signal_Lag1Trend [('_Signal_Lag1Trend_residue_Seasonal_HourOfWeek', (0.988, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST _Signal_Lag1Trend _Signal_Lag1Trend_residue_Seasonal_HourOfWeek (0.988, 168)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA _Signal_LinearTrend [('_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek', (0.031, 42)), ('_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek', (0.017, 84)), ('_Signal_LinearTrend_residue_Seasonal_HourOfWeek', (0.004, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST _Signal_LinearTrend _Signal_LinearTrend_residue_Seasonal_FourHourOfWeek (0.031, 42)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA _Signal_PolyTrend [('_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek', (0.102, 21)), ('_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek', (0.07, 42)), ('_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek', (0.054, 84)), ('_Signal_PolyTrend_residue_Seasonal_HourOfWeek', (0.053, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST _Signal_PolyTrend _Signal_PolyTrend_residue_Seasonal_EightHourOfWeek (0.102, 21)
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_Seasonal_FourHourOfWeek_NoAR 4 1.4008
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_Cycle_NoAR 8 58.0122
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_NoCycle_NoAR 0 64.0445
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_HourOfWeek_NoAR 36 0.0441
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Cycle_None_NoAR 40 21.0111
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_NoCycle_NoAR 32 21.0111
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_FourHourOfWeek_NoAR 20 1.4598
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Cycle_NoAR 24 57.9171
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_NoCycle_NoAR 16 63.8915
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_EightHourOfWeek_NoAR 20 4.7253
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Cycle_NoAR 24 56.7168
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_NoCycle_NoAR 16 61.7243
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfMonth_NoAR 36 228.5941
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 36 252.0164
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfWeek_NoAR 36 251.6191
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_EightHourOfWeek_NoAR 36 11740.1147
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_FourHourOfWeek_NoAR 36 11735.0868
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_HourOfWeek_NoAR 36 103.6016
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_Hour_NoAR 36 79.5147
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_SixHourOfWeek_NoAR 36 13189.5771
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_ThreeHourOfWeek_NoAR 36 13203.063
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_TwelveHourOfWeek_NoAR 36 17489.9586
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_TwoHourOfWeek_NoAR 36 5590.0634
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_WeekOfMonth_NoAR 36 231.0071
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_WeekOfYear_NoAR 36 230.9725
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Cycle_None_NoAR 40 117.6537
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_NoCycle_NoAR 32 117.6537
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfMonth_NoAR 68 22.0028
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 68 23.4149
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfWeek_NoAR 68 24.0666
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 68 24.6391
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 68 25.6449
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_HourOfWeek_NoAR 68 3.497
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_Hour_NoAR 68 8.252
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 68 21.4134
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 68 26.589
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 68 23.0974
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 68 25.3754
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_WeekOfMonth_NoAR 68 21.8522
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_WeekOfYear_NoAR 68 22.4508
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Cycle_None_NoAR 72 21.0111
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_NoCycle_NoAR 64 21.0111
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfMonth_NoAR 52 219.0725
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 240.4464
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfWeek_NoAR 52 242.8117
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 11729.5201
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 11728.3433
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_HourOfWeek_NoAR 52 114.5364
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_Hour_NoAR 52 89.204
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 13179.4475
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 13195.3613
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 17479.2426
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 5580.6932
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 221.3786
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_WeekOfYear_NoAR 52 217.3035
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Cycle_None_NoAR 56 106.9198
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_NoCycle_NoAR 48 106.9198
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfMonth_NoAR 52 348.0601
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 371.9185
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfWeek_NoAR 52 381.4923
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 11838.3994
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 11838.2958
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_HourOfWeek_NoAR 52 50.37
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_Hour_NoAR 52 61.7246
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 13283.4624
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 13306.1401
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 17578.2334
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 5676.2875
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 345.5369
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_WeekOfYear_NoAR 52 283.3691
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Cycle_None_NoAR 56 202.3236
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_NoCycle_NoAR 48 202.3236
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_Seasonal_HourOfWeek_NoAR 36 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_Cycle_NoAR 40 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_NoCycle_NoAR 32 17682070.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfMonth_NoAR 68 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 68 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfWeek_NoAR 68 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 68 17682071.3748
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 68 17682071.3748
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_HourOfWeek_NoAR 68 17682071.3493
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_Hour_NoAR 68 17682071.4763
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 68 17682071.3748
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 68 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 68 17682071.3748
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 68 17682071.3462
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_WeekOfMonth_NoAR 68 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_WeekOfYear_NoAR 68 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Cycle_None_NoAR 72 21.0111
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_NoCycle_NoAR 64 21.0111
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfMonth_NoAR 52 21295.8822
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfWeek_NoAR 52 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 17682070.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 17682070.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_HourOfWeek_NoAR 52 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_Hour_NoAR 52 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 17682070.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 17682070.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 17682070.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 17682070.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 12499.2922
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_WeekOfYear_NoAR 52 7628189.9123
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Cycle_NoAR 56 0.9439
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_NoCycle_NoAR 48 17682070.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfMonth_NoAR 52 9875775.2054
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 6248263.2168
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfWeek_NoAR 52 9234228.8484
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 13624913.5178
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 17682070.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_HourOfWeek_NoAR 52 17682071.4303
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_Hour_NoAR 52 17682071.3431
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 15400656.1838
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 17682070.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 15256815.5411
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 17682070.4019
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 7840017.8324
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_WeekOfYear_NoAR 52 1463270.0149
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Cycle_NoAR 56 17682071.3431
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_NoCycle_NoAR 48 17682070.3957
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_Seasonal_WeekOfMonth_NoAR 36 1953.0823
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_Cycle_None_NoAR 40 1.0
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_NoCycle_NoAR 32 1.0
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_Seasonal_HourOfWeek_NoAR 68 0.0438
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_Cycle_None_NoAR 72 21.0111
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_NoCycle_NoAR 64 21.0111
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_DayOfMonth_NoAR 52 74.3654
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 137.9942
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_DayOfWeek_NoAR 52 137.5306
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 94.4477
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 81.2707
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_HourOfWeek_NoAR 52 0.2897
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_Hour_NoAR 52 50.028
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 90.8372
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 72.4233
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 96.7457
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 53.4462
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 66.3447
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_WeekOfYear_NoAR 52 65.8258
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Cycle_None_NoAR 56 64.1043
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_NoCycle_NoAR 48 64.1043
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfMonth_NoAR 52 85.5961
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 138.9421
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfWeek_NoAR 52 133.1609
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 92.9714
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 80.5506
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_HourOfWeek_NoAR 52 5.2358
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_Hour_NoAR 52 49.1163
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 88.8987
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 72.137
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 92.4998
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 54.7128
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 61.4928
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_WeekOfYear_NoAR 52 81.3893
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Cycle_NoAR 56 59.8565
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_NoCycle_NoAR 48 59.6805
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'Signal' 15.910324096679688
INFO:pyaf.std:TIME_DETAIL TimeVariable='Time_Hourly' TimeMin=2000-01-01T00:00:00.000000 TimeMax=2000-11-28T11:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=24
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal' Length=10000  Min=1.4740748457889126 Max=2768.7963525507244  Mean=1699.2578230341028 StdDev=1243.5933209377015
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_Signal' Min=1.4740748457889126 Max=2768.7963525507244  Mean=1699.2578230341028 StdDev=1243.5933209377015
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR' [Lag1Trend + Seasonal_HourOfWeek + NoAR]
INFO:pyaf.std:TREND_DETAIL '_Signal_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek' [Seasonal_HourOfWeek]
INFO:pyaf.std:AUTOREG_DETAIL '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1004 MAPE_Forecast=0.0441 MAPE_Test=0.0611
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0417 SMAPE_Forecast=0.0419 SMAPE_Test=0.0595
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.0074 MASE_Forecast=0.0057 MASE_Test=0.0065
INFO:pyaf.std:MODEL_L1 L1_Fit=1.4534973785725713 L1_Forecast=1.1325083922483767 L1_Test=0.7835281937598597
INFO:pyaf.std:MODEL_L2 L2_Fit=30.92584686957863 L2_Forecast=1.4385841496728187 L2_Test=1.0254523930728565
INFO:pyaf.std:MODEL_COMPLEXITY 36
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 6.1217209825692285
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:SEASONAL_MODEL_VALUES _Signal_Lag1Trend_residue_Seasonal_HourOfWeek 0.6658136286016982 {120: -2759.758590552051, 121: 119.93639826868238, 122: 119.87263179489683, 123: 120.03578824540351, 124: 120.32769246762624, 125: 119.92994036132242, 126: 120.32806112384816, 127: 119.81366241637778, 128: 1919.7420559215889, 129: 0.28218774573338123, 130: -0.09283586868355087, 131: -0.11964520008314139, 132: 0.041770834433918935, 133: 0.24186172483314294, 134: 0.0015397937447687582, 135: 0.26011270422554844, 136: 0.09297195075441778, 137: 0.0711454554766533, 138: 0.0591748495403408, 139: -0.5152976054114333, 140: 0.24232851464967098, 141: -0.35482627833494007, 142: -0.01824528466704578, 143: -0.3004355992336514, 144: -2759.4960762694855, 145: 119.77940118290218, 146: 120.40194744324397, 147: 119.76688861973312, 148: 119.90697439225602, 149: 120.66821418063739, 150: 119.85203470843226, 151: 119.84451569122501, 152: 1920.6114709627484, 153: 0.08025512157405501, 154: -0.7073180638140002, 155: 0.4793823674303894, 156: 0.17496921547672173, 157: 0.09265715086485216, 158: -0.12243691985145233, 159: -0.24987106331423092, 160: 0.32357130109721766, 161: 0.21381125554876235, 162: -0.3595112876807889, 163: 0.33427459474614807, 164: -0.1483245245690341, 165: 0.19322439911456968, 166: -0.09452947308272996, 167: -0.11557887852700333, 0: -2760.0558693783178, 1: 0.360556488033827, 2: 0.33220243157606566, 3: -0.5081262238705726, 4: 0.13045152168036767, 5: 0.08748472765445392, 6: 0.3103634772011792, 7: -0.34087005105751533, 8: 0.44917071768874006, 9: 0.0002493689682072642, 10: -0.1983634250290338, 11: -0.05289609655547478, 12: 0.12224488151896473, 13: -0.18160349827496303, 14: 0.22840887132398224, 15: -0.26656827213750134, 16: 0.16615389358328647, 17: -0.4123509485160799, 18: 0.4905833278216396, 19: -0.30481175735697974, 20: -0.14780117690482886, 21: -0.10280379012314755, 22: -0.03375345896417503, 23: 0.06186257914288751, 24: 0.022934457490948468, 25: 119.82265027099135, 26: 120.33081986796032, 27: 119.7284082021925, 28: 119.96668962421361, 29: 120.36052052451731, 30: 120.30856783997433, 31: 119.65650566273888, 32: 1920.082422997682, 33: -0.2034349279849721, 34: 0.16640143214317504, 35: -0.05666892748445207, 36: -0.28917723419044705, 37: -0.02866817690392054, 38: -0.1114133250980558, 39: -0.06054882807939066, 40: -0.23317428155132802, 41: -0.1861850854406839, 42: 0.47753333935997944, 43: -0.2397176956937983, 44: -0.22992282831546618, 45: 0.17797706846522487, 46: 0.13343099105077272, 47: 0.34080543281743303, 48: -2760.14854023495, 49: 120.10379446844372, 50: 120.02319414758588, 51: 119.85900026417619, 52: 120.62383827451686, 53: 119.6443207879534, 54: 120.04505234066255, 55: 120.51122641620998, 56: 1920.1587441243569, 57: -0.022459398496721406, 58: 0.005364663881209708, 59: -0.1435336963259033, 60: -0.02553877206219113, 61: -0.09471602653366062, 62: -0.06961299040358426, 63: 0.10533351100366417, 64: -0.0032454241772938985, 65: -0.0868907821668472, 66: 0.27345435969982645, 67: -0.050128791196129896, 68: -0.19159781561756972, 69: 0.18288914784034205, 70: -0.05376355304406388, 71: -0.17545780946784362, 72: -2760.1814387071213, 73: 119.98631480843078, 74: 120.23151635410542, 75: 119.87543731009367, 76: 120.3976164118144, 77: 120.08412934681638, 78: 120.38811922208527, 79: 119.74112783801695, 80: 1919.7535695975785, 81: -0.02023775877069056, 82: 0.30237326756378025, 83: 0.09011288406600215, 84: -0.328747810960067, 85: 0.38590170138741087, 86: -0.2044175912205901, 87: 0.061531058750006196, 88: -0.00919511909432913, 89: -0.11790908478997153, 90: 0.21583004041804088, 91: 0.26351094924029894, 92: -0.12733147402286704, 93: -0.0328302386346877, 94: 0.05987538072395182, 95: -0.2501954472131729, 96: -2760.213036171137, 97: 119.70713863539305, 98: 119.88909407186337, 99: 119.79535190419165, 100: 119.5734266464026, 101: 120.29354728545741, 102: 120.50081549127822, 103: 119.65787970511394, 104: 1920.3741448328333, 105: -0.33573176912159397, 106: 0.3172968749804568, 107: -0.042229033641888236, 108: -0.29335567604266544, 109: -0.10671115040895529, 110: -0.21451051174972235, 111: 0.0021789375400658173, 112: 0.09278195389970278, 113: 0.03974456705964258, 114: -0.5070139807999112, 115: -0.3151004760752585, 116: -0.41782151483357666, 117: 0.19270996859768275, 118: -0.1275950240410566, 119: 0.11420235722926009}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:START_FORECASTING 'Signal'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  'Signal' 0.7064371109008789
INFO:pyaf.std:START_PLOTTING
INFO:pyaf.std:END_PLOTTING_TIME_IN_SECONDS 5.0626702308654785
  Split Transformation  ... TestMAPE TestMASE
1  None        _Signal  ...   0.0611   0.0065
0  None  CumSum_Signal  ...   0.0605   0.0066

[2 rows x 20 columns]
  Split  Transformation  ... TestMAPE TestMASE
0  None   CumSum_Signal  ...   0.0605   0.0066
1  None         _Signal  ...   0.0611   0.0065
2  None   CumSum_Signal  ...   0.1236   0.0845
3  None  RelDiff_Signal  ...   0.8758   8.8148
4  None  RelDiff_Signal  ...   0.8758   8.8148

[5 rows x 20 columns]
Forecast Columns  Index(['Time_Hourly', 'Signal', 'row_number', 'Time_Hourly_Normalized',
       '_Signal', '_Signal_Lag1Trend', '_Signal_Lag1Trend_residue',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR',
       '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR_residue',
       '_Signal_Trend', '_Signal_Trend_residue', '_Signal_Cycle',
       '_Signal_Cycle_residue', '_Signal_AR', '_Signal_AR_residue',
       '_Signal_TransformedForecast', 'Signal_Forecast',
       '_Signal_TransformedResidue', 'Signal_Residue',
       'Signal_Forecast_Lower_Bound', 'Signal_Forecast_Upper_Bound'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10024 entries, 0 to 10023
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Time_Hourly      10024 non-null  datetime64[ns]
 1   Signal           10000 non-null  float64       
 2   Signal_Forecast  10024 non-null  float64       
dtypes: datetime64[ns](1), float64(2)
memory usage: 235.1 KB
None
Forecasts
               Time_Hourly  Signal  Signal_Forecast
10000 2001-02-20 16:00:00     NaN      2764.447162
10001 2001-02-20 17:00:00     NaN      2764.260977
10002 2001-02-20 18:00:00     NaN      2764.738510
10003 2001-02-20 19:00:00     NaN      2764.498792
10004 2001-02-20 20:00:00     NaN      2764.268869
10005 2001-02-20 21:00:00     NaN      2764.446846
10006 2001-02-20 22:00:00     NaN      2764.580277
10007 2001-02-20 23:00:00     NaN      2764.921083
10008 2001-02-21 00:00:00     NaN         4.772543
10009 2001-02-21 01:00:00     NaN       124.876337
10010 2001-02-21 02:00:00     NaN       244.899531
10011 2001-02-21 03:00:00     NaN       364.758532
10012 2001-02-21 04:00:00     NaN       485.382370
10013 2001-02-21 05:00:00     NaN       605.026691
10014 2001-02-21 06:00:00     NaN       725.071743
10015 2001-02-21 07:00:00     NaN       845.582969
10016 2001-02-21 08:00:00     NaN      2765.741713
10017 2001-02-21 09:00:00     NaN      2765.719254
10018 2001-02-21 10:00:00     NaN      2765.724619
10019 2001-02-21 11:00:00     NaN      2765.581085
10020 2001-02-21 12:00:00     NaN      2765.555546
10021 2001-02-21 13:00:00     NaN      2765.460830
10022 2001-02-21 14:00:00     NaN      2765.391217
10023 2001-02-21 15:00:00     NaN      2765.496551


<ModelInfo>
{
    "Dataset": {
        "Signal": "Signal",
        "Time": {
            "Horizon": 24,
            "TimeMinMax": [
                "2000-01-01 00:00:00",
                "2001-02-20 15:00:00"
            ],
            "TimeVariable": "Time_Hourly"
        },
        "Training_Signal_Length": 10000
    },
    "Model": {
        "AR_Model": "NoAR",
        "Best_Decomposition": "_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR",
        "Cycle": "Seasonal_HourOfWeek",
        "Signal_Transoformation": "NoTransf",
        "Trend": "Lag1Trend"
    },
    "Model_Performance": {
        "COMPLEXITY": "36",
        "MAE": "1.1325083922483767",
        "MAPE": "0.0441",
        "MASE": "0.0057",
        "RMSE": "1.4385841496728187"
    }
}
</ModelInfo>




<Forecast>
{"Time_Hourly":{"9976":"2001-02-19T16:00:00.000Z","9977":"2001-02-19T17:00:00.000Z","9978":"2001-02-19T18:00:00.000Z","9979":"2001-02-19T19:00:00.000Z","9980":"2001-02-19T20:00:00.000Z","9981":"2001-02-19T21:00:00.000Z","9982":"2001-02-19T22:00:00.000Z","9983":"2001-02-19T23:00:00.000Z","9984":"2001-02-20T00:00:00.000Z","9985":"2001-02-20T01:00:00.000Z","9986":"2001-02-20T02:00:00.000Z","9987":"2001-02-20T03:00:00.000Z","9988":"2001-02-20T04:00:00.000Z","9989":"2001-02-20T05:00:00.000Z","9990":"2001-02-20T06:00:00.000Z","9991":"2001-02-20T07:00:00.000Z","9992":"2001-02-20T08:00:00.000Z","9993":"2001-02-20T09:00:00.000Z","9994":"2001-02-20T10:00:00.000Z","9995":"2001-02-20T11:00:00.000Z","9996":"2001-02-20T12:00:00.000Z","9997":"2001-02-20T13:00:00.000Z","9998":"2001-02-20T14:00:00.000Z","9999":"2001-02-20T15:00:00.000Z","10000":"2001-02-20T16:00:00.000Z","10001":"2001-02-20T17:00:00.000Z","10002":"2001-02-20T18:00:00.000Z","10003":"2001-02-20T19:00:00.000Z","10004":"2001-02-20T20:00:00.000Z","10005":"2001-02-20T21:00:00.000Z","10006":"2001-02-20T22:00:00.000Z","10007":"2001-02-20T23:00:00.000Z","10008":"2001-02-21T00:00:00.000Z","10009":"2001-02-21T01:00:00.000Z","10010":"2001-02-21T02:00:00.000Z","10011":"2001-02-21T03:00:00.000Z","10012":"2001-02-21T04:00:00.000Z","10013":"2001-02-21T05:00:00.000Z","10014":"2001-02-21T06:00:00.000Z","10015":"2001-02-21T07:00:00.000Z","10016":"2001-02-21T08:00:00.000Z","10017":"2001-02-21T09:00:00.000Z","10018":"2001-02-21T10:00:00.000Z","10019":"2001-02-21T11:00:00.000Z","10020":"2001-02-21T12:00:00.000Z","10021":"2001-02-21T13:00:00.000Z","10022":"2001-02-21T14:00:00.000Z","10023":"2001-02-21T15:00:00.000Z"},"Signal":{"9976":5.4962347625,"9977":4.6050946696,"9978":4.322505678,"9979":6.0315170108,"9980":4.4840366074,"9981":4.4175080359,"9982":3.9083153682,"9983":3.8731257507,"9984":4.1903574318,"9985":124.3635104804,"9986":245.0076105106,"9987":365.3687462051,"9988":485.4200174922,"9989":605.7591944382,"9990":724.5343199622,"9991":844.6468446084,"9992":2765.0045688214,"9993":2764.2360442705,"9994":2764.9199960839,"9995":2763.199934559,"9996":2764.2407088454,"9997":2766.450559902,"9998":2764.968113436,"9999":2764.6803359387,"10000":null,"10001":null,"10002":null,"10003":null,"10004":null,"10005":null,"10006":null,"10007":null,"10008":null,"10009":null,"10010":null,"10011":null,"10012":null,"10013":null,"10014":null,"10015":null,"10016":null,"10017":null,"10018":null,"10019":null,"10020":null,"10021":null,"10022":null,"10023":null},"Signal_Forecast":{"9976":7.1524204305,"9977":5.083883814,"9978":5.0956779974,"9979":4.0176939206,"9980":5.8837158339,"9981":4.3812328173,"9982":4.3837545769,"9983":3.9701779474,"9984":3.8960602082,"9985":124.0130077028,"9986":244.6943303484,"9987":364.7360187128,"9988":485.3354358293,"9989":605.7805380167,"9990":726.0677622781,"9991":844.1908256249,"9992":2764.7292676061,"9993":2764.8011338934,"9994":2764.4024457027,"9995":2764.8633271564,"9996":2762.9107573248,"9997":2764.2120406685,"9998":2766.3391465769,"9999":2764.9075646079,"10000":2764.4471616572,"10001":2764.2609765717,"10002":2764.7385099111,"10003":2764.4987922154,"10004":2764.2688693871,"10005":2764.4468464555,"10006":2764.5802774466,"10007":2764.9210828794,"10008":4.7725426445,"10009":124.8763371129,"10010":244.8995312605,"10011":364.7585315247,"10012":485.3823697992,"10013":605.0266905871,"10014":725.0717429278,"10015":845.582969344,"10016":2765.7417134684,"10017":2765.7192540699,"10018":2765.7246187337,"10019":2765.5810850374,"10020":2765.5555462654,"10021":2765.4608302388,"10022":2765.3912172484,"10023":2765.4965507594}}
</Forecast>


