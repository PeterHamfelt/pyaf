INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['Signal_TS_R'], 'Transformations': [('Signal_TS_R', 'None', '_', 'T+S+R'), ('Signal_TS_R', 'None', '_', 'TS+R'), ('Signal_TS_R', 'None', '_', 'TSR'), ('Signal_TS_R', 'None', 'Diff_', 'T+S+R'), ('Signal_TS_R', 'None', 'Diff_', 'TS+R'), ('Signal_TS_R', 'None', 'Diff_', 'TSR'), ('Signal_TS_R', 'None', 'RelDiff_', 'T+S+R'), ('Signal_TS_R', 'None', 'RelDiff_', 'TS+R'), ('Signal_TS_R', 'None', 'RelDiff_', 'TSR'), ('Signal_TS_R', 'None', 'CumSum_', 'T+S+R'), ('Signal_TS_R', 'None', 'CumSum_', 'TS+R'), ('Signal_TS_R', 'None', 'CumSum_', 'TSR'), ('Signal_TS_R', 'None', 'Box_Cox_-2.0_', 'T+S+R'), ('Signal_TS_R', 'None', 'Box_Cox_-2.0_', 'TS+R'), ('Signal_TS_R', 'None', 'Box_Cox_-2.0_', 'TSR'), ('Signal_TS_R', 'None', 'Box_Cox_-1.0_', 'T+S+R'), ('Signal_TS_R', 'None', 'Box_Cox_-1.0_', 'TS+R'), ('Signal_TS_R', 'None', 'Box_Cox_-1.0_', 'TSR'), ('Signal_TS_R', 'None', 'Box_Cox_0.0_', 'T+S+R'), ('Signal_TS_R', 'None', 'Box_Cox_0.0_', 'TS+R'), ('Signal_TS_R', 'None', 'Box_Cox_0.0_', 'TSR'), ('Signal_TS_R', 'None', 'Box_Cox_2.0_', 'T+S+R'), ('Signal_TS_R', 'None', 'Box_Cox_2.0_', 'TS+R'), ('Signal_TS_R', 'None', 'Box_Cox_2.0_', 'TSR'), ('Signal_TS_R', 'None', 'Quantized_5_', 'T+S+R'), ('Signal_TS_R', 'None', 'Quantized_5_', 'TS+R'), ('Signal_TS_R', 'None', 'Quantized_5_', 'TSR'), ('Signal_TS_R', 'None', 'Quantized_10_', 'T+S+R'), ('Signal_TS_R', 'None', 'Quantized_10_', 'TS+R'), ('Signal_TS_R', 'None', 'Quantized_10_', 'TSR'), ('Signal_TS_R', 'None', 'Quantized_20_', 'T+S+R'), ('Signal_TS_R', 'None', 'Quantized_20_', 'TS+R'), ('Signal_TS_R', 'None', 'Quantized_20_', 'TSR'), ('Signal_TS_R', 'None', 'Logit_', 'T+S+R'), ('Signal_TS_R', 'None', 'Logit_', 'TS+R'), ('Signal_TS_R', 'None', 'Logit_', 'TSR'), ('Signal_TS_R', 'None', 'Fisher_', 'T+S+R'), ('Signal_TS_R', 'None', 'Fisher_', 'TS+R'), ('Signal_TS_R', 'None', 'Fisher_', 'TSR'), ('Signal_TS_R', 'None', 'Anscombe_', 'T+S+R'), ('Signal_TS_R', 'None', 'Anscombe_', 'TS+R'), ('Signal_TS_R', 'None', 'Anscombe_', 'TSR')], 'Cores': 8}))
         Date  idx     T  ...  Signal_Constant  Signal_Zero  Signal_One
0  2016-01-25    0  0.00  ...              4.0          0.0         1.0
1  2016-01-26    1  0.05  ...              4.0          0.0         1.0
2  2016-01-27    2  0.10  ...              4.0          0.0         1.0
3  2016-01-28    3  0.15  ...              4.0          0.0         1.0
4  2016-01-29    4  0.20  ...              4.0          0.0         1.0
5  2016-01-30    5  0.25  ...              4.0          0.0         1.0
6  2016-01-31    6  0.30  ...              4.0          0.0         1.0
7  2016-02-01    7  0.35  ...              4.0          0.0         1.0
8  2016-02-02    8  0.40  ...              4.0          0.0         1.0
9  2016-02-03    9  0.45  ...              4.0          0.0         1.0
10 2016-02-04   10  0.50  ...              4.0          0.0         1.0
11 2016-02-05   11  0.55  ...              4.0          0.0         1.0
12 2016-02-06   12  0.60  ...              4.0          0.0         1.0
13 2016-02-07   13  0.65  ...              4.0          0.0         1.0
14 2016-02-08   14  0.70  ...              4.0          0.0         1.0
15 2016-02-09   15  0.75  ...              4.0          0.0         1.0
16 2016-02-10   16  0.80  ...              4.0          0.0         1.0
17 2016-02-11   17  0.85  ...              4.0          0.0         1.0
18 2016-02-12   18  0.90  ...              4.0          0.0         1.0
19 2016-02-13   19  0.95  ...              4.0          0.0         1.0
20 2016-02-14   20  1.00  ...              4.0          0.0         1.0
21 2016-02-15   21  1.05  ...              4.0          0.0         1.0
22 2016-02-16   22  1.10  ...              4.0          0.0         1.0
23 2016-02-17   23  1.15  ...              4.0          0.0         1.0

[24 rows x 11 columns]
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': '_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': '_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': '_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Diff_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Diff_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'RelDiff_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'RelDiff_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Diff_Signal_TS_R'}))
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 30.753, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': '_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 30.813, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Diff_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 31.117, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Diff_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 31.361, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': '_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 31.522, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Diff_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'RelDiff_Signal_TS_R'}))
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 32.475, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': '_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'CumSum_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'CumSum_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 34.358, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'RelDiff_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'CumSum_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-2.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 35.85, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'RelDiff_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-2.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-2.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-1.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.793, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-2.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-1.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.428, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-2.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-1.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.486, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-2.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_0.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.277, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-1.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_0.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.886, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-1.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_0.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.179, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_-1.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_2.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.913, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_2.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_2.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.878, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_2.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Box_Cox_2.0_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 29.363, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'CumSum_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Quantized_5_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 31.317, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'CumSum_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 31.268, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'CumSum_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Quantized_5_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.771, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Quantized_5_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Quantized_5_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 34.653, ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'RelDiff_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Quantized_10_Signal_TS_R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_TS_R', 'Transformation': 'Quantized_10_Signal_TS_R'}))
multiprocessing.pool.RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/home/circleci/project/pyaf/TS/SignalDecomposition.py", line 380, in run_transform_thread
    arg.mSigDec.train(arg.mInputDS, arg.mSplit, arg.mTime, arg.mSignal, arg.mHorizon, arg.mTransformation, arg.mDecompositionType);
  File "/home/circleci/project/pyaf/TS/SignalDecomposition.py", line 194, in train
    lAREstimator.estimate();
  File "/home/circleci/project/pyaf/TS/SignalDecomposition_AR.py", line 323, in estimate
    self.add_model_if_activated(cycle_residue, 'CROSTON', interm.cCroston_Model, lLags, False)
  File "/home/circleci/project/pyaf/TS/SignalDecomposition_AR.py", line 278, in add_model_if_activated
    if(self.mOptions.mActiveAutoRegressions[model_type_str + 'X'] and (self.mExogenousInfo is not None)):
KeyError: 'CROSTONX'
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/circleci/project/pyaf/ForecastEngine.py", line 25, in train
    self.mSignalDecomposition.train(iInputDS, iTime, iSignal, iHorizon, iExogenousData);
  File "/home/circleci/project/pyaf/TS/SignalDecomposition.py", line 666, in train
    lTrainer.train(iInputDS, lSplits , self.mDateColumns, self.mSignals, self.mHorizons)
  File "/home/circleci/project/pyaf/TS/SignalDecomposition.py", line 416, in train
    self.train_all_transformations(iInputDS, iSplits, iTime, iSignals, iHorizon);
  File "/home/circleci/project/pyaf/TS/SignalDecomposition.py", line 505, in train_all_transformations
    for res in pool.imap(run_transform_thread, args):
  File "/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/multiprocessing/pool.py", line 870, in next
    raise value
KeyError: 'CROSTONX'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/circleci/project/tests/multiplicative_seasonal/artificial_model_TS+R.py", line 29, in <module>
    lEngine.train(iInputDS = df_train, iTime = 'Date', iSignal = lSignal, iHorizon = 7);
  File "/home/circleci/project/pyaf/ForecastEngine.py", line 30, in train
    raise tsutil.PyAF_Error("TRAIN_FAILED");
pyaf.TS.Utils.PyAF_Error: TRAIN_FAILED
Exception ignored in: <function cTimer.__del__ at 0x7f2ffa390f70>
Traceback (most recent call last):
  File "/home/circleci/project/pyaf/TS/Utils.py", line 89, in __del__
  File "/home/circleci/project/pyaf/TS/Utils.py", line 65, in get_pyaf_timing_logger
ImportError: sys.meta_path is None, Python is likely shutting down
