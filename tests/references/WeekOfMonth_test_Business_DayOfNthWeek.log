INFO:pyaf.std:START_TRAINING 'Signal'
          Time_Hourly  Hour  Day  Week    Signal
0 2000-01-01 00:00:00     0    5     0  4.900488
1 2000-01-01 01:00:00     1    5     0  4.701847
2 2000-01-01 02:00:00     2    5     0  5.369814
3 2000-01-01 03:00:00     3    5     0  5.995376
4 2000-01-01 04:00:00     4    5     0  4.591272
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10000 entries, 0 to 9999
Data columns (total 5 columns):
 #   Column       Non-Null Count  Dtype         
---  ------       --------------  -----         
 0   Time_Hourly  10000 non-null  datetime64[ns]
 1   Hour         10000 non-null  int64         
 2   Day          10000 non-null  int64         
 3   Week         10000 non-null  int64         
 4   Signal       10000 non-null  float64       
dtypes: datetime64[ns](1), float64(1), int64(3)
memory usage: 390.8 KB
None
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cConstantTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLag1Trend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cLinearTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.MonthOfYear: 6>, <eTimeResolution.MONTH: 5>, 332.4583333333333)
INFO:pyaf.std:NOT_ENOUGH_TO_ANAYLSE_SEASONAL_PATTERN ('cPolyTrend', <eDatePart.DayOfYear: 8>, <eTimeResolution.DAY: 4>, 332.4583333333333)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA _Signal_ConstantTrend [('_Signal_ConstantTrend_residue_Seasonal_DayOfNthWeekOfMonth', (0.102, 66))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST _Signal_ConstantTrend _Signal_ConstantTrend_residue_Seasonal_DayOfNthWeekOfMonth (0.102, 66)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_ConstantTrend [('CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfMonth', (0.956, 11)), ('CumSum_Signal_ConstantTrend_residue_Seasonal_DayOfNthWeekOfMonth', (0.952, 66))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_ConstantTrend CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfMonth (0.956, 11)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA RelDiff_Signal_ConstantTrend [('RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek', (0.001, 7)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_WeekOfMonth', (0.001, 11)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek', (0.001, 14)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek', (0.001, 21)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_Hour', (0.001, 24)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek', (0.001, 28)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfMonth', (0.001, 31)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek', (0.001, 42)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_WeekOfYear', (0.001, 49)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek', (0.001, 56)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfNthWeekOfMonth', (0.001, 66)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek', (0.001, 84)), ('RelDiff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek', (0.001, 168))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST RelDiff_Signal_ConstantTrend RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek (0.001, 7)
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_DATA CumSum_Signal_Lag1Trend [('CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfNthWeekOfMonth', (0.213, 66))]
INFO:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_BEST CumSum_Signal_Lag1Trend CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfNthWeekOfMonth (0.213, 66)
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 4 0.2128
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_Cycle_NoAR 8 2.4693
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_ConstantTrend_NoCycle_NoAR 0 4.0841
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfMonth_NoAR 36 0.2392
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 36 0.2388
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_DayOfWeek_NoAR 36 0.2391
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 36 0.2392
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 36 0.239
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_HourOfWeek_NoAR 36 0.2128
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_Hour_NoAR 36 0.2411
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 36 0.2394
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 36 0.2395
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 36 0.2392
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 36 0.2394
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_WeekOfMonth_NoAR 36 0.2391
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Seasonal_WeekOfYear_NoAR 36 0.2394
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_Cycle_None_NoAR 40 0.2392
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_Lag1Trend_NoCycle_NoAR 32 0.2392
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfMonth_NoAR 20 2.5519
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 20 0.6048
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_DayOfWeek_NoAR 20 4.5694
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_EightHourOfWeek_NoAR 20 4.5677
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_FourHourOfWeek_NoAR 20 4.5669
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_HourOfWeek_NoAR 20 4.5663
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_Hour_NoAR 20 3.0698
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_SixHourOfWeek_NoAR 20 4.5678
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 20 4.5681
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 20 4.5693
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 20 4.5673
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_WeekOfMonth_NoAR 20 3.2912
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Seasonal_WeekOfYear_NoAR 20 2.7988
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_Cycle_NoAR 24 3.0643
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_LinearTrend_NoCycle_NoAR 16 4.5068
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfMonth_NoAR 20 3.2385
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 20 1.2609
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_DayOfWeek_NoAR 20 5.2898
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_EightHourOfWeek_NoAR 20 5.2898
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_FourHourOfWeek_NoAR 20 5.2894
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_HourOfWeek_NoAR 20 5.2906
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_Hour_NoAR 20 3.7247
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_SixHourOfWeek_NoAR 20 5.2894
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 20 5.2915
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 20 5.2912
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 20 5.2901
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_WeekOfMonth_NoAR 20 3.9489
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Seasonal_WeekOfYear_NoAR 20 3.5901
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_Cycle_None_NoAR 24 5.1603
INFO:pyaf.std:collectPerformanceIndices : MAPE None _Signal NoTransf_PolyTrend_NoCycle_NoAR 16 5.1603
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfMonth_NoAR 36 14.3828
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 36 17.8599
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_DayOfWeek_NoAR 36 17.1764
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_EightHourOfWeek_NoAR 36 15.9974
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_FourHourOfWeek_NoAR 36 17.8295
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_HourOfWeek_NoAR 36 9.3724
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_Hour_NoAR 36 24.9238
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_SixHourOfWeek_NoAR 36 14.5303
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_ThreeHourOfWeek_NoAR 36 18.3572
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_TwelveHourOfWeek_NoAR 36 19.4182
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_TwoHourOfWeek_NoAR 36 27.597
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_WeekOfMonth_NoAR 36 14.6262
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Seasonal_WeekOfYear_NoAR 36 15.666
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_Cycle_None_NoAR 40 3.4895
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_ConstantTrend_NoCycle_NoAR 32 3.4895
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfMonth_NoAR 68 16.6542
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 68 19.8859
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_DayOfWeek_NoAR 68 20.5392
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 68 18.8929
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 68 13.4234
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_HourOfWeek_NoAR 68 11.6544
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_Hour_NoAR 68 16.4178
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 68 13.7989
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 68 16.5643
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 68 13.7969
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 68 5.645
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_WeekOfMonth_NoAR 68 17.0015
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Seasonal_WeekOfYear_NoAR 68 23.2681
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_Cycle_None_NoAR 72 0.2392
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_Lag1Trend_NoCycle_NoAR 64 0.2392
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfMonth_NoAR 52 11.9525
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 15.8518
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_DayOfWeek_NoAR 52 15.6049
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 14.5453
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 14.9483
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_HourOfWeek_NoAR 52 11.6732
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_Hour_NoAR 52 22.7324
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 13.2512
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 16.8195
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 16.2296
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 26.0709
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 13.4131
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Seasonal_WeekOfYear_NoAR 52 12.8805
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_Cycle_None_NoAR 56 1.7861
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_LinearTrend_NoCycle_NoAR 48 1.7861
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfMonth_NoAR 52 8.2381
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 13.4701
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_DayOfWeek_NoAR 52 12.608
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 13.256
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 13.9737
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_HourOfWeek_NoAR 52 13.4041
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_Hour_NoAR 52 23.0505
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 11.3576
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 14.1884
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 14.2241
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 24.2158
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 11.4199
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Seasonal_WeekOfYear_NoAR 52 10.1382
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_Cycle_None_NoAR 56 3.0086
INFO:pyaf.std:collectPerformanceIndices : MAPE None Diff_Signal Difference_PolyTrend_NoCycle_NoAR 48 3.0086
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_Seasonal_DayOfWeek_NoAR 36 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_Cycle_NoAR 40 12.3248
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_ConstantTrend_NoCycle_NoAR 32 25918049.0135
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfMonth_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_DayOfWeek_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_EightHourOfWeek_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_FourHourOfWeek_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_HourOfWeek_NoAR 68 116.7731
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_Hour_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_SixHourOfWeek_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_ThreeHourOfWeek_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_TwelveHourOfWeek_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_TwoHourOfWeek_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_WeekOfMonth_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Seasonal_WeekOfYear_NoAR 68 0.8655
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_Cycle_None_NoAR 72 0.2392
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_Lag1Trend_NoCycle_NoAR 64 0.2392
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfMonth_NoAR 52 25918049.8801
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 25918049.878
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_DayOfWeek_NoAR 52 25918049.8801
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 25918049.8801
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 25918049.8801
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_HourOfWeek_NoAR 52 25918049.878
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_Hour_NoAR 52 25918049.878
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 25918049.8801
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 25918049.8801
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 25918049.8801
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 25918049.8801
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 25918049.878
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Seasonal_WeekOfYear_NoAR 52 25918049.878
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_Cycle_None_NoAR 56 25918049.878
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_LinearTrend_NoCycle_NoAR 48 25918049.878
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfMonth_NoAR 52 25918049.0135
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 25918049.0135
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_DayOfWeek_NoAR 52 25918050.7445
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 25918049.0135
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 25918049.0135
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_HourOfWeek_NoAR 52 25918050.7445
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_Hour_NoAR 52 25918050.7445
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 25918049.0135
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 25918049.0135
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 25918050.7445
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 25918049.0135
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 25918049.0135
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Seasonal_WeekOfYear_NoAR 52 25918049.5163
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_Cycle_NoAR 56 25918049.0135
INFO:pyaf.std:collectPerformanceIndices : MAPE None RelDiff_Signal RelativeDifference_PolyTrend_NoCycle_NoAR 48 25918050.7445
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_Seasonal_WeekOfMonth_NoAR 36 70.9397
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_Cycle_None_NoAR 40 1.0
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_ConstantTrend_NoCycle_NoAR 32 1.0
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_Seasonal_DayOfNthWeekOfMonth_NoAR 68 0.1167
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_Cycle_None_NoAR 72 0.2392
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_Lag1Trend_NoCycle_NoAR 64 0.2392
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_DayOfMonth_NoAR 52 7.2007
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 6.8628
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_DayOfWeek_NoAR 52 6.4983
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_EightHourOfWeek_NoAR 52 6.194
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_FourHourOfWeek_NoAR 52 5.7931
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_HourOfWeek_NoAR 52 2.9223
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_Hour_NoAR 52 4.2127
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_SixHourOfWeek_NoAR 52 6.1286
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_ThreeHourOfWeek_NoAR 52 5.6102
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_TwelveHourOfWeek_NoAR 52 6.3496
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_TwoHourOfWeek_NoAR 52 4.8314
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_WeekOfMonth_NoAR 52 9.7671
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Seasonal_WeekOfYear_NoAR 52 9.0507
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_Cycle_None_NoAR 56 4.1143
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_LinearTrend_NoCycle_NoAR 48 4.1143
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfMonth_NoAR 52 7.0532
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfNthWeekOfMonth_NoAR 52 6.5936
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_DayOfWeek_NoAR 52 6.5069
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_EightHourOfWeek_NoAR 52 5.9458
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_FourHourOfWeek_NoAR 52 5.7623
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_HourOfWeek_NoAR 52 2.892
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_Hour_NoAR 52 3.9078
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_SixHourOfWeek_NoAR 52 6.012
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_ThreeHourOfWeek_NoAR 52 5.5906
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_TwelveHourOfWeek_NoAR 52 6.1379
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_TwoHourOfWeek_NoAR 52 4.8585
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_WeekOfMonth_NoAR 52 9.3484
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Seasonal_WeekOfYear_NoAR 52 8.5402
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_Cycle_None_NoAR 56 3.783
INFO:pyaf.std:collectPerformanceIndices : MAPE None CumSum_Signal Integration_PolyTrend_NoCycle_NoAR 48 3.783
INFO:pyaf.std:END_TRAINING_TIME_IN_SECONDS 'Signal' 17.770673990249634
INFO:pyaf.std:TIME_DETAIL TimeVariable='Time_Hourly' TimeMin=2000-01-01T00:00:00.000000 TimeMax=2000-11-28T11:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=24
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal' Length=10000  Min=1.6740754660726695 Max=128.59958482040105  Mean=58.19152019123086 StdDev=50.77090395491302
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_Signal' Min=4.900488208460554 Max=581915.2019123097  Mean=287039.09915196325 StdDev=170673.68545072526
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfNthWeekOfMonth_residue_NoAR' [Lag1Trend + Seasonal_DayOfNthWeekOfMonth + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_Signal_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfNthWeekOfMonth' [Seasonal_DayOfNthWeekOfMonth]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfNthWeekOfMonth_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1028 MAPE_Forecast=0.1167 MAPE_Test=0.1019
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0947 SMAPE_Forecast=0.0998 SMAPE_Test=0.1041
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.5967 MASE_Forecast=0.6161 MASE_Test=0.377
INFO:pyaf.std:MODEL_L1 L1_Fit=1.2995254973972066 L1_Forecast=1.369423563519016 L1_Test=1.015313185687174
INFO:pyaf.std:MODEL_L2 L2_Fit=3.152168204481729 L2_Forecast=3.8610592708104767 L2_Test=1.2581872928881028
INFO:pyaf.std:MODEL_COMPLEXITY 68
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 4.900488208460554
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:SEASONAL_MODEL_VALUES CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfNthWeekOfMonth 36.13098272035131 {12: 5.087073577349656, 13: 5.128586250852095, -350: 4.863462719172503, -349: 5.121867563473785, -348: 5.212062084674642, -347: 5.0374708608800915, -346: 35.28086107741484, -345: 35.249923274653156, -344: 34.79678577229788, -343: 5.032933413788442, -342: 14.873794537154936, -341: 25.147780870541737, -340: 34.56474834473465, -339: 124.60154903515831, -338: 124.91836237647294, -337: 125.10090140141892, -336: 5.139202143670445, -335: 44.88458571686988, -334: 84.89017052255622, -333: 125.18351592233194, -332: 125.21674618655561, -331: 124.73329297971213, -330: 124.759296876191, -329: 4.685967567384068, -328: 45.004852990086874, -327: 85.11966137703166, -326: 125.29862017904088, -325: 125.17648248016485, -324: 124.63246892986353, -323: 125.05105982387613, -322: 4.871345701321843, 8: 4.832564708995051, 9: 4.901305179715564, 10: 4.957056082224881, 11: 5.03558723515016, 14: 5.038024173707527, 15: 10.556885595415224, 16: 23.676125286332535, 17: 34.34490062300756, 18: 34.75114772229426, 19: 35.03765235953324, 20: 34.994186087591515, 21: 4.92807738261763, 22: 29.911987115883676, 23: 84.29565313063722, 24: 124.42068853683304, 25: 124.80985745320504, 26: 125.0707851023617, 27: 124.95453306380296, 28: 5.0525397900200915, 29: 44.96594186290167, 30: 84.98825531422335, 31: 124.84540044249297, 32: 124.95064031527727, 33: 125.07124116129125, 34: 124.93510788402637, 35: 4.957407882029656, 36: 44.90918901973055, 37: 85.06319180053833, 38: 124.94298982262262, 39: 125.0937470877252, 40: 124.91686749368091, 41: 125.32192561191914, 7: 4.986353298154427, 42: 5.011044001294067, 43: 44.6907984772115}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:START_FORECASTING 'Signal'
INFO:pyaf.std:END_FORECAST_TIME_IN_SECONDS  'Signal' 0.8030400276184082
INFO:pyaf.std:START_PLOTTING
INFO:pyaf.std:END_PLOTTING_TIME_IN_SECONDS 4.957952260971069
  Split Transformation  ... TestMAPE TestMASE
0  None  CumSum_Signal  ...   0.1019    0.377

[1 rows x 20 columns]
  Split Transformation  ... TestMAPE TestMASE
0  None  CumSum_Signal  ...   0.1019   0.3770
1  None        _Signal  ...   0.0657   0.2748
2  None        _Signal  ...   0.1037   0.4115
3  None        _Signal  ...   0.1391   0.9954
4  None        _Signal  ...   0.1410   1.0220

[5 rows x 20 columns]
Forecast Columns  Index(['Time_Hourly', 'Signal', 'row_number', 'Time_Hourly_Normalized',
       'CumSum_Signal', 'CumSum_Signal_Lag1Trend',
       'CumSum_Signal_Lag1Trend_residue',
       'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfNthWeekOfMonth',
       'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfNthWeekOfMonth_residue',
       'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfNthWeekOfMonth_residue_NoAR',
       'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfNthWeekOfMonth_residue_NoAR_residue',
       'CumSum_Signal_Trend', 'CumSum_Signal_Trend_residue',
       'CumSum_Signal_Cycle', 'CumSum_Signal_Cycle_residue',
       'CumSum_Signal_AR', 'CumSum_Signal_AR_residue',
       'CumSum_Signal_TransformedForecast', 'Signal_Forecast',
       'CumSum_Signal_TransformedResidue', 'Signal_Residue',
       'Signal_Forecast_Lower_Bound', 'Signal_Forecast_Upper_Bound'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10024 entries, 0 to 10023
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Time_Hourly      10024 non-null  datetime64[ns]
 1   Signal           10000 non-null  float64       
 2   Signal_Forecast  10024 non-null  float64       
dtypes: datetime64[ns](1), float64(2)
memory usage: 235.1 KB
None
Forecasts
               Time_Hourly  Signal  Signal_Forecast
10000 2001-02-20 16:00:00     NaN        45.230194
10001 2001-02-20 17:00:00     NaN        45.230194
10002 2001-02-20 18:00:00     NaN        45.230194
10003 2001-02-20 19:00:00     NaN        45.230194
10004 2001-02-20 20:00:00     NaN        45.230194
10005 2001-02-20 21:00:00     NaN        45.230194
10006 2001-02-20 22:00:00     NaN        45.230194
10007 2001-02-20 23:00:00     NaN        45.230194
10008 2001-02-21 00:00:00     NaN        85.252508
10009 2001-02-21 01:00:00     NaN        85.252508
10010 2001-02-21 02:00:00     NaN        85.252508
10011 2001-02-21 03:00:00     NaN        85.252508
10012 2001-02-21 04:00:00     NaN        85.252508
10013 2001-02-21 05:00:00     NaN        85.252508
10014 2001-02-21 06:00:00     NaN        85.252508
10015 2001-02-21 07:00:00     NaN        85.252508
10016 2001-02-21 08:00:00     NaN        85.252508
10017 2001-02-21 09:00:00     NaN        85.252508
10018 2001-02-21 10:00:00     NaN        85.252508
10019 2001-02-21 11:00:00     NaN        85.252508
10020 2001-02-21 12:00:00     NaN        85.252508
10021 2001-02-21 13:00:00     NaN        85.252508
10022 2001-02-21 14:00:00     NaN        85.252508
10023 2001-02-21 15:00:00     NaN        85.252508


<ModelInfo>
{
    "Dataset": {
        "Signal": "Signal",
        "Time": {
            "Horizon": 24,
            "TimeMinMax": [
                "2000-01-01 00:00:00",
                "2001-02-20 15:00:00"
            ],
            "TimeVariable": "Time_Hourly"
        },
        "Training_Signal_Length": 10000
    },
    "Model": {
        "AR_Model": "NoAR",
        "Best_Decomposition": "CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfNthWeekOfMonth_residue_NoAR",
        "Cycle": "Seasonal_DayOfNthWeekOfMonth",
        "Signal_Transoformation": "Integration",
        "Trend": "Lag1Trend"
    },
    "Model_Performance": {
        "COMPLEXITY": "68",
        "MAE": "1.369423563519016",
        "MAPE": "0.1167",
        "MASE": "0.6161",
        "RMSE": "3.8610592708104767"
    }
}
</ModelInfo>




<Forecast>
{"Time_Hourly":{"9976":"2001-02-19T16:00:00.000Z","9977":"2001-02-19T17:00:00.000Z","9978":"2001-02-19T18:00:00.000Z","9979":"2001-02-19T19:00:00.000Z","9980":"2001-02-19T20:00:00.000Z","9981":"2001-02-19T21:00:00.000Z","9982":"2001-02-19T22:00:00.000Z","9983":"2001-02-19T23:00:00.000Z","9984":"2001-02-20T00:00:00.000Z","9985":"2001-02-20T01:00:00.000Z","9986":"2001-02-20T02:00:00.000Z","9987":"2001-02-20T03:00:00.000Z","9988":"2001-02-20T04:00:00.000Z","9989":"2001-02-20T05:00:00.000Z","9990":"2001-02-20T06:00:00.000Z","9991":"2001-02-20T07:00:00.000Z","9992":"2001-02-20T08:00:00.000Z","9993":"2001-02-20T09:00:00.000Z","9994":"2001-02-20T10:00:00.000Z","9995":"2001-02-20T11:00:00.000Z","9996":"2001-02-20T12:00:00.000Z","9997":"2001-02-20T13:00:00.000Z","9998":"2001-02-20T14:00:00.000Z","9999":"2001-02-20T15:00:00.000Z","10000":"2001-02-20T16:00:00.000Z","10001":"2001-02-20T17:00:00.000Z","10002":"2001-02-20T18:00:00.000Z","10003":"2001-02-20T19:00:00.000Z","10004":"2001-02-20T20:00:00.000Z","10005":"2001-02-20T21:00:00.000Z","10006":"2001-02-20T22:00:00.000Z","10007":"2001-02-20T23:00:00.000Z","10008":"2001-02-21T00:00:00.000Z","10009":"2001-02-21T01:00:00.000Z","10010":"2001-02-21T02:00:00.000Z","10011":"2001-02-21T03:00:00.000Z","10012":"2001-02-21T04:00:00.000Z","10013":"2001-02-21T05:00:00.000Z","10014":"2001-02-21T06:00:00.000Z","10015":"2001-02-21T07:00:00.000Z","10016":"2001-02-21T08:00:00.000Z","10017":"2001-02-21T09:00:00.000Z","10018":"2001-02-21T10:00:00.000Z","10019":"2001-02-21T11:00:00.000Z","10020":"2001-02-21T12:00:00.000Z","10021":"2001-02-21T13:00:00.000Z","10022":"2001-02-21T14:00:00.000Z","10023":"2001-02-21T15:00:00.000Z"},"Signal":{"9976":5.0051946643,"9977":4.6197214827,"9978":3.8733936024,"9979":5.029376163,"9980":3.0290058227,"9981":4.4227133321,"9982":4.8802423078,"9983":5.151815981,"9984":45.5932356603,"9985":44.9194765944,"9986":43.4078386826,"9987":42.8309844883,"9988":44.1062952365,"9989":45.2648141919,"9990":44.955688226,"9991":46.7392711851,"9992":43.6025321862,"9993":43.0936387734,"9994":44.5813691407,"9995":43.5706064441,"9996":44.6474131582,"9997":45.0499247909,"9998":45.1304240748,"9999":45.2301940725,"10000":null,"10001":null,"10002":null,"10003":null,"10004":null,"10005":null,"10006":null,"10007":null,"10008":null,"10009":null,"10010":null,"10011":null,"10012":null,"10013":null,"10014":null,"10015":null,"10016":null,"10017":null,"10018":null,"10019":null,"10020":null,"10021":null,"10022":null,"10023":null},"Signal_Forecast":{"9976":2.6691628397,"9977":5.0051946644,"9978":4.6197214827,"9979":3.8733936024,"9980":5.029376163,"9981":3.0290058227,"9982":4.4227133321,"9983":4.8802423078,"9984":45.0652180539,"9985":45.5932356602,"9986":44.9194765944,"9987":43.4078386826,"9988":42.8309844884,"9989":44.1062952365,"9990":45.2648141918,"9991":44.955688226,"9992":46.7392711851,"9993":43.6025321862,"9994":43.0936387734,"9995":44.5813691407,"9996":43.5706064441,"9997":44.6474131582,"9998":45.0499247909,"9999":45.1304240748,"10000":45.2301940725,"10001":45.2301940725,"10002":45.2301940725,"10003":45.2301940725,"10004":45.2301940725,"10005":45.2301940725,"10006":45.2301940725,"10007":45.2301940725,"10008":85.2525075237,"10009":85.2525075237,"10010":85.2525075237,"10011":85.2525075237,"10012":85.2525075237,"10013":85.2525075237,"10014":85.2525075237,"10015":85.2525075237,"10016":85.2525075237,"10017":85.2525075237,"10018":85.2525075237,"10019":85.2525075237,"10020":85.2525075237,"10021":85.2525075237,"10022":85.2525075237,"10023":85.2525075237}}
</Forecast>


