INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
          Time_Hourly  Hour  Day  Week    Signal
0 2000-01-01 00:00:00     0    5     0  6.904897
1 2000-01-01 01:00:00     1    5     0  3.570326
2 2000-01-01 02:00:00     2    5     0  3.685613
3 2000-01-01 03:00:00     3    5     0  5.025123
4 2000-01-01 04:00:00     4    5     0  5.401209
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10000 entries, 0 to 9999
Data columns (total 5 columns):
 #   Column       Non-Null Count  Dtype         
---  ------       --------------  -----         
 0   Time_Hourly  10000 non-null  datetime64[ns]
 1   Hour         10000 non-null  int64         
 2   Day          10000 non-null  int64         
 3   Week         10000 non-null  int64         
 4   Signal       10000 non-null  float64       
dtypes: datetime64[ns](1), float64(1), int64(3)
memory usage: 390.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': '_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'Diff_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'RelDiff_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'CumSum_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.021, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'CumSum_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.144, ('TRAINING', {'Signal': 'Signal', 'Transformation': '_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.184, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'Diff_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.39, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'RelDiff_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.26, ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 7.0, 0.2963)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 21.0, 0.2959)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 42.0, 0.2952)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 168.0, 0.2926)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_Hour_residue_NoAR'), 24.0, 0.2958)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 28.0, 0.2953)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 56.0, 0.2951)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 14.0, 0.2956)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 84.0, 0.2944)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 40.0, 0.2988)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 0.0, 0.5192)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 0.0, 0.5192)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 0.2)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 0.1998)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 0.1996)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 0.1964)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 0.1998)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 0.1995)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 0.1991)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 0.1999)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 0.199)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 0.1999)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 0.2004)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 0.2004)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 0.3008)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 0.3008)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 0.3006)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 0.298)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 0.3007)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 0.3005)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 0.3006)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 0.3008)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 0.2999)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 0.2989)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 6.0, 0.301)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 0.5168)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 0.3022)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 0.3021)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 0.3015)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 0.2992)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 0.3016)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 0.3019)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 0.3013)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 0.3019)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 0.3011)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 0.2988)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 8.0, 0.3023)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 0.5145)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 8.3538)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 8.279)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 11.9245)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 10.3969)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 9.6613)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 12.1281)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 15.1205)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 8.6416)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 5.7462)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 7.2837)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 1.0, 0.8326)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 0.8326)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 1.8818)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 7.1864)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 3.9901)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 3.4467)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 3.7452)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 5.8494)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 4.2269)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 0.2822)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 0.9732)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 5.7875)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 0.2004)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 0.2004)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 9.0827)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 8.6734)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 12.351)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 10.7572)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 10.1005)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 12.6069)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 15.5355)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 8.9602)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 6.1352)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 7.2839)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 0.539)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 0.539)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 8.9269)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 8.7077)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 12.3956)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 10.604)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 10.2786)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 12.3599)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 15.5903)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 9.0696)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 6.2052)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 7.2816)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 4.0, 0.51)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 0.51)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 0.2924)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 0.2925)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 0.2924)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 0.2925)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 0.2924)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 0.2925)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 0.2924)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 0.2924)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 0.2925)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 6.4955)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 1.0, 61681717.9895)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 61681717.9895)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 0.2924)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 0.2925)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 0.2925)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 0.2925)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 0.2925)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 0.2925)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 0.2924)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 0.2924)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 0.2925)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 0.2924)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 0.1927)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 0.1927)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 42777217.4716)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 45976119.9585)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 46413634.506)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 40122815.8681)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 43639339.4023)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 45491833.8661)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 42205337.2634)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 43343956.8527)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 42729297.137)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 5.372)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 62049217.5802)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 62049217.5802)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 40558770.3621)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 40878516.6853)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 43940445.4609)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 38502289.6141)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 40818554.6451)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 43411170.0399)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 41069841.7569)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 39308776.5995)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 41615093.7881)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 6.5152)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 4.0, 61958594.1368)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 61958594.1368)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 1.5253)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 1.0, 1.2277)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 1.2277)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 0.2006)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 8.0, 0.2006)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 0.2004)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 0.8835)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 0.5288)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 0.5288)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 0.6037)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 0.867)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 0.8989)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 0.6858)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 0.5802)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 0.8878)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 0.8894)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 0.7297)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 0.8292)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 0.8673)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 4.0, 0.5104)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 0.5104)
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.013, ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.517, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.55, ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Time_Hourly' TimeMin=2000-03-16T08:00:00.000000 TimeMax=2000-12-13T13:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=24
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal' Length=8192  Min=1.6504345761092143 Max=18.08971940186743  Mean=7.25539278361188 StdDev=4.280786806906713
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_Signal' Min=0.0 Max=1.0  Mean=0.3409490295295831 StdDev=0.2603998198388338
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_Signal_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_Signal_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2004 MAPE_Forecast=0.2117 MAPE_Test=0.1464
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.192 SMAPE_Forecast=0.2008 SMAPE_Test=0.1456
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9998 MASE_Forecast=1.0009 MASE_Test=1.031
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.1130295406009305 CRPS_Forecast=1.0705050438832873 CRPS_Test=0.23386149520555036
INFO:pyaf.std:MODEL_L1 L1_Fit=1.1291508720527674 L1_Forecast=1.1593708744922375 L1_Test=0.7618036360067096
INFO:pyaf.std:MODEL_L2 L2_Fit=1.4809293781758368 L2_Forecast=1.519957100999531 L2_Test=0.8606824933182343
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=458.2919205127436 LnQ_Forecast=126.62408248228789 LnQ_Test=0.6391382554845223
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.9359200005283377 MedAE_Forecast=0.9623978436763876 MedAE_Test=0.6814003066381182
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.22006801062505849
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _Signal_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 24}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.275, ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 24}))
INFO:pyaf.timing:('OPERATION_START', ('PLOTTING', {'Signals': ['Signal']}))
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  RelDiff_Signal             T+S+R  ...  0.1927       0.2029   0.1383
1  None  RelDiff_Signal             T+S+R  ...  0.1927       0.2029   0.1383
2  None         _Signal             T+S+R  ...  0.1991       0.2107   0.1406
3  None         _Signal             T+S+R  ...  0.1999       0.2112   0.1462
4  None         _Signal             T+S+R  ...  0.2000       0.2114   0.1459

[5 rows x 10 columns]
Forecast Columns  Index(['Time_Hourly', 'Signal', 'row_number', 'Time_Hourly_Normalized',
       '_Signal', '_Signal_Lag1Trend', '_Signal_Lag1Trend_residue',
       '_Signal_Lag1Trend_residue_zeroCycle[0.0]',
       '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue',
       '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR',
       '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR_residue',
       '_Signal_Trend', '_Signal_Trend_residue', '_Signal_Cycle',
       '_Signal_Cycle_residue', '_Signal_AR', '_Signal_AR_residue',
       '_Signal_TransformedForecast', 'Signal_Forecast',
       '_Signal_TransformedResidue', 'Signal_Residue',
       'Signal_Forecast_Lower_Bound', 'Signal_Forecast_Upper_Bound',
       'Signal_Forecast_Quantile_5', 'Signal_Forecast_Quantile_10',
       'Signal_Forecast_Quantile_15', 'Signal_Forecast_Quantile_20',
       'Signal_Forecast_Quantile_25', 'Signal_Forecast_Quantile_30',
       'Signal_Forecast_Quantile_35', 'Signal_Forecast_Quantile_40',
       'Signal_Forecast_Quantile_45', 'Signal_Forecast_Quantile_50',
       'Signal_Forecast_Quantile_55', 'Signal_Forecast_Quantile_60',
       'Signal_Forecast_Quantile_65', 'Signal_Forecast_Quantile_70',
       'Signal_Forecast_Quantile_75', 'Signal_Forecast_Quantile_80',
       'Signal_Forecast_Quantile_85', 'Signal_Forecast_Quantile_90',
       'Signal_Forecast_Quantile_95'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 8216 entries, 0 to 8215
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Time_Hourly      8216 non-null   datetime64[ns]
 1   Signal           8192 non-null   float64       
 2   Signal_Forecast  8216 non-null   float64       
dtypes: datetime64[ns](1), float64(2)
memory usage: 192.7 KB
None
Forecasts
              Time_Hourly  Signal  Signal_Forecast
8192 2001-02-20 16:00:00     NaN         5.519655
8193 2001-02-20 17:00:00     NaN         5.519655
8194 2001-02-20 18:00:00     NaN         5.519655
8195 2001-02-20 19:00:00     NaN         5.519655
8196 2001-02-20 20:00:00     NaN         5.519655
8197 2001-02-20 21:00:00     NaN         5.519655
8198 2001-02-20 22:00:00     NaN         5.519655
8199 2001-02-20 23:00:00     NaN         5.519655
8200 2001-02-21 00:00:00     NaN         5.519655
8201 2001-02-21 01:00:00     NaN         5.519655
8202 2001-02-21 02:00:00     NaN         5.519655
8203 2001-02-21 03:00:00     NaN         5.519655
8204 2001-02-21 04:00:00     NaN         5.519655
8205 2001-02-21 05:00:00     NaN         5.519655
8206 2001-02-21 06:00:00     NaN         5.519655
8207 2001-02-21 07:00:00     NaN         5.519655
8208 2001-02-21 08:00:00     NaN         5.519655
8209 2001-02-21 09:00:00     NaN         5.519655
8210 2001-02-21 10:00:00     NaN         5.519655
8211 2001-02-21 11:00:00     NaN         5.519655
8212 2001-02-21 12:00:00     NaN         5.519655
8213 2001-02-21 13:00:00     NaN         5.519655
8214 2001-02-21 14:00:00     NaN         5.519655
8215 2001-02-21 15:00:00     NaN         5.519655


<ModelInfo>
{
    "Signal": {
        "Dataset": {
            "Signal": "Signal",
            "Time": {
                "Horizon": 24,
                "TimeMinMax": [
                    "2000-03-16 08:00:00",
                    "2001-02-20 15:00:00"
                ],
                "TimeVariable": "Time_Hourly"
            },
            "Training_Signal_Length": 8192
        },
        "Model": {
            "AR_Model": "NoAR",
            "Best_Decomposition": "_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR",
            "Cycle": "NoCycle",
            "Signal_Decomposition_Type": "T+S+R",
            "Signal_Transoformation": "NoTransf",
            "Trend": "Lag1Trend"
        },
        "Model_Performance": {
            "COMPLEXITY": 2.0,
            "CRPS": 1.0705050438832873,
            "LnQ": 126.62408248228789,
            "MAE": 1.1593708744922375,
            "MAPE": 0.2117,
            "MASE": 1.0009,
            "MedAE": 0.9623978436763876,
            "RMSE": 1.519957100999531
        }
    }
}
</ModelInfo>




<Forecast>
{"Time_Hourly":{"8168":"2001-02-19T16:00:00.000Z","8169":"2001-02-19T17:00:00.000Z","8170":"2001-02-19T18:00:00.000Z","8171":"2001-02-19T19:00:00.000Z","8172":"2001-02-19T20:00:00.000Z","8173":"2001-02-19T21:00:00.000Z","8174":"2001-02-19T22:00:00.000Z","8175":"2001-02-19T23:00:00.000Z","8176":"2001-02-20T00:00:00.000Z","8177":"2001-02-20T01:00:00.000Z","8178":"2001-02-20T02:00:00.000Z","8179":"2001-02-20T03:00:00.000Z","8180":"2001-02-20T04:00:00.000Z","8181":"2001-02-20T05:00:00.000Z","8182":"2001-02-20T06:00:00.000Z","8183":"2001-02-20T07:00:00.000Z","8184":"2001-02-20T08:00:00.000Z","8185":"2001-02-20T09:00:00.000Z","8186":"2001-02-20T10:00:00.000Z","8187":"2001-02-20T11:00:00.000Z","8188":"2001-02-20T12:00:00.000Z","8189":"2001-02-20T13:00:00.000Z","8190":"2001-02-20T14:00:00.000Z","8191":"2001-02-20T15:00:00.000Z","8192":"2001-02-20T16:00:00.000Z","8193":"2001-02-20T17:00:00.000Z","8194":"2001-02-20T18:00:00.000Z","8195":"2001-02-20T19:00:00.000Z","8196":"2001-02-20T20:00:00.000Z","8197":"2001-02-20T21:00:00.000Z","8198":"2001-02-20T22:00:00.000Z","8199":"2001-02-20T23:00:00.000Z","8200":"2001-02-21T00:00:00.000Z","8201":"2001-02-21T01:00:00.000Z","8202":"2001-02-21T02:00:00.000Z","8203":"2001-02-21T03:00:00.000Z","8204":"2001-02-21T04:00:00.000Z","8205":"2001-02-21T05:00:00.000Z","8206":"2001-02-21T06:00:00.000Z","8207":"2001-02-21T07:00:00.000Z","8208":"2001-02-21T08:00:00.000Z","8209":"2001-02-21T09:00:00.000Z","8210":"2001-02-21T10:00:00.000Z","8211":"2001-02-21T11:00:00.000Z","8212":"2001-02-21T12:00:00.000Z","8213":"2001-02-21T13:00:00.000Z","8214":"2001-02-21T14:00:00.000Z","8215":"2001-02-21T15:00:00.000Z"},"Signal":{"8168":6.1828044847,"8169":4.8593202407,"8170":4.4581210597,"8171":4.6720669544,"8172":5.377316142,"8173":4.6057202027,"8174":3.948168777,"8175":4.488278897,"8176":5.2411256911,"8177":5.8410141926,"8178":5.3992971332,"8179":6.5652340139,"8180":5.1510918179,"8181":4.8075931922,"8182":5.8816710308,"8183":5.5407126867,"8184":4.9860840606,"8185":4.7994054131,"8186":5.9182146446,"8187":6.3021914065,"8188":4.9340494532,"8189":5.2337239728,"8190":4.2087054952,"8191":5.519654915,"8192":null,"8193":null,"8194":null,"8195":null,"8196":null,"8197":null,"8198":null,"8199":null,"8200":null,"8201":null,"8202":null,"8203":null,"8204":null,"8205":null,"8206":null,"8207":null,"8208":null,"8209":null,"8210":null,"8211":null,"8212":null,"8213":null,"8214":null,"8215":null},"Signal_Forecast":{"8168":4.8935970901,"8169":6.1828044847,"8170":4.8593202407,"8171":4.4581210597,"8172":4.6720669544,"8173":5.377316142,"8174":4.6057202027,"8175":3.948168777,"8176":4.488278897,"8177":5.2411256911,"8178":5.8410141926,"8179":5.3992971332,"8180":6.5652340139,"8181":5.1510918179,"8182":4.8075931922,"8183":5.8816710308,"8184":5.5407126867,"8185":4.9860840606,"8186":4.7994054131,"8187":5.9182146446,"8188":6.3021914065,"8189":4.9340494532,"8190":5.2337239728,"8191":4.2087054952,"8192":5.519654915,"8193":5.519654915,"8194":5.519654915,"8195":5.519654915,"8196":5.519654915,"8197":5.519654915,"8198":5.519654915,"8199":5.519654915,"8200":5.519654915,"8201":5.519654915,"8202":5.519654915,"8203":5.519654915,"8204":5.519654915,"8205":5.519654915,"8206":5.519654915,"8207":5.519654915,"8208":5.519654915,"8209":5.519654915,"8210":5.519654915,"8211":5.519654915,"8212":5.519654915,"8213":5.519654915,"8214":5.519654915,"8215":5.519654915}}
</Forecast>


INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.541, ('PLOTTING', {'Signals': ['Signal']}))
