INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
          Time_Hourly  Hour  Day  Week    Signal
0 2000-01-01 00:00:00     0    5     0  6.904897
1 2000-01-01 01:00:00     1    5     0  3.570326
2 2000-01-01 02:00:00     2    5     0  3.685613
3 2000-01-01 03:00:00     3    5     0  5.025123
4 2000-01-01 04:00:00     4    5     0  5.401209
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10000 entries, 0 to 9999
Data columns (total 5 columns):
 #   Column       Non-Null Count  Dtype         
---  ------       --------------  -----         
 0   Time_Hourly  10000 non-null  datetime64[ns]
 1   Hour         10000 non-null  int64         
 2   Day          10000 non-null  int64         
 3   Week         10000 non-null  int64         
 4   Signal       10000 non-null  float64       
dtypes: datetime64[ns](1), float64(1), int64(3)
memory usage: 390.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': '_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'Diff_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'RelDiff_Signal'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Transformation': 'CumSum_Signal'}))
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
/home/circleci/.pyenv/versions/3.10.2/lib/python3.10/site-packages/xgboost/compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.
  from pandas import MultiIndex, Int64Index
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.154, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'CumSum_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.182, ('TRAINING', {'Signal': 'Signal', 'Transformation': '_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.669, ('TRAINING', {'Signal': 'Signal', 'Transformation': 'Diff_Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.221, ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 7.0, 3.9357)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 5.0, 2.4129)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 0.0, 3.9722)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 0.2117)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 0.2115)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 0.2111)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 0.1988)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 0.2133)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 0.2113)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 0.2111)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 0.2115)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 0.2106)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 0.2121)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 0.2122)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 0.2122)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 3.8542)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 3.8555)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 3.8558)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 3.8538)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 2.6502)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 3.8544)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 3.8555)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 3.8541)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 3.8544)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 2.5442)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 6.0, 2.6504)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 3.9599)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 3.86)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 3.8616)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 3.8617)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 3.8613)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 2.6791)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 3.8595)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 3.8615)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 3.8597)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 3.8603)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 2.5483)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 3.9492)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('_Signal', 'T+S+R', None, '_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 3.9492)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 7.6543)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 22.0, 8.2616)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 43.0, 8.7021)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 169.0, 8.9321)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_Hour_residue_NoAR'), 25.0, 13.4928)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 29.0, 7.8953)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 57.0, 8.3312)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 15.0, 7.2783)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 85.0, 11.422)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 11.6544)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 1.0, 4.9893)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 4.9893)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 1.6759)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 3.1188)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 2.4894)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 0.5508)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 1.0178)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 2.3427)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 0.3292)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 0.8854)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 1.4116)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 3.529)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 0.2122)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 0.2122)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 6.6314)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 7.1318)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 7.4996)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 9.7304)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 11.979)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 6.6498)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 7.0298)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 6.6853)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 10.2243)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 11.651)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 3.9244)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 3.9244)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 6.4297)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 7.7882)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 8.1353)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 9.4778)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 12.8647)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 7.7521)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 7.1839)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 6.6326)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 10.3925)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 11.6841)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 4.0, 3.9128)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('Diff_Signal', 'T+S+R', None, 'Diff_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 3.9128)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 8.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 6.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 941098713.5822)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 24.5304)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 15.2049)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 7.0, 8.9384)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 940940344.3197)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 56.3434)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 8.7883)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 13.1903)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 9.0, 15.3274)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('RelDiff_Signal', 'T+S+R', None, 'RelDiff_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 940811086.1879)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 41.0, 12.4277)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'), 6.0, 11.5895)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'), 1.0, 1.0725)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'), 10.0, 0.2021)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 24.0, 0.2022)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 45.0, 0.2023)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_HourOfWeek_residue_NoAR'), 171.0, 0.2035)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_Hour_residue_NoAR'), 27.0, 0.2164)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 31.0, 0.2022)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 59.0, 0.2022)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 17.0, 0.2021)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 87.0, 0.2022)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_Seasonal_WeekOfYear_residue_NoAR'), 43.0, 0.2188)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'), 3.0, 0.2123)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'), 3.0, 0.2123)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 9.0, 6.198)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 23.0, 6.3151)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 44.0, 5.917)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 170.0, 2.8002)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_Hour_residue_NoAR'), 26.0, 4.0738)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 30.0, 6.2316)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 58.0, 5.5652)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 16.0, 6.3421)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 86.0, 4.9107)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 42.0, 9.291)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'), 2.0, 3.9742)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'), 2.0, 3.9742)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_DayOfWeek_residue_NoAR'), 11.0, 5.9068)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_EightHourOfWeek_residue_NoAR'), 25.0, 5.8239)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_FourHourOfWeek_residue_NoAR'), 46.0, 5.4232)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_HourOfWeek_residue_NoAR'), 172.0, 2.7245)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR'), 28.0, 4.1522)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_SixHourOfWeek_residue_NoAR'), 32.0, 5.7392)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_ThreeHourOfWeek_residue_NoAR'), 60.0, 5.1517)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_TwelveHourOfWeek_residue_NoAR'), 18.0, 5.8902)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_TwoHourOfWeek_residue_NoAR'), 88.0, 4.5718)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_Seasonal_WeekOfYear_residue_NoAR'), 44.0, 9.2854)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'), 4.0, 3.9415)
INFO:pyaf.std:collectPerformanceIndices : ('MAPE', ('CumSum_Signal', 'T+S+R', None, 'CumSum_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR'), 4.0, 3.9415)
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.011, ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': 'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.041, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': 'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.923, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.975, ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Time_Hourly' TimeMin=2000-03-16T08:00:00.000000 TimeMax=2000-12-13T13:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=24
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal' Length=8192  Min=2.112111305448292 Max=127.92231870190619  Mean=59.95070528361188 StdDev=51.024931438648345
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_Signal' Min=0.9789037513488084 Max=3766.099521448346  Mean=1914.1942109611573 StdDev=1074.5391479727634
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR' [Lag1Trend + Seasonal_DayOfWeek + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_Signal_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek' [Seasonal_DayOfWeek]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2021 MAPE_Forecast=0.1521 MAPE_Test=0.0626
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1013 SMAPE_Forecast=0.0911 SMAPE_Test=0.0618
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8474 MASE_Forecast=0.7423 MASE_Test=0.3279
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=14.768780801646095 CRPS_Forecast=14.949629324852998 CRPS_Test=5.7512887772648815
INFO:pyaf.std:MODEL_L1 L1_Fit=1.8459764695711347 L1_Forecast=1.7116086132932795 L1_Test=0.812476546979489
INFO:pyaf.std:MODEL_L2 L2_Fit=7.924400662919776 L2_Forecast=6.645914516277345 L2_Test=0.9373889722006051
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=0.21393690481366912
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.9510386384351008 MedAE_Forecast=0.9797726826249047 MedAE_Test=0.6814003066565391
INFO:pyaf.std:MODEL_COMPLEXITY 10.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.9789037513488084
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:SEASONAL_MODEL_VALUES CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek 0.27323127262434355 {3: 0.9681642821797141, 4: 0.969014415513584, 5: 0.9665798427594723, 6: 0.9670793008538112, 0: 0.023161351994986035, 1: 0.3314340346279536, 2: 0.6496410215369224}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 24}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.903, ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 24}))
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _Signal             T+S+R  ...  0.1988       0.1516   0.0623
1  None  CumSum_Signal             T+S+R  ...  0.2021       0.1519   0.0628
2  None  CumSum_Signal             T+S+R  ...  0.2021       0.1521   0.0626
3  None  CumSum_Signal             T+S+R  ...  0.2022       0.1521   0.0633
4  None  CumSum_Signal             T+S+R  ...  0.2022       0.1521   0.0611

[5 rows x 10 columns]
Forecast Columns  Index(['Time_Hourly', 'Signal', 'row_number', 'Time_Hourly_Normalized',
       'CumSum_Signal', 'CumSum_Signal_Lag1Trend',
       'CumSum_Signal_Lag1Trend_residue',
       'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek',
       'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue',
       'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR',
       'CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR_residue',
       'CumSum_Signal_Trend', 'CumSum_Signal_Trend_residue',
       'CumSum_Signal_Cycle', 'CumSum_Signal_Cycle_residue',
       'CumSum_Signal_AR', 'CumSum_Signal_AR_residue',
       'CumSum_Signal_TransformedForecast', 'Signal_Forecast',
       'CumSum_Signal_TransformedResidue', 'Signal_Residue',
       'Signal_Forecast_Lower_Bound', 'Signal_Forecast_Upper_Bound',
       'Signal_Forecast_Quantile_5', 'Signal_Forecast_Quantile_10',
       'Signal_Forecast_Quantile_15', 'Signal_Forecast_Quantile_20',
       'Signal_Forecast_Quantile_25', 'Signal_Forecast_Quantile_30',
       'Signal_Forecast_Quantile_35', 'Signal_Forecast_Quantile_40',
       'Signal_Forecast_Quantile_45', 'Signal_Forecast_Quantile_50',
       'Signal_Forecast_Quantile_55', 'Signal_Forecast_Quantile_60',
       'Signal_Forecast_Quantile_65', 'Signal_Forecast_Quantile_70',
       'Signal_Forecast_Quantile_75', 'Signal_Forecast_Quantile_80',
       'Signal_Forecast_Quantile_85', 'Signal_Forecast_Quantile_90',
       'Signal_Forecast_Quantile_95'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 8216 entries, 0 to 8215
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Time_Hourly      8216 non-null   datetime64[ns]
 1   Signal           8192 non-null   float64       
 2   Signal_Forecast  8216 non-null   float64       
dtypes: datetime64[ns](1), float64(2)
memory usage: 192.7 KB
None
Forecasts
              Time_Hourly  Signal  Signal_Forecast
8192 2001-02-20 16:00:00     NaN        45.519655
8193 2001-02-20 17:00:00     NaN        45.519655
8194 2001-02-20 18:00:00     NaN        45.519655
8195 2001-02-20 19:00:00     NaN        45.519655
8196 2001-02-20 20:00:00     NaN        45.519655
8197 2001-02-20 21:00:00     NaN        45.519655
8198 2001-02-20 22:00:00     NaN        45.519655
8199 2001-02-20 23:00:00     NaN        45.519655
8200 2001-02-21 00:00:00     NaN        85.553342
8201 2001-02-21 01:00:00     NaN        85.553342
8202 2001-02-21 02:00:00     NaN        85.553342
8203 2001-02-21 03:00:00     NaN        85.553342
8204 2001-02-21 04:00:00     NaN        85.553342
8205 2001-02-21 05:00:00     NaN        85.553342
8206 2001-02-21 06:00:00     NaN        85.553342
8207 2001-02-21 07:00:00     NaN        85.553342
8208 2001-02-21 08:00:00     NaN        85.553342
8209 2001-02-21 09:00:00     NaN        85.553342
8210 2001-02-21 10:00:00     NaN        85.553342
8211 2001-02-21 11:00:00     NaN        85.553342
8212 2001-02-21 12:00:00     NaN        85.553342
8213 2001-02-21 13:00:00     NaN        85.553342
8214 2001-02-21 14:00:00     NaN        85.553342
8215 2001-02-21 15:00:00     NaN        85.553342


<ModelInfo>
{
    "Signal": {
        "Dataset": {
            "Signal": "Signal",
            "Time": {
                "Horizon": 24,
                "TimeMinMax": [
                    "2000-03-16 08:00:00",
                    "2001-02-20 15:00:00"
                ],
                "TimeVariable": "Time_Hourly"
            },
            "Training_Signal_Length": 8192
        },
        "Model": {
            "AR_Model": "NoAR",
            "Best_Decomposition": "CumSum_Signal_Lag1Trend_residue_Seasonal_DayOfWeek_residue_NoAR",
            "Cycle": "Seasonal_DayOfWeek",
            "Signal_Decomposition_Type": "T+S+R",
            "Signal_Transoformation": "Integration",
            "Trend": "Lag1Trend"
        },
        "Model_Performance": {
            "COMPLEXITY": 10.0,
            "CRPS": 14.949629324852998,
            "LnQ": Infinity,
            "MAE": 1.7116086132932795,
            "MAPE": 0.1521,
            "MASE": 0.7423,
            "MedAE": 0.9797726826249047,
            "RMSE": 6.645914516277345
        }
    }
}
</ModelInfo>




<Forecast>
INFO:pyaf.timing:('OPERATION_START', ('PLOTTING', {'Signals': ['Signal']}))
{"Time_Hourly":{"8168":"2001-02-19T16:00:00.000Z","8169":"2001-02-19T17:00:00.000Z","8170":"2001-02-19T18:00:00.000Z","8171":"2001-02-19T19:00:00.000Z","8172":"2001-02-19T20:00:00.000Z","8173":"2001-02-19T21:00:00.000Z","8174":"2001-02-19T22:00:00.000Z","8175":"2001-02-19T23:00:00.000Z","8176":"2001-02-20T00:00:00.000Z","8177":"2001-02-20T01:00:00.000Z","8178":"2001-02-20T02:00:00.000Z","8179":"2001-02-20T03:00:00.000Z","8180":"2001-02-20T04:00:00.000Z","8181":"2001-02-20T05:00:00.000Z","8182":"2001-02-20T06:00:00.000Z","8183":"2001-02-20T07:00:00.000Z","8184":"2001-02-20T08:00:00.000Z","8185":"2001-02-20T09:00:00.000Z","8186":"2001-02-20T10:00:00.000Z","8187":"2001-02-20T11:00:00.000Z","8188":"2001-02-20T12:00:00.000Z","8189":"2001-02-20T13:00:00.000Z","8190":"2001-02-20T14:00:00.000Z","8191":"2001-02-20T15:00:00.000Z","8192":"2001-02-20T16:00:00.000Z","8193":"2001-02-20T17:00:00.000Z","8194":"2001-02-20T18:00:00.000Z","8195":"2001-02-20T19:00:00.000Z","8196":"2001-02-20T20:00:00.000Z","8197":"2001-02-20T21:00:00.000Z","8198":"2001-02-20T22:00:00.000Z","8199":"2001-02-20T23:00:00.000Z","8200":"2001-02-21T00:00:00.000Z","8201":"2001-02-21T01:00:00.000Z","8202":"2001-02-21T02:00:00.000Z","8203":"2001-02-21T03:00:00.000Z","8204":"2001-02-21T04:00:00.000Z","8205":"2001-02-21T05:00:00.000Z","8206":"2001-02-21T06:00:00.000Z","8207":"2001-02-21T07:00:00.000Z","8208":"2001-02-21T08:00:00.000Z","8209":"2001-02-21T09:00:00.000Z","8210":"2001-02-21T10:00:00.000Z","8211":"2001-02-21T11:00:00.000Z","8212":"2001-02-21T12:00:00.000Z","8213":"2001-02-21T13:00:00.000Z","8214":"2001-02-21T14:00:00.000Z","8215":"2001-02-21T15:00:00.000Z"},"Signal":{"8168":6.1828044847,"8169":4.8593202407,"8170":4.4581210597,"8171":4.6720669544,"8172":5.377316142,"8173":4.6057202027,"8174":3.948168777,"8175":4.488278897,"8176":45.2411256911,"8177":45.8410141926,"8178":45.3992971332,"8179":46.5652340139,"8180":45.1510918179,"8181":44.8075931922,"8182":45.8816710308,"8183":45.5407126867,"8184":44.9860840606,"8185":44.7994054131,"8186":45.9182146446,"8187":46.3021914065,"8188":44.9340494532,"8189":45.2337239728,"8190":44.2087054952,"8191":45.519654915,"8192":null,"8193":null,"8194":null,"8195":null,"8196":null,"8197":null,"8198":null,"8199":null,"8200":null,"8201":null,"8202":null,"8203":null,"8204":null,"8205":null,"8206":null,"8207":null,"8208":null,"8209":null,"8210":null,"8211":null,"8212":null,"8213":null,"8214":null,"8215":null},"Signal_Forecast":{"8168":4.8935970901,"8169":6.1828044847,"8170":4.8593202407,"8171":4.4581210597,"8172":4.6720669544,"8173":5.377316142,"8174":4.6057202027,"8175":3.948168777,"8176":43.2721290337,"8177":45.2411256911,"8178":45.8410141927,"8179":45.3992971332,"8180":46.5652340138,"8181":45.1510918179,"8182":44.8075931921,"8183":45.8816710308,"8184":45.5407126867,"8185":44.9860840607,"8186":44.7994054131,"8187":45.9182146446,"8188":46.3021914065,"8189":44.9340494533,"8190":45.2337239729,"8191":44.2087054952,"8192":45.519654915,"8193":45.519654915,"8194":45.519654915,"8195":45.519654915,"8196":45.519654915,"8197":45.519654915,"8198":45.519654915,"8199":45.519654915,"8200":85.553341933,"8201":85.553341933,"8202":85.553341933,"8203":85.553341933,"8204":85.553341933,"8205":85.553341933,"8206":85.553341933,"8207":85.553341933,"8208":85.553341933,"8209":85.553341933,"8210":85.553341933,"8211":85.553341933,"8212":85.553341933,"8213":85.553341933,"8214":85.553341933,"8215":85.553341933}}
</Forecast>


INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.076, ('PLOTTING', {'Signals': ['Signal']}))
