INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 2}}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.16, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.161, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.178, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.196, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.234, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.072, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.051, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.393, ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 2}}))
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['signal'], 'Horizon': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.016, ('FORECASTING', {'Signals': ['signal'], 'Horizon': 1}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 1}}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
  Transformation DecompositionType  ... Voting  Complexity
0        _signal             T+S+R  ...   22.5       SSSSS
1        _signal             T+S+R  ...   22.5       SSSSS
2        _signal             T+S+R  ...   22.5       SSSSS
3        _signal             T+S+R  ...   22.5       SSSSS
4  CumSum_signal             T+S+R  ...   22.5       MSSSS

[5 rows x 5 columns]
ConstantTrend + Cycle_None + NoAR
PERFS_MAPE_MASE 0.0 None
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
1     1     NaN  ...                      0.54543                      0.54543

[1 rows x 6 columns]
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.114, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.114, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.114, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.152, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.041, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.031, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.096, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.287, ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 1}}))
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['signal'], 'Horizon': 2}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('FORECASTING', {'Signals': ['signal'], 'Horizon': 2}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 2}}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
  Transformation DecompositionType  ... Voting  Complexity
0        _signal             T+S+R  ...   15.0       SSSSS
1        _signal             T+S+R  ...   15.0       SSSSS
2        _signal             T+S+R  ...   15.0       SSSSS
3        _signal             T+S+R  ...   15.0       SSSSS
4  CumSum_signal             T+S+R  ...   15.0       MSSSS

[5 rows x 5 columns]
ConstantTrend + Cycle_None + NoAR
PERFS_MAPE_MASE 0.0 None
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
1     1     NaN  ...                      0.54543                      0.54543
2     2     NaN  ...                          NaN                          NaN

[2 rows x 6 columns]
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.16, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.179, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.193, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.23, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.071, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.051, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.147, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.378, ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 2}}))
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['signal'], 'Horizon': 10}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.126, ('FORECASTING', {'Signals': ['signal'], 'Horizon': 10}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 20}}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
  Transformation DecompositionType  ... Voting  Complexity
0        _signal             T+S+R  ...   22.5       SSSSS
1        _signal             T+S+R  ...   22.5       SSSSS
2        _signal             T+S+R  ...   22.5       SSSSS
3        _signal             T+S+R  ...   22.5       SSSSS
4  CumSum_signal             T+S+R  ...   22.5       MSSSS

[5 rows x 5 columns]
ConstantTrend + Cycle_None + NoAR
PERFS_MAPE_MASE 0.0 None
Forecasts
     date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
1      1     NaN  ...                      0.54543                      0.54543
2      2     NaN  ...                      0.54543                      0.54543
3      3     NaN  ...                          NaN                          NaN
4      4     NaN  ...                          NaN                          NaN
5      5     NaN  ...                          NaN                          NaN
6      6     NaN  ...                          NaN                          NaN
7      7     NaN  ...                          NaN                          NaN
8      8     NaN  ...                          NaN                          NaN
9      9     NaN  ...                          NaN                          NaN
10    10     NaN  ...                          NaN                          NaN

[10 rows x 6 columns]
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.926, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.97, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.975, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.279, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.32, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.517, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': '_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.508, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.055, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.375, ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 20}}))
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['signal'], 'Horizon': 10}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.126, ('FORECASTING', {'Signals': ['signal'], 'Horizon': 10}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 1}}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
  Transformation DecompositionType  ... Voting  Complexity
0        _signal             T+S+R  ...  157.5       SSSSS
1        _signal             T+S+R  ...  157.5       SSSSS
2        _signal             T+S+R  ...  157.5       SSSSS
3        _signal             T+S+R  ...  157.5       SSSSS
4  CumSum_signal             T+S+R  ...  157.5       MSSSS

[5 rows x 5 columns]
ConstantTrend + Cycle_None + NoAR
PERFS_MAPE_MASE 0.0 None
Forecasts
     date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
1      1     NaN  ...                      0.54543                      0.54543
2      2     NaN  ...                      0.54543                      0.54543
3      3     NaN  ...                      0.54543                      0.54543
4      4     NaN  ...                      0.54543                      0.54543
5      5     NaN  ...                      0.54543                      0.54543
6      6     NaN  ...                      0.54543                      0.54543
7      7     NaN  ...                      0.54543                      0.54543
8      8     NaN  ...                      0.54543                      0.54543
9      9     NaN  ...                      0.54543                      0.54543
10    10     NaN  ...                      0.54543                      0.54543

[10 rows x 6 columns]
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.173, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.175, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.192, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.198, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.238, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': 'CumSum_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.038, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': 'CumSum_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.031, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.089, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.329, ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 1}}))
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['signal'], 'Horizon': 4}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.055, ('FORECASTING', {'Signals': ['signal'], 'Horizon': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 6}}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
  Transformation DecompositionType  ... Voting  Complexity
0  CumSum_signal             T+S+R  ...   23.0       MSSSS
1  CumSum_signal             T+S+R  ...   23.0       MSSSS
2  CumSum_signal             T+S+R  ...   23.0       MSSSS
3  CumSum_signal             T+S+R  ...   23.0       MSSSS
4  CumSum_signal             T+S+R  ...   23.0       MSSSS

[5 rows x 5 columns]
ConstantTrend + Cycle_None + NoAR
PERFS_MAPE_MASE 0.0 0.0
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
2     2     NaN  ...                         0.43                         0.43
3     3     NaN  ...                          NaN                          NaN
4     4     NaN  ...                          NaN                          NaN
5     5     NaN  ...                          NaN                          NaN

[4 rows x 6 columns]
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.501, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.52, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.533, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.687, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.729, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': 'CumSum_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.181, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': 'CumSum_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.16, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.369, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.099, ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 6}}))
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['signal'], 'Horizon': 2}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.03, ('FORECASTING', {'Signals': ['signal'], 'Horizon': 2}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 6}}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
  Transformation DecompositionType  ... Voting  Complexity
0  CumSum_signal             T+S+R  ...   80.5       MSSSS
1  CumSum_signal             T+S+R  ...   80.5       MSSSS
2  CumSum_signal             T+S+R  ...   80.5       MSSSS
3  CumSum_signal             T+S+R  ...   80.5       MSSSS
4  CumSum_signal             T+S+R  ...   80.5       MSSSS

[5 rows x 5 columns]
ConstantTrend + Cycle_None + NoAR
PERFS_MAPE_MASE 0.0 0.0
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
2     2     NaN  ...                         0.43                         0.43
3     3     NaN  ...                         0.43                         0.43

[2 rows x 6 columns]
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.502, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.507, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.519, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.685, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.726, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': 'CumSum_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.179, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': 'CumSum_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.161, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.368, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.096, ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 6}}))
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['signal'], 'Horizon': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.017, ('FORECASTING', {'Signals': ['signal'], 'Horizon': 1}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 1}}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
  Transformation DecompositionType  ... Voting  Complexity
0  CumSum_signal             T+S+R  ...   80.5       MSSSS
1  CumSum_signal             T+S+R  ...   80.5       MSSSS
2  CumSum_signal             T+S+R  ...   80.5       MSSSS
3  CumSum_signal             T+S+R  ...   80.5       MSSSS
4  CumSum_signal             T+S+R  ...   80.5       MSSSS

[5 rows x 5 columns]
ConstantTrend + Cycle_None + NoAR
PERFS_MAPE_MASE 0.0 0.0
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
2     2     NaN  ...                         0.43                         0.43

[1 rows x 6 columns]
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.172, ('TRAINING', {'Signal': 'signal', 'Transformation': 'Diff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.174, ('TRAINING', {'Signal': 'signal', 'Transformation': '_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.174, ('TRAINING', {'Signal': 'signal', 'Transformation': 'CumSum_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.198, ('TRAINING', {'Signal': 'signal', 'Transformation': 'RelDiff_signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.238, ('SIGNAL_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', 'None', '_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('MODEL_SELECTION', {'Signal': 'signal', 'Transformations': [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': 'CumSum_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.036, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'signal', 'Model': 'CumSum_signal_ConstantTrend_residue_Cycle_None_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.031, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.087, ('FINALIZE_TRAINING', {'Signals': ['signal'], 'Transformations': [('signal', [('signal', 'None', 'CumSum_', 'T+S+R'), ('signal', 'None', 'Diff_', 'T+S+R'), ('signal', 'None', 'RelDiff_', 'T+S+R'), ('signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.327, ('TRAINING', {'Signals': ['signal'], 'Horizons': {'signal': 1}}))
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['signal'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.094, ('FORECASTING', {'Signals': ['signal'], 'Horizon': 7}))
  Transformation DecompositionType  ... Voting  Complexity
0  CumSum_signal             T+S+R  ...   23.0       MSSSS
1  CumSum_signal             T+S+R  ...   23.0       MSSSS
2  CumSum_signal             T+S+R  ...   23.0       MSSSS
3  CumSum_signal             T+S+R  ...   23.0       MSSSS
4  CumSum_signal             T+S+R  ...   23.0       MSSSS

[5 rows x 5 columns]
ConstantTrend + Cycle_None + NoAR
PERFS_MAPE_MASE 0.0 0.0
Forecasts
    date  signal  ...  signal_Forecast_Lower_Bound  signal_Forecast_Upper_Bound
2     2     NaN  ...                         0.43                         0.43
3     3     NaN  ...                          NaN                          NaN
4     4     NaN  ...                          NaN                          NaN
5     5     NaN  ...                          NaN                          NaN
6     6     NaN  ...                          NaN                          NaN
7     7     NaN  ...                          NaN                          NaN
8     8     NaN  ...                          NaN                          NaN

[7 rows x 6 columns]
