INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signals': ['Quotes'], 'Horizons': {'Quotes': 4}}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['Quotes'], 'Transformations': [('Quotes', 'None', '_', 'T+S+R'), ('Quotes', 'None', 'Diff_', 'T+S+R'), ('Quotes', 'None', 'RelDiff_', 'T+S+R'), ('Quotes', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 40 entries, 0 to 39
Data columns (total 3 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   Index      40 non-null     float64
 1   Quotes     40 non-null     float64
 2   TV.advert  40 non-null     float64
dtypes: float64(3)
memory usage: 1.1 KB
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 40 entries, 0 to 39
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   Index   40 non-null     float64
 1   Quotes  40 non-null     float64
dtypes: float64(2)
memory usage: 772.0 bytes
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 40 entries, 0 to 39
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   Index      40 non-null     float64
 1   TV.advert  40 non-null     float64
dtypes: float64(2)
memory usage: 772.0 bytes
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Quotes', 'Horizon': 4, 'Transformation': '_Quotes', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Quotes', 'Horizon': 4, 'Transformation': 'RelDiff_Quotes', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Quotes', 'Horizon': 4, 'Transformation': 'Diff_Quotes', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Quotes', 'Horizon': 4, 'Transformation': 'CumSum_Quotes', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.784, ('TRAINING', {'Signal': 'Quotes', 'Horizon': 4, 'Transformation': 'RelDiff_Quotes', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.796, ('TRAINING', {'Signal': 'Quotes', 'Horizon': 4, 'Transformation': 'Diff_Quotes', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.797, ('TRAINING', {'Signal': 'Quotes', 'Horizon': 4, 'Transformation': '_Quotes', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.918, ('TRAINING', {'Signal': 'Quotes', 'Horizon': 4, 'Transformation': 'CumSum_Quotes', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.101, ('SIGNAL_TRAINING', {'Signals': ['Quotes'], 'Transformations': [('Quotes', 'None', '_', 'T+S+R'), ('Quotes', 'None', 'Diff_', 'T+S+R'), ('Quotes', 'None', 'RelDiff_', 'T+S+R'), ('Quotes', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['Quotes'], 'Transformations': [('Quotes', [('Quotes', 'None', 'CumSum_', 'T+S+R'), ('Quotes', 'None', 'Diff_', 'T+S+R'), ('Quotes', 'None', 'RelDiff_', 'T+S+R'), ('Quotes', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Quotes', 'Transformations': [('Quotes', 'None', 'CumSum_', 'T+S+R'), ('Quotes', 'None', 'Diff_', 'T+S+R'), ('Quotes', 'None', 'RelDiff_', 'T+S+R'), ('Quotes', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.01, ('MODEL_SELECTION', {'Signal': 'Quotes', 'Transformations': [('Quotes', 'None', 'CumSum_', 'T+S+R'), ('Quotes', 'None', 'Diff_', 'T+S+R'), ('Quotes', 'None', 'RelDiff_', 'T+S+R'), ('Quotes', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Quotes', 'Model': 'Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0]_residue_XGBX(10)'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.204, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Quotes', 'Model': 'Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0]_residue_XGBX(10)'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Quotes'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.205, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Quotes'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.42, ('FINALIZE_TRAINING', {'Signals': ['Quotes'], 'Transformations': [('Quotes', [('Quotes', 'None', 'CumSum_', 'T+S+R'), ('Quotes', 'None', 'Diff_', 'T+S+R'), ('Quotes', 'None', 'RelDiff_', 'T+S+R'), ('Quotes', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.993, ('TRAINING', {'Signals': ['Quotes'], 'Horizons': {'Quotes': 4}}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Index' TimeMin=2002.0 TimeMax=2004.25 TimeDelta=0.08333333333333333 Horizon=4
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Quotes' Length=40  Min=8.39468 Max=18.43898  Mean=13.604347 StdDev=2.369165
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_Quotes' Min=-0.449005 Max=0.388885  Mean=0.003786 StdDev=0.189136
INFO:pyaf.std:EXOGENOUS_DATA ['TV.advert']
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0]_residue_XGBX(10)' [ConstantTrend + NoCycle + XGBX]
INFO:pyaf.std:TREND_DETAIL 'Diff_Quotes_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0]_residue_XGBX(10)' [XGBX]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': 0.193, 'RMSE': 2.9775, 'MAE': 2.2571, 'MASE': 1.6381}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': 0.0722, 'RMSE': 1.1392, 'MAE': 0.9455, 'MASE': 0.6899}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': 0.2422, 'RMSE': 4.2985, 'MAE': 4.0527, 'MASE': 1.7582}
INFO:pyaf.std:MODEL_PERFS Fit STEP=4 {'MAPE': 0.193, 'RMSE': 2.9775, 'MAE': 2.2571, 'MASE': 1.6381}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=4 {'MAPE': 0.0722, 'RMSE': 1.1392, 'MAE': 0.9455, 'MASE': 0.6899}
INFO:pyaf.std:MODEL_PERFS Test STEP=4 {'MAPE': 0.2422, 'RMSE': 4.2985, 'MAE': 4.0527, 'MASE': 1.7582}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'M', 'Trend': 'S', 'Cycle': 'S', 'AR': 'L'} [LMSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.45557878597811685
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_Quotes_ConstantTrend -0.016271
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TRAINING_TIME_IN_SECONDS 4.859
INFO:pyaf.std:COMPETITION_DETAIL_START 'Quotes'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Quotes' 0 {'Transformation': 'Diff_Quotes', 'DecompositionType': 'T+S+R', 'Model': 'Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0]_residue_XGBX(10)', 'Voting': 77.5, 'Complexity': 'LMSSS', 'Forecast_MASE_1': 0.6899, 'Forecast_MASE_H': 0.6899}
INFO:pyaf.std:COMPETITION_DETAIL_END 'Quotes'
INFO:pyaf.timing:('OPERATION_START', ('PLOTTING', {'Signals': ['Quotes']}))
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/insurance_xgbx_Quotes_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/insurance_xgbx_Quotes_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/insurance_xgbx_Quotes_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/insurance_xgbx_Quotes_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/insurance_xgbx_Quotes_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/insurance_xgbx_Quotes_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/insurance_xgbx_Quotes_quantiles_output.png')
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.0, ('PLOTTING', {'Signals': ['Quotes']}))
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['Quotes'], 'Horizon': 4}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.303, ('FORECASTING', {'Signals': ['Quotes'], 'Horizon': 4}))
Forecast Columns  Index(['Index', 'Quotes', 'row_number', 'Index_Normalized', 'scaled_Quotes',
       'Diff_Quotes', 'Diff_Quotes_ConstantTrend',
       'Diff_Quotes_ConstantTrend_residue',
       'Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0]',
       'Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0]_residue', 'TV.advert',
       'Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0]_residue_XGBX(10)',
       'Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0]_residue_XGBX(10)_residue',
       'Quotes_Transformed', 'Diff_Quotes_Trend', 'Diff_Quotes_Trend_residue',
       'Diff_Quotes_Cycle', 'Diff_Quotes_Cycle_residue', 'Diff_Quotes_AR',
       'Diff_Quotes_AR_residue', 'Diff_Quotes_TransformedForecast',
       'Quotes_Forecast', 'Diff_Quotes_TransformedResidue', 'Quotes_Residue',
       'Quotes_Forecast_Lower_Bound', 'Quotes_Forecast_Upper_Bound',
       'Quotes_Forecast_Quantile_50'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 44 entries, 0 to 43
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype  
---  ------           --------------  -----  
 0   Index            44 non-null     float64
 1   Quotes           40 non-null     float64
 2   Quotes_Forecast  44 non-null     float64
dtypes: float64(3)
memory usage: 1.2 KB
None
Forecasts
 [[2005.33333333           nan    9.65746973]
 [2005.41666667           nan    9.46048517]
 [2005.5                  nan    9.26350061]
 [2005.58333333           nan    9.06651605]]


<ModelInfo>
{
    "Quotes": {
        "Complexity": {
            "AR": "L",
            "Cycle": "S",
            "Decomposition": "S",
            "Transformation": "M",
            "Trend": "S"
        },
        "Dataset": {
            "Signal": "Quotes",
            "Time": {
                "Horizon": 4,
                "TimeDelta": "0.08333333333333333",
                "TimeMax": "2005.25",
                "TimeMin": "2002.0",
                "TimeVariable": "Index"
            },
            "Training_Signal_Length": 40
        },
        "Model": {
            "AR_Model": "XGBX",
            "Best_Decomposition": "Diff_Quotes_ConstantTrend_residue_zeroCycle[0.0]_residue_XGBX(10)",
            "Cycle": "NoCycle",
            "Signal_Decomposition_Type": "T+S+R",
            "Signal_Transoformation": "Difference",
            "Trend": "ConstantTrend"
        },
        "Model_Performance": {
            "1": {
                "AUC": 0.3594,
                "DiffSMAPE": 0.0696,
                "ErrorMean": 0.3475,
                "ErrorStdDev": 1.0849,
                "KS": 0.375,
                "KendallTau": 0.2143,
                "Length": 8,
                "LnQ": 0.0567,
                "MAE": 0.9455,
                "MAPE": 0.0722,
                "MASE": 0.6899,
                "MannWhitneyU": 23.0,
                "MedAE": 0.8638,
                "Pearson": 0.5547,
                "R2": 0.228,
                "RMSE": 1.1392,
                "RMSSE": 0.7903,
                "SMAPE": 0.0699,
                "Signal": "Quotes_Forecast_1"
            },
            "4": {
                "AUC": 0.3594,
                "DiffSMAPE": 0.0696,
                "ErrorMean": 0.3475,
                "ErrorStdDev": 1.0849,
                "KS": 0.375,
                "KendallTau": 0.2143,
                "Length": 8,
                "LnQ": 0.0567,
                "MAE": 0.9455,
                "MAPE": 0.0722,
                "MASE": 0.6899,
                "MannWhitneyU": 23.0,
                "MedAE": 0.8638,
                "Pearson": 0.5547,
                "R2": 0.228,
                "RMSE": 1.1392,
                "RMSSE": 0.7903,
                "SMAPE": 0.0699,
                "Signal": "Quotes_Forecast_4"
            }
        },
        "Model_Selection_Criterion": "MASE"
    },
    "Training_Time": 4.859
}
</ModelInfo>




<Forecast>
{"Index":{"36":2005.0,"37":2005.0833333333,"38":2005.1666666667,"39":2005.25,"40":2005.3333333333,"41":2005.4166666667,"42":2005.5,"43":2005.5833333333},"Quotes":{"36":15.47126,"37":18.43898,"38":17.49186,"39":14.49168,"40":null,"41":null,"42":null,"43":null},"Quotes_Forecast":{"36":13.587550795,"37":13.2190056493,"38":12.0318270102,"39":10.8446483712,"40":9.6574697322,"41":9.4604851701,"42":9.263500608,"43":9.0665160458}}
</Forecast>


