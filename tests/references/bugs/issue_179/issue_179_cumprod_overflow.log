INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signals': ['Signal'], 'Horizons': {'Signal': 120}}))
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1000 entries, 0 to 999
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   Time    1000 non-null   datetime64[ns]
 1   Signal  1000 non-null   float64       
dtypes: datetime64[ns](1), float64(1)
memory usage: 15.8 KB
                 Time    Signal
0 2018-01-01 00:00:00  0.886141
1 2018-01-01 01:00:00  0.694292
2 2018-01-01 02:00:00  0.443205
3 2018-01-01 03:00:00  0.364365
4 2018-01-01 04:00:00  0.552261
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Horizon': 120, 'Transformation': '_Signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Horizon': 120, 'Transformation': 'RelDiff_Signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Horizon': 120, 'Transformation': 'Diff_Signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal', 'Horizon': 120, 'Transformation': 'CumSum_Signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 103.288, ('TRAINING', {'Signal': 'Signal', 'Horizon': 120, 'Transformation': 'Diff_Signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 103.795, ('TRAINING', {'Signal': 'Signal', 'Horizon': 120, 'Transformation': 'CumSum_Signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 105.611, ('TRAINING', {'Signal': 'Signal', 'Horizon': 120, 'Transformation': '_Signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 111.711, ('TRAINING', {'Signal': 'Signal', 'Horizon': 120, 'Transformation': 'RelDiff_Signal', 'DecompositionType': 'T+S+R'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 111.908, ('SIGNAL_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', 'None', '_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.883, ('MODEL_SELECTION', {'Signal': 'Signal', 'Transformations': [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.596, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal', 'Model': '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 6.528, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 13.008, ('FINALIZE_TRAINING', {'Signals': ['Signal'], 'Transformations': [('Signal', [('Signal', 'None', 'CumSum_', 'T+S+R'), ('Signal', 'None', 'Diff_', 'T+S+R'), ('Signal', 'None', 'RelDiff_', 'T+S+R'), ('Signal', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 125.49, ('TRAINING', {'Signals': ['Signal'], 'Horizons': {'Signal': 120}}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Time' TimeMin=2018-01-01T00:00:00.000000 TimeMax=2018-01-30T07:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=120
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal' Length=1000  Min=0.000201 Max=0.998443  Mean=0.491926 StdDev=0.287102
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_Signal' Min=0.0 Max=1.0  Mean=0.492591 StdDev=0.287608
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_Signal_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_Signal_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': 6.246, 'RMSE': 0.2839, 'MAE': 0.247, 'MASE': 0.7538}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': 1.598, 'RMSE': 0.2888, 'MAE': 0.2498, 'MASE': 0.6863}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': 5.9186, 'RMSE': 0.3036, 'MAE': 0.2578, 'MASE': 0.7584}
INFO:pyaf.std:MODEL_PERFS Fit STEP=120 {'MAPE': 6.246, 'RMSE': 0.2839, 'MAE': 0.247, 'MASE': 0.7538}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=120 {'MAPE': 1.598, 'RMSE': 0.2888, 'MAE': 0.2498, 'MASE': 0.6863}
INFO:pyaf.std:MODEL_PERFS Test STEP=120 {'MAPE': 5.9186, 'RMSE': 0.3036, 'MAE': 0.2578, 'MASE': 0.7584}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _Signal_ConstantTrend 0.486624
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _Signal_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:TRAINING_TIME_IN_SECONDS 125.301
INFO:pyaf.std:COMPETITION_DETAIL_START 'Signal'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 0 {'Transformation': '_Signal', 'DecompositionType': 'T+S+R', 'Model': '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 5747.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.6863, 'Forecast_MASE_H': 0.6863}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 1 {'Transformation': '_Signal', 'DecompositionType': 'T+S+R', 'Model': '_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 5747.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.6896, 'Forecast_MASE_H': 0.6896}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 2 {'Transformation': 'CumSum_Signal', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_Signal_LinearTrend_residue_Cycle_None_residue_NoAR', 'Voting': 5747.5, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.6883, 'Forecast_MASE_H': 0.6883}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 3 {'Transformation': 'CumSum_Signal', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 5747.5, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.6883, 'Forecast_MASE_H': 0.6883}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 4 {'Transformation': '_Signal', 'DecompositionType': 'T+S+R', 'Model': '_Signal_ConstantTrend_residue_Seasonal_Hour_residue_AR(64)', 'Voting': 5747.5, 'Complexity': 'LSSSS', 'Forecast_MASE_1': 0.6922, 'Forecast_MASE_H': 0.6873}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 5 {'Transformation': '_Signal', 'DecompositionType': 'T+S+R', 'Model': '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_AR(64)', 'Voting': 5747.5, 'Complexity': 'LSSSS', 'Forecast_MASE_1': 0.6847, 'Forecast_MASE_H': 0.6867}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 6 {'Transformation': '_Signal', 'DecompositionType': 'T+S+R', 'Model': '_Signal_LinearTrend_residue_zeroCycle[0.0]_residue_AR(64)', 'Voting': 5747.5, 'Complexity': 'LSSSS', 'Forecast_MASE_1': 0.6842, 'Forecast_MASE_H': 0.6901}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 7 {'Transformation': '_Signal', 'DecompositionType': 'T+S+R', 'Model': '_Signal_ConstantTrend_residue_Seasonal_Hour_residue_NoAR', 'Voting': 5747.4833, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.6919, 'Forecast_MASE_H': 0.6919}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 8 {'Transformation': 'CumSum_Signal', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_Signal_PolyTrend_residue_Cycle_None_residue_NoAR', 'Voting': 5747.4667, 'Complexity': 'MMSSS', 'Forecast_MASE_1': 0.6937, 'Forecast_MASE_H': 0.6937}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 9 {'Transformation': 'CumSum_Signal', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_Signal_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 5747.4667, 'Complexity': 'MMSSS', 'Forecast_MASE_1': 0.6937, 'Forecast_MASE_H': 0.6937}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 10 {'Transformation': '_Signal', 'DecompositionType': 'T+S+R', 'Model': '_Signal_PolyTrend_residue_Seasonal_Hour_residue_NoAR', 'Voting': 5747.3667, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.6956, 'Forecast_MASE_H': 0.6956}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Signal' 11 {'Transformation': '_Signal', 'DecompositionType': 'T+S+R', 'Model': '_Signal_LinearTrend_residue_Seasonal_Hour_residue_AR(64)', 'Voting': 5747.3417, 'Complexity': 'LSSSS', 'Forecast_MASE_1': 0.6978, 'Forecast_MASE_H': 0.6931}
INFO:pyaf.std:COMPETITION_DETAIL_END 'Signal'
INFO:pyaf.timing:('OPERATION_START', ('PLOTTING', {'Signals': ['Signal']}))
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/noise__Signal_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/noise__Signal_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/noise__Signal_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/noise__Signal_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/noise__Signal_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/noise__Signal_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/noise__Signal_quantiles_output.png')
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 51.096, ('PLOTTING', {'Signals': ['Signal']}))
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 120}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.806, ('FORECASTING', {'Signals': ['Signal'], 'Horizon': 120}))
Forecast Columns  Index(['Time', 'Signal', 'row_number', 'Time_Normalized', 'scaled_Signal',
       '_Signal', '_Signal_ConstantTrend', '_Signal_ConstantTrend_residue',
       '_Signal_ConstantTrend_residue_zeroCycle[0.0]',
       '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue',
       '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR',
       '_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR_residue',
       'Signal_Transformed', '_Signal_Trend', '_Signal_Trend_residue',
       '_Signal_Cycle', '_Signal_Cycle_residue', '_Signal_AR',
       '_Signal_AR_residue', '_Signal_TransformedForecast', 'Signal_Forecast',
       '_Signal_TransformedResidue', 'Signal_Residue',
       'Signal_Forecast_Lower_Bound', 'Signal_Forecast_Upper_Bound',
       'Signal_Forecast_Quantile_1', 'Signal_Forecast_Quantile_8',
       'Signal_Forecast_Quantile_15', 'Signal_Forecast_Quantile_22',
       'Signal_Forecast_Quantile_29', 'Signal_Forecast_Quantile_36',
       'Signal_Forecast_Quantile_43', 'Signal_Forecast_Quantile_50',
       'Signal_Forecast_Quantile_57', 'Signal_Forecast_Quantile_64',
       'Signal_Forecast_Quantile_71', 'Signal_Forecast_Quantile_78',
       'Signal_Forecast_Quantile_85', 'Signal_Forecast_Quantile_92',
       'Signal_Forecast_Quantile_99'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1120 entries, 0 to 1119
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Time             1120 non-null   datetime64[ns]
 1   Signal           1000 non-null   float64       
 2   Signal_Forecast  1120 non-null   float64       
dtypes: datetime64[ns](1), float64(2)
memory usage: 26.4 KB
None
Forecasts
                     Time  Signal  Signal_Forecast
1000 2018-02-11 16:00:00     NaN          0.48597
1001 2018-02-11 17:00:00     NaN          0.48597
1002 2018-02-11 18:00:00     NaN          0.48597
1003 2018-02-11 19:00:00     NaN          0.48597
1004 2018-02-11 20:00:00     NaN          0.48597
...                  ...     ...              ...
1115 2018-02-16 11:00:00     NaN          0.48597
1116 2018-02-16 12:00:00     NaN          0.48597
1117 2018-02-16 13:00:00     NaN          0.48597
1118 2018-02-16 14:00:00     NaN          0.48597
1119 2018-02-16 15:00:00     NaN          0.48597

[120 rows x 3 columns]


<ModelInfo>
{
    "Signal": {
        "Complexity": {
            "AR": "S",
            "Cycle": "S",
            "Decomposition": "S",
            "Transformation": "S",
            "Trend": "S"
        },
        "Dataset": {
            "Signal": "Signal",
            "Time": {
                "Horizon": 120,
                "TimeDelta": "<DateOffset: hours=1>",
                "TimeMax": "2018-02-11 15:00:00",
                "TimeMin": "2018-01-01 00:00:00",
                "TimeVariable": "Time"
            },
            "Training_Signal_Length": 1000
        },
        "Model": {
            "AR_Model": "NoAR",
            "Best_Decomposition": "_Signal_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR",
            "Cycle": "NoCycle",
            "Signal_Decomposition_Type": "T+S+R",
            "Signal_Transoformation": "NoTransf",
            "Trend": "ConstantTrend"
        },
        "Model_Performance": {
            "1": {
                "AUC": 0.5284,
                "DiffSMAPE": 0.511,
                "ErrorMean": -0.0195,
                "ErrorStdDev": 0.2881,
                "KS": 0.5284,
                "KendallTau": NaN,
                "Length": 176,
                "LnQ": 157.9413,
                "MAE": 0.2498,
                "MAPE": 1.598,
                "MASE": 0.6863,
                "MannWhitneyU": 16368.0,
                "MedAE": 0.2457,
                "Pearson": 0.0,
                "R2": -0.0046,
                "RMSE": 0.2888,
                "RMSSE": 0.662,
                "SMAPE": 0.5784,
                "Signal": "Signal_Forecast_1"
            },
            "120": {
                "AUC": 0.5284,
                "DiffSMAPE": 0.511,
                "ErrorMean": -0.0195,
                "ErrorStdDev": 0.2881,
                "KS": 0.5284,
                "KendallTau": NaN,
                "Length": 176,
                "LnQ": 157.9413,
                "MAE": 0.2498,
                "MAPE": 1.598,
                "MASE": 0.6863,
                "MannWhitneyU": 16368.0,
                "MedAE": 0.2457,
                "Pearson": 0.0,
                "R2": -0.0046,
                "RMSE": 0.2888,
                "RMSSE": 0.662,
                "SMAPE": 0.5784,
                "Signal": "Signal_Forecast_120"
            }
        },
        "Model_Selection_Criterion": "MASE"
    },
    "Training_Time": 125.301
}
</ModelInfo>




<Forecast>
{"Time":{"880":"2018-02-06T16:00:00.000","881":"2018-02-06T17:00:00.000","882":"2018-02-06T18:00:00.000","883":"2018-02-06T19:00:00.000","884":"2018-02-06T20:00:00.000","885":"2018-02-06T21:00:00.000","886":"2018-02-06T22:00:00.000","887":"2018-02-06T23:00:00.000","888":"2018-02-07T00:00:00.000","889":"2018-02-07T01:00:00.000","890":"2018-02-07T02:00:00.000","891":"2018-02-07T03:00:00.000","892":"2018-02-07T04:00:00.000","893":"2018-02-07T05:00:00.000","894":"2018-02-07T06:00:00.000","895":"2018-02-07T07:00:00.000","896":"2018-02-07T08:00:00.000","897":"2018-02-07T09:00:00.000","898":"2018-02-07T10:00:00.000","899":"2018-02-07T11:00:00.000","900":"2018-02-07T12:00:00.000","901":"2018-02-07T13:00:00.000","902":"2018-02-07T14:00:00.000","903":"2018-02-07T15:00:00.000","904":"2018-02-07T16:00:00.000","905":"2018-02-07T17:00:00.000","906":"2018-02-07T18:00:00.000","907":"2018-02-07T19:00:00.000","908":"2018-02-07T20:00:00.000","909":"2018-02-07T21:00:00.000","910":"2018-02-07T22:00:00.000","911":"2018-02-07T23:00:00.000","912":"2018-02-08T00:00:00.000","913":"2018-02-08T01:00:00.000","914":"2018-02-08T02:00:00.000","915":"2018-02-08T03:00:00.000","916":"2018-02-08T04:00:00.000","917":"2018-02-08T05:00:00.000","918":"2018-02-08T06:00:00.000","919":"2018-02-08T07:00:00.000","920":"2018-02-08T08:00:00.000","921":"2018-02-08T09:00:00.000","922":"2018-02-08T10:00:00.000","923":"2018-02-08T11:00:00.000","924":"2018-02-08T12:00:00.000","925":"2018-02-08T13:00:00.000","926":"2018-02-08T14:00:00.000","927":"2018-02-08T15:00:00.000","928":"2018-02-08T16:00:00.000","929":"2018-02-08T17:00:00.000","930":"2018-02-08T18:00:00.000","931":"2018-02-08T19:00:00.000","932":"2018-02-08T20:00:00.000","933":"2018-02-08T21:00:00.000","934":"2018-02-08T22:00:00.000","935":"2018-02-08T23:00:00.000","936":"2018-02-09T00:00:00.000","937":"2018-02-09T01:00:00.000","938":"2018-02-09T02:00:00.000","939":"2018-02-09T03:00:00.000","940":"2018-02-09T04:00:00.000","941":"2018-02-09T05:00:00.000","942":"2018-02-09T06:00:00.000","943":"2018-02-09T07:00:00.000","944":"2018-02-09T08:00:00.000","945":"2018-02-09T09:00:00.000","946":"2018-02-09T10:00:00.000","947":"2018-02-09T11:00:00.000","948":"2018-02-09T12:00:00.000","949":"2018-02-09T13:00:00.000","950":"2018-02-09T14:00:00.000","951":"2018-02-09T15:00:00.000","952":"2018-02-09T16:00:00.000","953":"2018-02-09T17:00:00.000","954":"2018-02-09T18:00:00.000","955":"2018-02-09T19:00:00.000","956":"2018-02-09T20:00:00.000","957":"2018-02-09T21:00:00.000","958":"2018-02-09T22:00:00.000","959":"2018-02-09T23:00:00.000","960":"2018-02-10T00:00:00.000","961":"2018-02-10T01:00:00.000","962":"2018-02-10T02:00:00.000","963":"2018-02-10T03:00:00.000","964":"2018-02-10T04:00:00.000","965":"2018-02-10T05:00:00.000","966":"2018-02-10T06:00:00.000","967":"2018-02-10T07:00:00.000","968":"2018-02-10T08:00:00.000","969":"2018-02-10T09:00:00.000","970":"2018-02-10T10:00:00.000","971":"2018-02-10T11:00:00.000","972":"2018-02-10T12:00:00.000","973":"2018-02-10T13:00:00.000","974":"2018-02-10T14:00:00.000","975":"2018-02-10T15:00:00.000","976":"2018-02-10T16:00:00.000","977":"2018-02-10T17:00:00.000","978":"2018-02-10T18:00:00.000","979":"2018-02-10T19:00:00.000","980":"2018-02-10T20:00:00.000","981":"2018-02-10T21:00:00.000","982":"2018-02-10T22:00:00.000","983":"2018-02-10T23:00:00.000","984":"2018-02-11T00:00:00.000","985":"2018-02-11T01:00:00.000","986":"2018-02-11T02:00:00.000","987":"2018-02-11T03:00:00.000","988":"2018-02-11T04:00:00.000","989":"2018-02-11T05:00:00.000","990":"2018-02-11T06:00:00.000","991":"2018-02-11T07:00:00.000","992":"2018-02-11T08:00:00.000","993":"2018-02-11T09:00:00.000","994":"2018-02-11T10:00:00.000","995":"2018-02-11T11:00:00.000","996":"2018-02-11T12:00:00.000","997":"2018-02-11T13:00:00.000","998":"2018-02-11T14:00:00.000","999":"2018-02-11T15:00:00.000","1000":"2018-02-11T16:00:00.000","1001":"2018-02-11T17:00:00.000","1002":"2018-02-11T18:00:00.000","1003":"2018-02-11T19:00:00.000","1004":"2018-02-11T20:00:00.000","1005":"2018-02-11T21:00:00.000","1006":"2018-02-11T22:00:00.000","1007":"2018-02-11T23:00:00.000","1008":"2018-02-12T00:00:00.000","1009":"2018-02-12T01:00:00.000","1010":"2018-02-12T02:00:00.000","1011":"2018-02-12T03:00:00.000","1012":"2018-02-12T04:00:00.000","1013":"2018-02-12T05:00:00.000","1014":"2018-02-12T06:00:00.000","1015":"2018-02-12T07:00:00.000","1016":"2018-02-12T08:00:00.000","1017":"2018-02-12T09:00:00.000","1018":"2018-02-12T10:00:00.000","1019":"2018-02-12T11:00:00.000","1020":"2018-02-12T12:00:00.000","1021":"2018-02-12T13:00:00.000","1022":"2018-02-12T14:00:00.000","1023":"2018-02-12T15:00:00.000","1024":"2018-02-12T16:00:00.000","1025":"2018-02-12T17:00:00.000","1026":"2018-02-12T18:00:00.000","1027":"2018-02-12T19:00:00.000","1028":"2018-02-12T20:00:00.000","1029":"2018-02-12T21:00:00.000","1030":"2018-02-12T22:00:00.000","1031":"2018-02-12T23:00:00.000","1032":"2018-02-13T00:00:00.000","1033":"2018-02-13T01:00:00.000","1034":"2018-02-13T02:00:00.000","1035":"2018-02-13T03:00:00.000","1036":"2018-02-13T04:00:00.000","1037":"2018-02-13T05:00:00.000","1038":"2018-02-13T06:00:00.000","1039":"2018-02-13T07:00:00.000","1040":"2018-02-13T08:00:00.000","1041":"2018-02-13T09:00:00.000","1042":"2018-02-13T10:00:00.000","1043":"2018-02-13T11:00:00.000","1044":"2018-02-13T12:00:00.000","1045":"2018-02-13T13:00:00.000","1046":"2018-02-13T14:00:00.000","1047":"2018-02-13T15:00:00.000","1048":"2018-02-13T16:00:00.000","1049":"2018-02-13T17:00:00.000","1050":"2018-02-13T18:00:00.000","1051":"2018-02-13T19:00:00.000","1052":"2018-02-13T20:00:00.000","1053":"2018-02-13T21:00:00.000","1054":"2018-02-13T22:00:00.000","1055":"2018-02-13T23:00:00.000","1056":"2018-02-14T00:00:00.000","1057":"2018-02-14T01:00:00.000","1058":"2018-02-14T02:00:00.000","1059":"2018-02-14T03:00:00.000","1060":"2018-02-14T04:00:00.000","1061":"2018-02-14T05:00:00.000","1062":"2018-02-14T06:00:00.000","1063":"2018-02-14T07:00:00.000","1064":"2018-02-14T08:00:00.000","1065":"2018-02-14T09:00:00.000","1066":"2018-02-14T10:00:00.000","1067":"2018-02-14T11:00:00.000","1068":"2018-02-14T12:00:00.000","1069":"2018-02-14T13:00:00.000","1070":"2018-02-14T14:00:00.000","1071":"2018-02-14T15:00:00.000","1072":"2018-02-14T16:00:00.000","1073":"2018-02-14T17:00:00.000","1074":"2018-02-14T18:00:00.000","1075":"2018-02-14T19:00:00.000","1076":"2018-02-14T20:00:00.000","1077":"2018-02-14T21:00:00.000","1078":"2018-02-14T22:00:00.000","1079":"2018-02-14T23:00:00.000","1080":"2018-02-15T00:00:00.000","1081":"2018-02-15T01:00:00.000","1082":"2018-02-15T02:00:00.000","1083":"2018-02-15T03:00:00.000","1084":"2018-02-15T04:00:00.000","1085":"2018-02-15T05:00:00.000","1086":"2018-02-15T06:00:00.000","1087":"2018-02-15T07:00:00.000","1088":"2018-02-15T08:00:00.000","1089":"2018-02-15T09:00:00.000","1090":"2018-02-15T10:00:00.000","1091":"2018-02-15T11:00:00.000","1092":"2018-02-15T12:00:00.000","1093":"2018-02-15T13:00:00.000","1094":"2018-02-15T14:00:00.000","1095":"2018-02-15T15:00:00.000","1096":"2018-02-15T16:00:00.000","1097":"2018-02-15T17:00:00.000","1098":"2018-02-15T18:00:00.000","1099":"2018-02-15T19:00:00.000","1100":"2018-02-15T20:00:00.000","1101":"2018-02-15T21:00:00.000","1102":"2018-02-15T22:00:00.000","1103":"2018-02-15T23:00:00.000","1104":"2018-02-16T00:00:00.000","1105":"2018-02-16T01:00:00.000","1106":"2018-02-16T02:00:00.000","1107":"2018-02-16T03:00:00.000","1108":"2018-02-16T04:00:00.000","1109":"2018-02-16T05:00:00.000","1110":"2018-02-16T06:00:00.000","1111":"2018-02-16T07:00:00.000","1112":"2018-02-16T08:00:00.000","1113":"2018-02-16T09:00:00.000","1114":"2018-02-16T10:00:00.000","1115":"2018-02-16T11:00:00.000","1116":"2018-02-16T12:00:00.000","1117":"2018-02-16T13:00:00.000","1118":"2018-02-16T14:00:00.000","1119":"2018-02-16T15:00:00.000"},"Signal":{"880":0.9299691497,"881":0.9924861417,"882":0.7533794125,"883":0.8302651862,"884":0.3957385372,"885":0.5961961175,"886":0.7209066107,"887":0.1023889659,"888":0.1178092903,"889":0.5755566329,"890":0.5793467985,"891":0.6819654119,"892":0.0044993242,"893":0.8848743641,"894":0.577506534,"895":0.9721794857,"896":0.6873476689,"897":0.4446514322,"898":0.5751807878,"899":0.0297843281,"900":0.4603940886,"901":0.5078854663,"902":0.6816151768,"903":0.5310066588,"904":0.1542675016,"905":0.4583581413,"906":0.4790755769,"907":0.0747275179,"908":0.9623347949,"909":0.8824086631,"910":0.096430631,"911":0.4559628339,"912":0.1838954083,"913":0.8068723776,"914":0.989050304,"915":0.8933545627,"916":0.5424621177,"917":0.8956904306,"918":0.586950215,"919":0.5819066414,"920":0.9374314353,"921":0.4821396212,"922":0.3103484514,"923":0.0718290449,"924":0.1667140847,"925":0.8990155167,"926":0.5504604664,"927":0.9462248569,"928":0.3404536567,"929":0.9811008004,"930":0.8500588536,"931":0.3712730215,"932":0.2895262265,"933":0.2367280815,"934":0.8756019323,"935":0.0021100485,"936":0.0092902861,"937":0.2955812763,"938":0.5258777153,"939":0.1156929165,"940":0.9186347787,"941":0.3682029041,"942":0.4973594212,"943":0.0909375559,"944":0.3402330482,"945":0.3220261746,"946":0.364723415,"947":0.3363460856,"948":0.758660928,"949":0.141792789,"950":0.5089262979,"951":0.4771904801,"952":0.2620680122,"953":0.5093016375,"954":0.9414523892,"955":0.9457451274,"956":0.1779182755,"957":0.1515661905,"958":0.3717091588,"959":0.9854011519,"960":0.1825705712,"961":0.8121767577,"962":0.0032633813,"963":0.8727099892,"964":0.6649642581,"965":0.9061702114,"966":0.5572087444,"967":0.8803658911,"968":0.2128799398,"969":0.0844670009,"970":0.2750519982,"971":0.2637274479,"972":0.8988754228,"973":0.8920487656,"974":0.4599195378,"975":0.479496368,"976":0.6514797335,"977":0.5646778197,"978":0.6378122744,"979":0.3852004519,"980":0.0771325841,"981":0.6714737164,"982":0.6522016253,"983":0.1221320753,"984":0.9133881024,"985":0.8066366633,"986":0.0742252139,"987":0.3930276604,"988":0.6372829358,"989":0.0339563542,"990":0.4844657859,"991":0.7838623137,"992":0.7359724856,"993":0.2443726584,"994":0.5478434654,"995":0.1189106466,"996":0.0139679933,"997":0.5210926062,"998":0.8919114881,"999":0.0301611205,"1000":null,"1001":null,"1002":null,"1003":null,"1004":null,"1005":null,"1006":null,"1007":null,"1008":null,"1009":null,"1010":null,"1011":null,"1012":null,"1013":null,"1014":null,"1015":null,"1016":null,"1017":null,"1018":null,"1019":null,"1020":null,"1021":null,"1022":null,"1023":null,"1024":null,"1025":null,"1026":null,"1027":null,"1028":null,"1029":null,"1030":null,"1031":null,"1032":null,"1033":null,"1034":null,"1035":null,"1036":null,"1037":null,"1038":null,"1039":null,"1040":null,"1041":null,"1042":null,"1043":null,"1044":null,"1045":null,"1046":null,"1047":null,"1048":null,"1049":null,"1050":null,"1051":null,"1052":null,"1053":null,"1054":null,"1055":null,"1056":null,"1057":null,"1058":null,"1059":null,"1060":null,"1061":null,"1062":null,"1063":null,"1064":null,"1065":null,"1066":null,"1067":null,"1068":null,"1069":null,"1070":null,"1071":null,"1072":null,"1073":null,"1074":null,"1075":null,"1076":null,"1077":null,"1078":null,"1079":null,"1080":null,"1081":null,"1082":null,"1083":null,"1084":null,"1085":null,"1086":null,"1087":null,"1088":null,"1089":null,"1090":null,"1091":null,"1092":null,"1093":null,"1094":null,"1095":null,"1096":null,"1097":null,"1098":null,"1099":null,"1100":null,"1101":null,"1102":null,"1103":null,"1104":null,"1105":null,"1106":null,"1107":null,"1108":null,"1109":null,"1110":null,"1111":null,"1112":null,"1113":null,"1114":null,"1115":null,"1116":null,"1117":null,"1118":null,"1119":null},"Signal_Forecast":{"880":0.48596962,"881":0.48596962,"882":0.48596962,"883":0.48596962,"884":0.48596962,"885":0.48596962,"886":0.48596962,"887":0.48596962,"888":0.48596962,"889":0.48596962,"890":0.48596962,"891":0.48596962,"892":0.48596962,"893":0.48596962,"894":0.48596962,"895":0.48596962,"896":0.48596962,"897":0.48596962,"898":0.48596962,"899":0.48596962,"900":0.48596962,"901":0.48596962,"902":0.48596962,"903":0.48596962,"904":0.48596962,"905":0.48596962,"906":0.48596962,"907":0.48596962,"908":0.48596962,"909":0.48596962,"910":0.48596962,"911":0.48596962,"912":0.48596962,"913":0.48596962,"914":0.48596962,"915":0.48596962,"916":0.48596962,"917":0.48596962,"918":0.48596962,"919":0.48596962,"920":0.48596962,"921":0.48596962,"922":0.48596962,"923":0.48596962,"924":0.48596962,"925":0.48596962,"926":0.48596962,"927":0.48596962,"928":0.48596962,"929":0.48596962,"930":0.48596962,"931":0.48596962,"932":0.48596962,"933":0.48596962,"934":0.48596962,"935":0.48596962,"936":0.48596962,"937":0.48596962,"938":0.48596962,"939":0.48596962,"940":0.48596962,"941":0.48596962,"942":0.48596962,"943":0.48596962,"944":0.48596962,"945":0.48596962,"946":0.48596962,"947":0.48596962,"948":0.48596962,"949":0.48596962,"950":0.48596962,"951":0.48596962,"952":0.48596962,"953":0.48596962,"954":0.48596962,"955":0.48596962,"956":0.48596962,"957":0.48596962,"958":0.48596962,"959":0.48596962,"960":0.48596962,"961":0.48596962,"962":0.48596962,"963":0.48596962,"964":0.48596962,"965":0.48596962,"966":0.48596962,"967":0.48596962,"968":0.48596962,"969":0.48596962,"970":0.48596962,"971":0.48596962,"972":0.48596962,"973":0.48596962,"974":0.48596962,"975":0.48596962,"976":0.48596962,"977":0.48596962,"978":0.48596962,"979":0.48596962,"980":0.48596962,"981":0.48596962,"982":0.48596962,"983":0.48596962,"984":0.48596962,"985":0.48596962,"986":0.48596962,"987":0.48596962,"988":0.48596962,"989":0.48596962,"990":0.48596962,"991":0.48596962,"992":0.48596962,"993":0.48596962,"994":0.48596962,"995":0.48596962,"996":0.48596962,"997":0.48596962,"998":0.48596962,"999":0.48596962,"1000":0.48596962,"1001":0.48596962,"1002":0.48596962,"1003":0.48596962,"1004":0.48596962,"1005":0.48596962,"1006":0.48596962,"1007":0.48596962,"1008":0.48596962,"1009":0.48596962,"1010":0.48596962,"1011":0.48596962,"1012":0.48596962,"1013":0.48596962,"1014":0.48596962,"1015":0.48596962,"1016":0.48596962,"1017":0.48596962,"1018":0.48596962,"1019":0.48596962,"1020":0.48596962,"1021":0.48596962,"1022":0.48596962,"1023":0.48596962,"1024":0.48596962,"1025":0.48596962,"1026":0.48596962,"1027":0.48596962,"1028":0.48596962,"1029":0.48596962,"1030":0.48596962,"1031":0.48596962,"1032":0.48596962,"1033":0.48596962,"1034":0.48596962,"1035":0.48596962,"1036":0.48596962,"1037":0.48596962,"1038":0.48596962,"1039":0.48596962,"1040":0.48596962,"1041":0.48596962,"1042":0.48596962,"1043":0.48596962,"1044":0.48596962,"1045":0.48596962,"1046":0.48596962,"1047":0.48596962,"1048":0.48596962,"1049":0.48596962,"1050":0.48596962,"1051":0.48596962,"1052":0.48596962,"1053":0.48596962,"1054":0.48596962,"1055":0.48596962,"1056":0.48596962,"1057":0.48596962,"1058":0.48596962,"1059":0.48596962,"1060":0.48596962,"1061":0.48596962,"1062":0.48596962,"1063":0.48596962,"1064":0.48596962,"1065":0.48596962,"1066":0.48596962,"1067":0.48596962,"1068":0.48596962,"1069":0.48596962,"1070":0.48596962,"1071":0.48596962,"1072":0.48596962,"1073":0.48596962,"1074":0.48596962,"1075":0.48596962,"1076":0.48596962,"1077":0.48596962,"1078":0.48596962,"1079":0.48596962,"1080":0.48596962,"1081":0.48596962,"1082":0.48596962,"1083":0.48596962,"1084":0.48596962,"1085":0.48596962,"1086":0.48596962,"1087":0.48596962,"1088":0.48596962,"1089":0.48596962,"1090":0.48596962,"1091":0.48596962,"1092":0.48596962,"1093":0.48596962,"1094":0.48596962,"1095":0.48596962,"1096":0.48596962,"1097":0.48596962,"1098":0.48596962,"1099":0.48596962,"1100":0.48596962,"1101":0.48596962,"1102":0.48596962,"1103":0.48596962,"1104":0.48596962,"1105":0.48596962,"1106":0.48596962,"1107":0.48596962,"1108":0.48596962,"1109":0.48596962,"1110":0.48596962,"1111":0.48596962,"1112":0.48596962,"1113":0.48596962,"1114":0.48596962,"1115":0.48596962,"1116":0.48596962,"1117":0.48596962,"1118":0.48596962,"1119":0.48596962}}
</Forecast>


